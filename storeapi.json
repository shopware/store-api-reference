{
  "openapi": "3.0.0",
  "info": {
    "title": "Shopware Store API",
    "description": "This endpoint reference contains an overview of all endpoints comprising the Shopware Store API",
    "version": "6.5.9999999.9999999-dev"
  },
  "servers": [
    {
      "url": "http://localhost:8000/store-api"
    }
  ],
  "components": {
    "schemas": {
      "success": {
        "required": [
          "data"
        ],
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/meta"
          },
          "links": {
            "description": "Link members related to the primary data.",
            "allOf": [
              {
                "$ref": "#/components/schemas/links"
              },
              {
                "$ref": "#/components/schemas/pagination"
              }
            ]
          },
          "data": {
            "$ref": "#/components/schemas/data"
          },
          "included": {
            "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/resource"
            },
            "uniqueItems": true
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "failure": {
        "required": [
          "errors"
        ],
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/meta"
          },
          "links": {
            "$ref": "#/components/schemas/links"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/error"
            },
            "uniqueItems": true
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "info": {
        "required": [
          "meta"
        ],
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/meta"
          },
          "links": {
            "$ref": "#/components/schemas/links"
          },
          "jsonapi": {
            "$ref": "#/components/schemas/jsonapi"
          }
        },
        "type": "object"
      },
      "meta": {
        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
        "type": "object",
        "additionalProperties": true
      },
      "data": {
        "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
        "oneOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/resource"
            },
            "uniqueItems": true
          }
        ]
      },
      "resource": {
        "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
        "required": [
          "type",
          "id"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/attributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/relationships"
          },
          "links": {
            "$ref": "#/components/schemas/links"
          },
          "meta": {
            "$ref": "#/components/schemas/meta"
          }
        },
        "type": "object"
      },
      "relationshipLinks": {
        "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
        "properties": {
          "self": {
            "allOf": [
              {
                "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              {
                "$ref": "#/components/schemas/link"
              }
            ]
          },
          "related": {
            "$ref": "#/components/schemas/link"
          }
        },
        "type": "object",
        "additionalProperties": true
      },
      "links": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/link"
        }
      },
      "link": {
        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
        "oneOf": [
          {
            "description": "A string containing the link's URL.",
            "type": "string",
            "format": "uri-reference"
          },
          {
            "type": "object",
            "required": [
              "href"
            ],
            "properties": {
              "href": {
                "description": "A string containing the link's URL.",
                "type": "string",
                "format": "uri-reference"
              },
              "meta": {
                "$ref": "#/components/schemas/meta"
              }
            }
          }
        ]
      },
      "attributes": {
        "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
        "type": "object",
        "additionalProperties": true
      },
      "relationships": {
        "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
        "type": "object",
        "anyOf": [
          {
            "required": [
              "data"
            ]
          },
          {
            "required": [
              "meta"
            ]
          },
          {
            "required": [
              "links"
            ]
          },
          {
            "type": "object",
            "properties": {
              "links": {
                "$ref": "#/components/schemas/relationshipLinks"
              },
              "data": {
                "description": "Member, whose value represents \"resource linkage\".",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/relationshipToOne"
                  },
                  {
                    "$ref": "#/components/schemas/relationshipToMany"
                  }
                ]
              }
            }
          }
        ],
        "additionalProperties": false
      },
      "relationshipToOne": {
        "allOf": [
          {
            "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object."
          },
          {
            "$ref": "#/components/schemas/linkage"
          }
        ]
      },
      "relationshipToMany": {
        "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/linkage"
        },
        "uniqueItems": true
      },
      "linkage": {
        "description": "The \"type\" and \"id\" to non-empty members.",
        "required": [
          "type",
          "id"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "meta": {
            "$ref": "#/components/schemas/meta"
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "pagination": {
        "properties": {
          "first": {
            "description": "The first page of data",
            "type": "string",
            "format": "uri-reference"
          },
          "last": {
            "description": "The last page of data",
            "type": "string",
            "format": "uri-reference"
          },
          "prev": {
            "description": "The previous page of data",
            "type": "string",
            "format": "uri-reference"
          },
          "next": {
            "description": "The next page of data",
            "type": "string",
            "format": "uri-reference"
          }
        },
        "type": "object"
      },
      "jsonapi": {
        "description": "An object describing the server's implementation",
        "properties": {
          "version": {
            "type": "string"
          },
          "meta": {
            "$ref": "#/components/schemas/meta"
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "error": {
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for this particular occurrence of the problem."
          },
          "links": {
            "$ref": "#/components/schemas/links"
          },
          "status": {
            "type": "string",
            "description": "The HTTP status code applicable to this problem, expressed as a string value."
          },
          "code": {
            "type": "string",
            "description": "An application-specific error code, expressed as a string value."
          },
          "title": {
            "type": "string",
            "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization."
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem."
          },
          "description": {
            "type": "string",
            "description": "A human-readable description of the problem."
          },
          "source": {
            "type": "object",
            "properties": {
              "pointer": {
                "type": "string",
                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute]."
              },
              "parameter": {
                "type": "string",
                "description": "A string indicating which query parameter caused the error."
              }
            }
          },
          "meta": {
            "$ref": "#/components/schemas/meta"
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "AclRole": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of ACL role."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "AdvancedSearchBoosting": {
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "AdvancedSearchConfig": {
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "hitCount": {
            "properties": {
              "product": {
                "properties": {
                  "maxSuggestCount": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "maxSearchCount": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "type": "object"
              },
              "product_manufacturer": {
                "properties": {
                  "maxSuggestCount": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "maxSearchCount": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "type": "object"
              },
              "category": {
                "properties": {
                  "maxSuggestCount": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "maxSearchCount": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "AdvancedSearchConfigField": {
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "AdvancedSearchEntityStream": {
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "AdvancedSearchEntityStreamFilter": {
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "App": {
        "description": "Added since version: 6.3.1.0",
        "required": [
          "createdAt",
          "label"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of App."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          }
        },
        "type": "object"
      },
      "AppActionButton": {
        "description": "Added since version: 6.3.1.0",
        "required": [
          "createdAt",
          "label"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of app's action button."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          }
        },
        "type": "object"
      },
      "AppAdministrationSnippet": {
        "description": "Added since version: 6.4.15.0",
        "required": [
          "value",
          "appId",
          "localeId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of app snippet."
          },
          "value": {
            "type": "string",
            "description": "Value of App Administration Snippet."
          },
          "appId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of app in app snippet."
          },
          "localeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity that specifies the language and country."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "AppCmsBlock": {
        "description": "Added since version: 6.4.2.0",
        "required": [
          "createdAt",
          "label"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of app's CMS block."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          }
        },
        "type": "object"
      },
      "AppFlowAction": {
        "description": "Added since version: 6.4.10.0",
        "required": [
          "createdAt",
          "label"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of app's flow action."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          }
        },
        "type": "object"
      },
      "AppFlowEvent": {
        "description": "Added since version: 6.5.2.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of App flow event."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "AppPaymentMethod": {
        "description": "Added since version: 6.4.1.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of app's payment method."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "AppScriptCondition": {
        "description": "Added since version: 6.4.10.3",
        "required": [
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of app's script condition."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          }
        },
        "type": "object"
      },
      "AppTemplate": {
        "description": "Added since version: 6.3.1.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of App template."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "B2bBusinessPartner": {
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "customFields": {
            "type": "object"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "B2bEmployee": {
        "required": [
          "firstName",
          "lastName",
          "email",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "active": {
            "type": "boolean"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "role": {
            "$ref": "#/components/schemas/B2bRole"
          }
        },
        "type": "object"
      },
      "B2bOrderEmployee": {
        "required": [
          "firstName",
          "lastName",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "B2bPermission": {
        "required": [
          "name",
          "group",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "name": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "dependencies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "B2bRole": {
        "required": [
          "name",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "name": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false
            }
          },
          "customFields": {
            "type": "object"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "CategoryJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "displayNestedProducts",
              "type",
              "productAssignmentType",
              "createdAt",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "versionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "parentId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "parentVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "afterCategoryId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "afterCategoryVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "mediaId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "displayNestedProducts": {
                "type": "boolean"
              },
              "breadcrumb": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false
                },
                "readOnly": true
              },
              "level": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "path": {
                "type": "string",
                "readOnly": true
              },
              "childCount": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "type": {
                "type": "string"
              },
              "productAssignmentType": {
                "type": "string"
              },
              "visible": {
                "type": "boolean"
              },
              "active": {
                "type": "boolean"
              },
              "cmsPageIdSwitched": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean"
              },
              "visibleChildCount": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "integer",
                "format": "int64"
              },
              "name": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "linkType": {
                "type": "string"
              },
              "internalLink": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "externalLink": {
                "type": "string"
              },
              "linkNewTab": {
                "type": "boolean"
              },
              "description": {
                "type": "string"
              },
              "metaTitle": {
                "type": "string"
              },
              "metaDescription": {
                "type": "string"
              },
              "keywords": {
                "type": "string"
              },
              "cmsPageId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "cmsPageVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "customEntityTypeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "parent": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/3adbdb3ac060038aa0e6e6c138ef9873/parent"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "category"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "d0e45878043844ffc41aac437e86b602"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "children": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/3adbdb3ac060038aa0e6e6c138ef9873/children"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "category"
                            },
                            "id": {
                              "type": "string",
                              "example": "268184c12df027f536154d099d497b31"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/3adbdb3ac060038aa0e6e6c138ef9873/media"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "media"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "62933a2951ef01f4eafd9bdf4d3cd2f0"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "cmsPage": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/3adbdb3ac060038aa0e6e6c138ef9873/cmsPage"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "cms_page"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "7b1460918b1abb93311108f3dc021c9b"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "seoUrls": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/category/3adbdb3ac060038aa0e6e6c138ef9873/seoUrls"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "seo_url"
                            },
                            "id": {
                              "type": "string",
                              "example": "5321b5a71127b8b98cdd4b068ad56c4c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Category": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "displayNestedProducts",
          "type",
          "productAssignmentType",
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of category's version."
          },
          "parentId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of parent category."
          },
          "parentVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of parent category's version."
          },
          "afterCategoryId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the category under which the new category is to be created."
          },
          "afterCategoryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the category's version under which the new category is to be created."
          },
          "mediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of media added to identify category."
          },
          "displayNestedProducts": {
            "type": "boolean",
            "description": "Shows nested categories on a product category page."
          },
          "breadcrumb": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false
            },
            "readOnly": true,
            "description": "Breadcrumbs offer the users on the website the option to quickly find their way back to the homepage or another level of the website using internal links."
          },
          "level": {
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "description": "An integer value that denotes the level of nesting of a particular category located in an hierarchical category tree. "
          },
          "path": {
            "type": "string",
            "readOnly": true,
            "description": "A relative URL to the category."
          },
          "childCount": {
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "description": "Number of categories below the main category."
          },
          "type": {
            "type": "string",
            "description": "Type of categories like `page`, `folder`, `link`."
          },
          "productAssignmentType": {
            "type": "string",
            "description": "Type of product assignment: Dynamic product group as or `product_stream` or Manual assignment as `product`."
          },
          "visible": {
            "type": "boolean",
            "description": "Displays categories on category page when true."
          },
          "active": {
            "type": "boolean",
            "description": "When boolean value is `true`, the category is listed for selection."
          },
          "cmsPageIdSwitched": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean"
          },
          "visibleChildCount": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "Name of the category."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "linkType": {
            "type": "string",
            "description": "linkType : `external`, `category`, `product`, `landing_page`."
          },
          "internalLink": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "When a particular category is clicked, it gets redirected to internal link."
          },
          "externalLink": {
            "type": "string",
            "description": "When a particular category is clicked, it gets redirected to external link."
          },
          "linkNewTab": {
            "type": "boolean",
            "description": "Category opens in a new tab of the browser."
          },
          "description": {
            "type": "string",
            "description": "Information about the category."
          },
          "metaTitle": {
            "type": "string",
            "description": "A page title indexed by search engines and appears in search results listings."
          },
          "metaDescription": {
            "type": "string",
            "description": "A short description of the page for search results listings."
          },
          "keywords": {
            "type": "string",
            "description": "Keywords that help to search the category."
          },
          "cmsPageId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of CMS page."
          },
          "cmsPageVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of CMS page's version."
          },
          "customEntityTypeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "parent": {
            "$ref": "#/components/schemas/Category"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            }
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          },
          "cmsPage": {
            "$ref": "#/components/schemas/CmsPage"
          },
          "seoUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SeoUrl"
            }
          }
        },
        "type": "object"
      },
      "CmsBlock": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "position",
          "type",
          "sectionId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "Order of the block indicated by number like 0, 1, 2,..."
          },
          "type": {
            "type": "string",
            "description": "Type of block can be 'image`, `text`, 'product-listing`, `image-two-column`, etc."
          },
          "name": {
            "type": "string",
            "description": "Unique name of the CMS Block."
          },
          "sectionPosition": {
            "type": "string",
            "description": "Position of the section. It can either be `main` or `sidebar`."
          },
          "marginTop": {
            "type": "string",
            "description": "Defines the margin area on the top of an element."
          },
          "marginBottom": {
            "type": "string",
            "description": "Defines for the margin area on the bottom of an element."
          },
          "marginLeft": {
            "type": "string",
            "description": "Defines for the margin area on the left of an element."
          },
          "marginRight": {
            "type": "string",
            "description": "Defines the margin area on the right of an element."
          },
          "backgroundColor": {
            "type": "string",
            "description": "Defines the background color of an element."
          },
          "backgroundMediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of background media."
          },
          "backgroundMediaMode": {
            "type": "string",
            "description": "Background media mode accept values `cover`, `auto`, `contain`."
          },
          "cssClass": {
            "type": "string",
            "description": "One or more CSS classes added and separated by spaces."
          },
          "visibility": {
            "properties": {
              "mobile": {
                "type": "boolean"
              },
              "desktop": {
                "type": "boolean"
              },
              "tablet": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "sectionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of section."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of CMS Block version."
          },
          "cmsSectionVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of CMS Section version."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "backgroundMedia": {
            "$ref": "#/components/schemas/Media"
          },
          "slots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CmsSlot"
            }
          }
        },
        "type": "object"
      },
      "CmsPage": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "type",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of CMS page."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of CMS page version."
          },
          "name": {
            "type": "string",
            "description": "Name of the CMS page."
          },
          "type": {
            "type": "string",
            "description": "CMS page types can be `landingpage`, `page`, `product_list`, `product_detail`."
          },
          "entity": {
            "type": "string",
            "description": "This field will be implemented in the future."
          },
          "cssClass": {
            "type": "string",
            "description": "One or more CSS classes added and separated by spaces."
          },
          "config": {
            "properties": {
              "backgroundColor": {
                "type": "string",
                "description": "Background color of the CMS page."
              }
            },
            "type": "object"
          },
          "previewMediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of media to be previewed."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CmsSection"
            }
          },
          "previewMedia": {
            "$ref": "#/components/schemas/Media"
          },
          "landingPages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LandingPage"
            }
          }
        },
        "type": "object"
      },
      "CmsSection": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "position",
          "type",
          "pageId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of CMS section."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "Position of occurrence of each section denoted by numerical values 0, 1, 2..."
          },
          "type": {
            "type": "string",
            "description": "Types of sections can be `sidebar` or `fullwidth`."
          },
          "name": {
            "type": "string",
            "description": "Name of the CMS section defined."
          },
          "sizingMode": {
            "type": "string",
            "description": "Sizing mode can be `boxed` or `full_width`."
          },
          "mobileBehavior": {
            "type": "string",
            "description": "Hides the sidebar on mobile viewports. It can hold values such as 'mobile', 'wrap', any other string or be unset."
          },
          "backgroundColor": {
            "type": "string",
            "description": "Background color of CMS page."
          },
          "backgroundMediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of CMS section's background media."
          },
          "backgroundMediaMode": {
            "type": "string",
            "description": "Background media mode can be `cover`, `auto` or `contain`."
          },
          "cssClass": {
            "type": "string",
            "description": "One or more CSS classes added and separated by spaces."
          },
          "pageId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of page where CMS section is defined."
          },
          "visibility": {
            "properties": {
              "mobile": {
                "type": "boolean",
                "description": "When `true`, CMS layout can be viewed in mobile mode."
              },
              "desktop": {
                "type": "boolean",
                "description": "When `true`, CMS layout can be viewed in desktop mode."
              },
              "tablet": {
                "type": "boolean",
                "description": "When `true`, CMS layout can be viewed in tablet mode."
              }
            },
            "type": "object"
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "cmsPageVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of CMS page version."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "page": {
            "$ref": "#/components/schemas/CmsPage"
          },
          "backgroundMedia": {
            "$ref": "#/components/schemas/Media"
          },
          "blocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CmsBlock"
            }
          }
        },
        "type": "object"
      },
      "CmsSlot": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "type",
          "slot",
          "blockId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of CMS slot."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "type": {
            "type": "string",
            "description": "It indicates the types of content that can be defined within the slot which includes `image`, `text`, `form`, `product-listing`, `category-navigation`, `product-box`, `buy-box`, `sidebar-filter`, etc."
          },
          "slot": {
            "type": "string",
            "description": "Key-value pair to configure which element to be shown in which slot."
          },
          "locked": {
            "type": "boolean",
            "description": "When locked, then CMS slot config element cannot be configured."
          },
          "config": {
            "type": "object",
            "description": "Specifies detailed information about how the component is to be rendered."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "data": {
            "type": "object",
            "readOnly": true,
            "description": "Each cms slot (element) has a config that has values defined in the admin. When cms loads, each Resolver class adds the resolved config data to this value."
          },
          "blockId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of CMS block where slot is defined."
          },
          "fieldConfig": {
            "type": "object",
            "description": "Con info of cms slot"
          },
          "cmsBlockVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of CMS block version."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "block": {
            "$ref": "#/components/schemas/CmsBlock"
          },
          "VersionId": {
            "description": "Unique identity of CMS slot's version."
          }
        },
        "type": "object"
      },
      "CountryJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "createdAt",
              "name",
              "addressFormat"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "iso": {
                "type": "string"
              },
              "position": {
                "type": "integer",
                "format": "int64"
              },
              "active": {
                "type": "boolean"
              },
              "shippingAvailable": {
                "type": "boolean"
              },
              "iso3": {
                "type": "string"
              },
              "displayStateInRegistration": {
                "type": "boolean"
              },
              "forceStateInRegistration": {
                "type": "boolean"
              },
              "checkVatIdPattern": {
                "type": "boolean"
              },
              "vatIdRequired": {
                "type": "boolean"
              },
              "vatIdPattern": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "customerTax": {
                "required": [
                  "enabled",
                  "currencyId",
                  "amount"
                ],
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "currencyId": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "number",
                    "format": "float"
                  }
                },
                "type": "object"
              },
              "companyTax": {
                "required": [
                  "enabled",
                  "currencyId",
                  "amount"
                ],
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "currencyId": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "number",
                    "format": "float"
                  }
                },
                "type": "object"
              },
              "postalCodeRequired": {
                "type": "boolean"
              },
              "checkPostalCodePattern": {
                "type": "boolean"
              },
              "checkAdvancedPostalCodePattern": {
                "type": "boolean"
              },
              "advancedPostalCodePattern": {
                "type": "string"
              },
              "addressFormat": {
                "type": "object"
              },
              "defaultPostalCodePattern": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "states": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/country/59716c97497eb9694541f7c3d37b1a4d/states"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "country_state"
                            },
                            "id": {
                              "type": "string",
                              "example": "34d955a0df5f7af9c9b4e4dccb3c3564"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Country": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt",
          "name",
          "addressFormat"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the country."
          },
          "name": {
            "type": "string",
            "description": "Name of the country."
          },
          "iso": {
            "type": "string",
            "description": "Internationally recognized two-letter country codes. For example, DE, IN, NO, etc."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "Numerical value that indicates the order in which the defined countries must be displayed in the frontend."
          },
          "active": {
            "type": "boolean",
            "description": "When boolean value is `true`, the country is available for selection in the storefront."
          },
          "shippingAvailable": {
            "type": "boolean",
            "description": "The shipping availability for a country is enabled when boolean value is `true`."
          },
          "iso3": {
            "type": "string",
            "description": "Internationally recognized three-letter country codes. For example, DEU, IND, NOR, etc."
          },
          "displayStateInRegistration": {
            "type": "boolean",
            "description": "The country's state is displayed in the address when boolean value is `true`."
          },
          "forceStateInRegistration": {
            "type": "boolean",
            "description": "State details in the address are force included when boolean value is `true`."
          },
          "checkVatIdPattern": {
            "type": "boolean",
            "description": "Verify if VAT ID is valid or not."
          },
          "vatIdRequired": {
            "type": "boolean",
            "description": "Set to true, if VAT ID is to be made mandatory."
          },
          "vatIdPattern": {
            "type": "string",
            "description": "Unique VAT ID with country code and numbers, for example - GB999 9999"
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "customerTax": {
            "required": [
              "enabled",
              "currencyId",
              "amount"
            ],
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "The boolean value is `true` if the tax for the customer apply."
              },
              "currencyId": {
                "type": "string",
                "description": "Unique identity of currency."
              },
              "amount": {
                "type": "number",
                "format": "float",
                "description": "Sum of money to be paid by the customer."
              }
            },
            "type": "object"
          },
          "companyTax": {
            "required": [
              "enabled",
              "currencyId",
              "amount"
            ],
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "The boolean value is `true`, if the tax for the company apply."
              },
              "currencyId": {
                "type": "string",
                "description": "Unique identity of currency."
              },
              "amount": {
                "type": "number",
                "format": "float",
                "description": "Sum of money to be paid by the company."
              }
            },
            "type": "object"
          },
          "postalCodeRequired": {
            "type": "boolean",
            "description": "The postal code is made mandatory specification in the address, when boolean value is `true`."
          },
          "checkPostalCodePattern": {
            "type": "boolean",
            "description": "Verify for valid postal code pattern."
          },
          "checkAdvancedPostalCodePattern": {
            "type": "boolean",
            "description": "Verify for advanced postal code pattern."
          },
          "advancedPostalCodePattern": {
            "type": "string",
            "description": "Wildcard formatted zip codes to allow easy searching in the frontend based on initial constants, for example - 24****, 1856**."
          },
          "addressFormat": {
            "type": "object",
            "description": "The address format with recipient's name, building number, street name, city, state and ZIP code on different lines as required."
          },
          "defaultPostalCodePattern": {
            "type": "string",
            "description": "Default pattern of postal or zip code."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "states": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountryState"
            }
          },
          "taxFree": {
            "description": "When tax doesn't apply for a particular country, then the boolean value is `true`."
          },
          "companyTaxFree": {
            "description": "When a registered company is free from paying taxes, then the boolean value is `true`."
          }
        },
        "type": "object"
      },
      "CountryStateJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "countryId",
              "shortCode",
              "createdAt",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "countryId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "shortCode": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "position": {
                "type": "integer",
                "format": "int64"
              },
              "active": {
                "type": "boolean"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "CountryState": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "countryId",
          "shortCode",
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the country's state."
          },
          "countryId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the country."
          },
          "shortCode": {
            "type": "string",
            "description": "An abbreviation for the country's state."
          },
          "name": {
            "type": "string",
            "description": "Name of the country's state."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "Numerical value that indicates the order in which the defined states must be displayed in the frontend."
          },
          "active": {
            "type": "boolean",
            "description": "When boolean value is `true`, the country's state is available for selection in the storefront."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          }
        },
        "type": "object"
      },
      "CurrencyJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "factor",
              "symbol",
              "isoCode",
              "itemRounding",
              "totalRounding",
              "createdAt",
              "shortName",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "factor": {
                "type": "number",
                "format": "float"
              },
              "symbol": {
                "type": "string"
              },
              "isoCode": {
                "type": "string"
              },
              "shortName": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "position": {
                "type": "integer",
                "format": "int64"
              },
              "isSystemDefault": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean"
              },
              "taxFreeFrom": {
                "type": "number",
                "format": "float"
              },
              "customFields": {
                "type": "object"
              },
              "itemRounding": {
                "properties": {
                  "decimals": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "interval": {
                    "type": "number",
                    "format": "float"
                  },
                  "roundForNet": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "totalRounding": {
                "properties": {
                  "decimals": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "interval": {
                    "type": "number",
                    "format": "float"
                  },
                  "roundForNet": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Currency": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "factor",
          "symbol",
          "isoCode",
          "itemRounding",
          "totalRounding",
          "createdAt",
          "shortName",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of currency."
          },
          "factor": {
            "type": "number",
            "format": "float",
            "description": "Currency exchange rate."
          },
          "symbol": {
            "type": "string",
            "description": "A currency symbol is a graphical representation used as shorthand for a currency's name, for example US Dollar - $"
          },
          "isoCode": {
            "type": "string",
            "description": "Standard international three digit code to represent currency. For example, USD."
          },
          "shortName": {
            "type": "string",
            "description": "Acronym for international currencies. For example, USD."
          },
          "name": {
            "type": "string",
            "description": "Full name of the currency. For example, US-Dollar."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "The order of the tabs for multiple currencies defined."
          },
          "isSystemDefault": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean"
          },
          "taxFreeFrom": {
            "type": "number",
            "format": "float",
            "description": "The value from which the tax must be exempted."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "itemRounding": {
            "properties": {
              "decimals": {
                "type": "integer",
                "format": "int64",
                "description": "It defines the cash round off applied on the cart line items to the nearest decimal points. If set to 2, it rounds off to two significant decimal points."
              },
              "interval": {
                "type": "number",
                "format": "float",
                "description": "The interval of item rounding defines the cash rounding interval in terms of how high or low should it be rounded. For example, 0.05 signifies the value gets rounded off to nearest 5 cents."
              },
              "roundForNet": {
                "type": "boolean",
                "description": "The cash rounding applied on net prices. "
              }
            },
            "type": "object"
          },
          "totalRounding": {
            "properties": {
              "decimals": {
                "type": "integer",
                "format": "int64",
                "description": "It defines the round off amount to the nearest decimal points applied on the cart’s total amount. If set to 2, it rounds off to two significant decimal points."
              },
              "interval": {
                "type": "number",
                "format": "float",
                "description": "The interval defines the cart’s total amount round off interval in terms of how high or low should it be rounded. For example, 0.05 signifies the value gets rounded off to nearest 5 cents."
              },
              "roundForNet": {
                "type": "boolean",
                "description": "The cash rounding applied on cart’s total net prices. "
              }
            },
            "type": "object"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          }
        },
        "type": "object"
      },
      "CurrencyCountryRounding": {
        "description": "Added since version: 6.4.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the country's currency rounding."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "CustomEntity": {
        "description": "Added since version: 6.4.9.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of a custom entity."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "CustomField": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of a custom field."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "CustomFieldSet": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of a custom field set."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "CustomFieldSetRelation": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of a custom field set relation."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "CustomPrice": {
        "required": [
          "productId",
          "price",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the custom price."
          },
          "productId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product."
          },
          "productVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product's version."
          },
          "customerId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the customer."
          },
          "customerGroupId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the customer's group."
          },
          "price": {
            "type": "object",
            "description": "Detailed information of price."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "customerGroup": {
            "$ref": "#/components/schemas/CustomerGroup"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          }
        },
        "type": "object"
      },
      "Customer": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "groupId",
          "defaultPaymentMethodId",
          "salesChannelId",
          "languageId",
          "defaultBillingAddressId",
          "defaultShippingAddressId",
          "customerNumber",
          "firstName",
          "lastName",
          "email",
          "accountType",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the customer."
          },
          "groupId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of customer group."
          },
          "defaultPaymentMethodId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of default payment method."
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of sales channel."
          },
          "languageId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of language."
          },
          "lastPaymentMethodId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of previous payment method."
          },
          "defaultBillingAddressId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of default billing address."
          },
          "defaultShippingAddressId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of default shipping address."
          },
          "customerNumber": {
            "type": "string",
            "description": "Unique  number assigned to identity a customer."
          },
          "salutationId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of salutation."
          },
          "firstName": {
            "type": "string",
            "description": "First name of the customer."
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the customer."
          },
          "company": {
            "type": "string",
            "description": "Company name of the customer."
          },
          "email": {
            "type": "string",
            "description": "Email ID of the customer."
          },
          "title": {
            "type": "string",
            "description": "Titles or honorifics like Mr, Mrs, etc."
          },
          "vatIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Unique identity of VAT."
          },
          "affiliateCode": {
            "type": "string",
            "description": "An affiliate code is an identification option with which website operators can mark outgoing links."
          },
          "campaignCode": {
            "type": "string",
            "description": "A campaign code is the globally unique identifier for a campaign."
          },
          "active": {
            "type": "boolean",
            "description": "To keep the status of the customer active, the boolean value is set to `true`."
          },
          "doubleOptInRegistration": {
            "type": "boolean",
            "description": "Set to `true` to allow user subscriptions to an email marketing list."
          },
          "doubleOptInEmailSentDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the double opt-in email was sent."
          },
          "doubleOptInConfirmDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the double opt-in email was confirmed."
          },
          "hash": {
            "type": "string",
            "description": "Password hash for account recovery."
          },
          "guest": {
            "type": "boolean",
            "description": "Boolean value is `true` if it is to be a guest account."
          },
          "firstLogin": {
            "type": "string",
            "format": "date-time",
            "description": "To capture date and time of customer's first login."
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time",
            "description": "To capture date and time of customer's last login."
          },
          "birthday": {
            "type": "string",
            "description": "To capture customer's birthday details."
          },
          "lastOrderDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "Captures last order date."
          },
          "orderCount": {
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "description": "Captures the number of orders placed."
          },
          "orderTotalAmount": {
            "type": "number",
            "format": "float",
            "readOnly": true,
            "description": "Sum of total amount to be paid."
          },
          "reviewCount": {
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "description": "Number of reviews the customer has given."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "tagIds": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            },
            "readOnly": true,
            "description": "Unique identity tag names given to the line item."
          },
          "accountType": {
            "type": "string",
            "description": "Account type can be personal or business."
          },
          "createdById": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "updatedById": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "extensions": {
            "properties": {
              "specificFeatures": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/customer/ce26601dac0dea138b7295f02b7620a7/specificFeatures"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "customer_specific_features"
                      },
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{32}$",
                        "example": "5cfb6fcb7542e25892e1a35cd6a06c54"
                      }
                    }
                  }
                },
                "type": "object",
                "description": "To store additional data to a customer from extensions."
              }
            },
            "type": "object"
          },
          "group": {
            "$ref": "#/components/schemas/CustomerGroup"
          },
          "defaultPaymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "lastPaymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "defaultBillingAddress": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "activeBillingAddress": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "defaultShippingAddress": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "activeShippingAddress": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "salutation": {
            "$ref": "#/components/schemas/Salutation"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerAddress"
            }
          }
        },
        "type": "object"
      },
      "CustomerAddress": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "customerId",
          "countryId",
          "firstName",
          "lastName",
          "city",
          "street",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of customer's address."
          },
          "customerId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of customer."
          },
          "countryId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of country."
          },
          "countryStateId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of country's state."
          },
          "salutationId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of salutation."
          },
          "firstName": {
            "type": "string",
            "description": "First name of the customer."
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the customer."
          },
          "zipcode": {
            "type": "string",
            "description": "Postal or zip code of customer's address."
          },
          "city": {
            "type": "string",
            "description": "Name of customer's city."
          },
          "company": {
            "type": "string",
            "description": "Name of customer's company."
          },
          "street": {
            "type": "string",
            "description": "Name of customer's street."
          },
          "department": {
            "type": "string",
            "description": "Name of customer's department."
          },
          "title": {
            "type": "string",
            "description": "Titles given to customer like Dr. , Prof., etc"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Customer's phone number."
          },
          "additionalAddressLine1": {
            "type": "string",
            "description": "Additional customer's address information."
          },
          "additionalAddressLine2": {
            "type": "string",
            "description": "Additional customer's address information."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "country": {
            "$ref": "#/components/schemas/Country"
          },
          "countryState": {
            "$ref": "#/components/schemas/CountryState"
          },
          "salutation": {
            "$ref": "#/components/schemas/Salutation"
          }
        },
        "type": "object"
      },
      "CustomerGroup": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the customer's group."
          },
          "name": {
            "type": "string",
            "description": "Name of the customer group."
          },
          "displayGross": {
            "type": "boolean",
            "description": "If boolean value is `true` gross value is displayed else, net value will be displayed to the customer."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "registrationActive": {
            "type": "boolean",
            "description": "To enable the registration of partner customer group."
          },
          "registrationTitle": {
            "type": "string",
            "description": "Title defined for the customer group during registration."
          },
          "registrationIntroduction": {
            "type": "string",
            "description": "A brief description about the registration."
          },
          "registrationOnlyCompanyRegistration": {
            "type": "boolean",
            "description": "Register as a company rather than as a private customer group."
          },
          "registrationSeoMetaDescription": {
            "type": "string",
            "description": "A short description of the registration page for search results listings."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          }
        },
        "type": "object"
      },
      "CustomerRecovery": {
        "description": "Added since version: 6.1.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the customer recovery account."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "CustomerSpecificFeatures": {
        "required": [
          "customerId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the customer specific features."
          },
          "customerId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the customer."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          }
        },
        "type": "object"
      },
      "CustomerTag": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "customerId",
          "tagId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the customer tag."
          },
          "customerId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the customer."
          },
          "tagId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the tag."
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          }
        },
        "type": "object"
      },
      "CustomerWishlist": {
        "description": "Added since version: 6.3.4.0",
        "required": [
          "customerId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the customer's wishlist."
          },
          "customerId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the customer."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "CustomerWishlistProduct": {
        "description": "Added since version: 6.3.4.0",
        "required": [
          "productId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product in customer wishlist."
          },
          "productId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product."
          },
          "productVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product's version."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "DeliveryTime": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "name",
          "min",
          "max",
          "unit",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of delivery time."
          },
          "name": {
            "type": "string",
            "description": "Name given to delivery time."
          },
          "min": {
            "type": "integer",
            "format": "int64",
            "description": "Minimum delivery time taken."
          },
          "max": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum delivery time taken."
          },
          "unit": {
            "type": "string",
            "description": "Unit in which the delivery time is defined. For example, days or hours."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          }
        },
        "type": "object"
      },
      "Document": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "documentTypeId",
          "fileType",
          "orderId",
          "config",
          "deepLinkCode",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of document."
          },
          "documentTypeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of document type."
          },
          "fileType": {
            "type": "string",
            "description": "Type of file like PDF."
          },
          "referencedDocumentId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of reference document."
          },
          "orderId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the order."
          },
          "documentMediaFileId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of document media file."
          },
          "orderVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the order's version."
          },
          "config": {
            "type": "object",
            "description": "Specifies detailed information about how the component is to be rendered."
          },
          "sent": {
            "type": "boolean",
            "description": "When `true`, the document is already sent to the customer."
          },
          "static": {
            "type": "boolean",
            "description": "When `true`, the document is uploaded else it is generated by the system."
          },
          "deepLinkCode": {
            "type": "string",
            "description": "It is a generated special code linked to email. It is used to access details of guest customer actions."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "documentType": {
            "$ref": "#/components/schemas/DocumentType"
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "referencedDocument": {
            "$ref": "#/components/schemas/Document"
          },
          "dependentDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "documentMediaFile": {
            "$ref": "#/components/schemas/Media"
          }
        },
        "type": "object"
      },
      "DocumentBaseConfig": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "documentTypeId",
          "name",
          "global",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the document base config."
          },
          "documentTypeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the document type."
          },
          "logoId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the company logo."
          },
          "name": {
            "type": "string",
            "description": "Name of the document."
          },
          "filenamePrefix": {
            "type": "string",
            "description": "A prefix name added to the file name separated by an underscore."
          },
          "filenameSuffix": {
            "type": "string",
            "description": "A suffix name added to the file name separated by an underscore."
          },
          "global": {
            "type": "boolean",
            "description": "When set to `true`, the document can be used across all sales channels."
          },
          "documentNumber": {
            "type": "string",
            "description": "Unique number associated with every document."
          },
          "config": {
            "type": "object",
            "description": "Specifies detailed information about the component."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "logo": {
            "$ref": "#/components/schemas/Media",
            "description": "Logo in the document at the top-right corner."
          }
        },
        "type": "object"
      },
      "DocumentBaseConfigSalesChannel": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "documentBaseConfigId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of document's base config sales channel."
          },
          "documentBaseConfigId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of document's base config."
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of sales channel."
          },
          "documentTypeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of document type."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "DocumentType": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "technicalName",
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the document type."
          },
          "name": {
            "type": "string",
            "description": "Name of the document type."
          },
          "technicalName": {
            "type": "string",
            "description": "Technical name of document type."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          }
        },
        "type": "object"
      },
      "Flow": {
        "description": "Added since version: 6.4.6.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of flow."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "FlowSequence": {
        "description": "Added since version: 6.4.6.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of flow."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "FlowTemplate": {
        "description": "Added since version: 6.4.18.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of flow template."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ImportExportFile": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of import-export file."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ImportExportLog": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of import-export log."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ImportExportProfile": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of import-export profile."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object"
          },
          "Integration": {
            "description": "Unique identity of integration."
          }
        },
        "type": "object"
      },
      "Integration": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "LandingPageJsonApi": {
        "description": "Added since version: 6.4.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "createdAt",
              "name",
              "url"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "versionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "active": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "slotConfig": {
                "type": "object"
              },
              "metaTitle": {
                "type": "string"
              },
              "metaDescription": {
                "type": "string"
              },
              "keywords": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "cmsPageId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "cmsPageVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "cmsPage": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/landing-page/815c27537bec3b60c50a2ae4d2ce875d/cmsPage"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "cms_page"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "7b1460918b1abb93311108f3dc021c9b"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "seoUrls": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/landing-page/815c27537bec3b60c50a2ae4d2ce875d/seoUrls"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "seo_url"
                            },
                            "id": {
                              "type": "string",
                              "example": "5321b5a71127b8b98cdd4b068ad56c4c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "LandingPage": {
        "description": "Added since version: 6.4.0.0",
        "required": [
          "createdAt",
          "name",
          "url"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of landing page."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of landing page version."
          },
          "active": {
            "type": "boolean",
            "description": "When boolean value is `true`, respective landing pages are enlisted for use."
          },
          "name": {
            "type": "string",
            "description": "Name of landing page."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "slotConfig": {
            "type": "object"
          },
          "metaTitle": {
            "type": "string",
            "description": "A page title indexed by search engines and appears in search results listings."
          },
          "metaDescription": {
            "type": "string",
            "description": "A short description of the page for search results listings."
          },
          "keywords": {
            "type": "string",
            "description": "The keywords that help to search the landing page."
          },
          "url": {
            "type": "string",
            "description": "URL of the landing page."
          },
          "cmsPageId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the CMS Page."
          },
          "cmsPageVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the CMS Page's version."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "cmsPage": {
            "$ref": "#/components/schemas/CmsPage"
          },
          "seoUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SeoUrl"
            }
          }
        },
        "type": "object"
      },
      "LanguageJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "localeId",
              "name",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "parentId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "localeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "translationCodeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "relationships": {
                "properties": {
                  "parent": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/4994a8ffeba4ac3140beb89e8d41f174/parent"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "language"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "d0e45878043844ffc41aac437e86b602"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "locale": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/4994a8ffeba4ac3140beb89e8d41f174/locale"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "locale"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "fb216d9e8791e63c8d12bdc420956839"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "translationCode": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/4994a8ffeba4ac3140beb89e8d41f174/translationCode"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "locale"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "6ef2035242b8fcb7b61c3a41850e60b3"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "children": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/language/4994a8ffeba4ac3140beb89e8d41f174/children"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "language"
                            },
                            "id": {
                              "type": "string",
                              "example": "268184c12df027f536154d099d497b31"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Language": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "localeId",
          "name",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of language."
          },
          "parentId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of parent language."
          },
          "localeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of locale."
          },
          "translationCodeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of translation code."
          },
          "name": {
            "type": "string",
            "description": "Name of the language."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "parent": {
            "$ref": "#/components/schemas/Language"
          },
          "locale": {
            "$ref": "#/components/schemas/Locale"
          },
          "translationCode": {
            "$ref": "#/components/schemas/Locale"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Language"
            }
          }
        },
        "type": "object"
      },
      "Locale": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "code",
          "createdAt",
          "name",
          "territory"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of locale."
          },
          "code": {
            "type": "string",
            "description": "Code given to the locale. For example: en-CA."
          },
          "name": {
            "type": "string",
            "description": "Name of the locale. For example: English."
          },
          "territory": {
            "type": "string",
            "description": "Name of the location. For example: Canada."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          }
        },
        "type": "object"
      },
      "LogEntry": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of log entry."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "MailHeaderFooter": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of mail's header and footer component."
          },
          "systemDefault": {
            "type": "boolean",
            "description": "Unused field. To be removed in future."
          },
          "name": {
            "type": "string",
            "description": "Name of the MailHeaderFooter."
          },
          "description": {
            "type": "string",
            "description": "Description of the MailHeaderFooter."
          },
          "headerHtml": {
            "type": "string",
            "description": "HTML header content."
          },
          "headerPlain": {
            "type": "string",
            "description": "Textual header content."
          },
          "footerHtml": {
            "type": "string",
            "description": "HTML footer content."
          },
          "footerPlain": {
            "type": "string",
            "description": "Textual footer content."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          }
        },
        "type": "object"
      },
      "MailTemplate": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt",
          "subject",
          "contentHtml",
          "contentPlain"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of mail template."
          },
          "systemDefault": {
            "type": "boolean",
            "description": "Unused field. To be removed in future."
          },
          "senderName": {
            "type": "string",
            "description": "Name of the sender in the mail."
          },
          "contentHtml": {
            "type": "string",
            "description": "HTML content in the mail."
          },
          "contentPlain": {
            "type": "string",
            "description": "Textual content in the mail."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "mailTemplateType": {
            "$ref": "#/components/schemas/MailTemplateType"
          },
          "media": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MailTemplateMedia"
            }
          }
        },
        "type": "object"
      },
      "MailTemplateMedia": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "mailTemplateId",
          "languageId",
          "mediaId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of mail template's media."
          },
          "mailTemplateId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the mail template."
          },
          "languageId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the language."
          },
          "mediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the media."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "The order of multiple media templates defined is specified using numerical values like 1,2,3, etc."
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          }
        },
        "type": "object"
      },
      "MailTemplateType": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "technicalName",
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of mail template type."
          },
          "name": {
            "type": "string",
            "description": "Name of the mail template."
          },
          "technicalName": {
            "type": "string",
            "description": "Technical name of mail template."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          }
        },
        "type": "object"
      },
      "MainCategoryJsonApi": {
        "description": "Added since version: 6.1.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "productId",
              "categoryId",
              "salesChannelId",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "categoryId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "categoryVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              }
            },
            "type": "object"
          }
        ]
      },
      "MainCategory": {
        "description": "Added since version: 6.1.0.0",
        "required": [
          "productId",
          "categoryId",
          "salesChannelId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of main category."
          },
          "productId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product."
          },
          "productVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product's version."
          },
          "categoryId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the category."
          },
          "categoryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the category's version."
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the sales channel."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "Media": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of media."
          },
          "mimeType": {
            "type": "string",
            "readOnly": true,
            "description": "A string sent along with a file indicating the type of the file. For example: image/jpeg."
          },
          "fileExtension": {
            "type": "string",
            "readOnly": true,
            "description": "Type of file indication. For example: jpeg, png."
          },
          "uploadedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "Date and time at which media was added."
          },
          "fileName": {
            "type": "string",
            "readOnly": true,
            "description": "Name of the media file uploaded."
          },
          "fileSize": {
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "description": "Size of the file media file uploaded."
          },
          "metaData": {
            "type": "object",
            "readOnly": true,
            "description": "Details of the media file uploaded."
          },
          "alt": {
            "type": "string",
            "description": "Alternate text for media."
          },
          "title": {
            "type": "string",
            "description": "Title name give to the media."
          },
          "url": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "hasFile": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean"
          },
          "private": {
            "type": "boolean",
            "description": "When `true`, the media display is kept private."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "extensions": {
            "properties": {
              "mediaAiTag": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/media/3b563524fdb17b4a86590470d40bef74/mediaAiTag"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "media_ai_tag"
                      },
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{32}$",
                        "example": "3c88197809d464216a8c40a8db191b38"
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object",
            "description": "To store additional data to a media from extensions."
          },
          "thumbnails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaThumbnail"
            }
          }
        },
        "type": "object"
      },
      "MediaAiTag": {
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the AI media tag."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          },
          "tag": {
            "description": "Tag that indicates if the media is made by AI or not."
          }
        },
        "type": "object"
      },
      "MediaDefaultFolder": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of media default folder."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "MediaFolder": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of media folder."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "MediaFolderConfiguration": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of media folder configuration."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "MediaTag": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "mediaId",
          "tagId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the media tag."
          },
          "mediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the media."
          },
          "tagId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the tag."
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          }
        },
        "type": "object"
      },
      "MediaThumbnail": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "mediaId",
          "width",
          "height",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of media thumbnail."
          },
          "mediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of media."
          },
          "width": {
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "description": "Width of the thumbnail."
          },
          "height": {
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "description": "Height of the thumbnail."
          },
          "url": {
            "description": "Public url of media thumbnail.",
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "MediaThumbnailSize": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "width",
          "height",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of media thumbnail size defined."
          },
          "width": {
            "type": "integer",
            "format": "int64",
            "description": "Width of the thumbnail."
          },
          "height": {
            "type": "integer",
            "format": "int64",
            "description": "Height of the thumbnail."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "NewsletterRecipientJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              }
            },
            "type": "object"
          }
        ]
      },
      "NewsletterRecipient": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of newsletter recipient."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "Notification": {
        "description": "Added since version: 6.4.7.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of notification."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "NumberRange": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of number range."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          }
        },
        "type": "object"
      },
      "NumberRangeSalesChannel": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Sales channels's number rage."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "NumberRangeState": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of number range's state."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "NumberRangeType": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt",
          "typeName"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of number range's type."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          }
        },
        "type": "object"
      },
      "Order": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "billingAddressId",
          "currencyId",
          "languageId",
          "salesChannelId",
          "orderDateTime",
          "currencyFactor",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order version."
          },
          "orderNumber": {
            "type": "string",
            "description": "Unique number associated with every order."
          },
          "billingAddressId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the billing address."
          },
          "billingAddressVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the billing address version."
          },
          "currencyId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the currency."
          },
          "languageId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the language."
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the sales channel."
          },
          "orderDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the order was placed."
          },
          "orderDate": {
            "type": "string",
            "readOnly": true,
            "description": "Date when the order was placed."
          },
          "price": {
            "required": [
              "netPrice",
              "totalPrice",
              "positionPrice",
              "rawTotal",
              "taxStatus"
            ],
            "properties": {
              "netPrice": {
                "type": "number",
                "format": "float",
                "description": "Net price of the product."
              },
              "totalPrice": {
                "type": "number",
                "format": "float",
                "description": "Gross price of the product."
              },
              "calculatedTaxes": {
                "type": "object"
              },
              "taxRules": {
                "type": "object"
              },
              "positionPrice": {
                "type": "number",
                "format": "float",
                "description": "Price of each line item in the cart multiplied by its quantity excluding charges like shipping cost, rules, taxes etc."
              },
              "rawTotal": {
                "type": "number",
                "format": "float",
                "description": "The total value before rounding off."
              },
              "taxStatus": {
                "type": "string",
                "description": "TaxStatus takes `Free`, `Net` or `Gross` as values."
              }
            },
            "type": "object"
          },
          "amountTotal": {
            "type": "number",
            "format": "float",
            "readOnly": true,
            "description": "Gross price of the order."
          },
          "amountNet": {
            "type": "number",
            "format": "float",
            "readOnly": true,
            "description": "Net price of the order."
          },
          "positionPrice": {
            "type": "number",
            "format": "float",
            "readOnly": true,
            "description": "Price of each line item in the cart multiplied by its quantity excluding charges like shipping cost, rules, taxes etc."
          },
          "taxStatus": {
            "type": "string",
            "readOnly": true,
            "description": "TaxStatus takes `Free`, `Net` or `Gross` as values."
          },
          "shippingCosts": {
            "required": [
              "unitPrice",
              "totalPrice",
              "quantity"
            ],
            "properties": {
              "unitPrice": {
                "type": "number",
                "format": "float",
                "description": "Shipping cost of product per item (where, quantity=1)."
              },
              "totalPrice": {
                "type": "number",
                "format": "float",
                "description": "Shipping cost of product based on quantity."
              },
              "quantity": {
                "type": "integer",
                "format": "int64",
                "description": "Number of items of each product."
              },
              "calculatedTaxes": {
                "type": "object",
                "description": "Contains calculated taxes based on shipping costs/methods."
              },
              "taxRules": {
                "type": "object",
                "description": "Pricing based on multiple taxes."
              },
              "referencePrice": {
                "type": "object",
                "description": "Original cost price of the product."
              },
              "listPrice": {
                "properties": {
                  "price": {
                    "type": "number",
                    "format": "float",
                    "description": "Price of each line item."
                  },
                  "discount": {
                    "type": "number",
                    "format": "float",
                    "description": "Absolute discount on each line item."
                  },
                  "percentage": {
                    "type": "number",
                    "format": "float",
                    "description": "Discount in percentage."
                  }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": {
                    "type": "number",
                    "format": "float",
                    "description": "Contains cheapest price from last 30 days as per EU law."
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "shippingTotal": {
            "type": "number",
            "format": "float",
            "readOnly": true,
            "description": "Total shipping cost of the ordered product."
          },
          "currencyFactor": {
            "type": "number",
            "format": "float",
            "description": "Rate at which currency is exchanged."
          },
          "deepLinkCode": {
            "type": "string",
            "description": "It is a generated special code linked to email. It is used to access orders placed by guest customers."
          },
          "affiliateCode": {
            "type": "string",
            "description": "An affiliate code is an identification option with which website operators can mark outgoing links."
          },
          "campaignCode": {
            "type": "string",
            "description": "A campaign code is the globally unique identifier for a campaign."
          },
          "customerComment": {
            "type": "string",
            "description": "Comments given by comments."
          },
          "source": {
            "type": "string",
            "description": "Source of orders either via normal order placement or subscriptions."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdById": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "updatedById": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "extensions": {
            "properties": {
              "subscription": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/order/a240fa27925a635b08dc28c9e4f9216d/subscription"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "subscription"
                      },
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{32}$",
                        "example": "b48b13e73a6ac2a86dc54425dd24d9ff"
                      }
                    }
                  }
                },
                "type": "object"
              },
              "returns": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/order/a240fa27925a635b08dc28c9e4f9216d/returns"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "order_return"
                        },
                        "id": {
                          "type": "string",
                          "example": "7fff84525c6516919851a9005373f87e"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object",
            "description": "To store additional data to an order from extensions."
          },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "orderCustomer": {
            "$ref": "#/components/schemas/OrderCustomer"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderAddress"
            }
          },
          "billingAddress": {
            "$ref": "#/components/schemas/OrderAddress"
          },
          "deliveries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDelivery"
            }
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineItem"
            }
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderTransaction"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          }
        },
        "type": "object"
      },
      "OrderAddress": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "countryId",
          "firstName",
          "lastName",
          "street",
          "city",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order's address."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of OrderAddresses version."
          },
          "countryId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of country."
          },
          "countryStateId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of state."
          },
          "firstName": {
            "type": "string",
            "description": "First name of the customer."
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the customer."
          },
          "street": {
            "type": "string",
            "description": "Street address"
          },
          "zipcode": {
            "type": "string",
            "description": "Zip code of the country."
          },
          "city": {
            "type": "string",
            "description": "Name of the city."
          },
          "company": {
            "type": "string",
            "description": "Name of the company."
          },
          "department": {
            "type": "string",
            "description": "Name of the department."
          },
          "title": {
            "type": "string",
            "description": "Title name given to customer like DR. , Prof., etc."
          },
          "vatId": {
            "type": "string",
            "description": "Unique identity of VAT."
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number of the customer."
          },
          "additionalAddressLine1": {
            "type": "string",
            "description": "Additional address input if necessary."
          },
          "additionalAddressLine2": {
            "type": "string",
            "description": "Additional address input if necessary."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "country": {
            "$ref": "#/components/schemas/Country"
          },
          "countryState": {
            "$ref": "#/components/schemas/CountryState"
          },
          "salutation": {
            "$ref": "#/components/schemas/Salutation"
          }
        },
        "type": "object"
      },
      "OrderCustomer": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "email",
          "firstName",
          "lastName",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order customer."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of OrderCustomer's version."
          },
          "email": {
            "type": "string",
            "description": "Email address of the customer."
          },
          "salutationId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of salutation."
          },
          "firstName": {
            "type": "string",
            "description": "First name of the customer."
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the customer."
          },
          "company": {
            "type": "string",
            "description": "Name of the company."
          },
          "title": {
            "type": "string",
            "description": "Title name given to the customer like Dr, prof. etc."
          },
          "vatIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Unique identity of VAT."
          },
          "customerNumber": {
            "type": "string",
            "description": "Unique number assigned to the customer."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "salutation": {
            "$ref": "#/components/schemas/Salutation"
          }
        },
        "type": "object"
      },
      "OrderDelivery": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "orderId",
          "shippingOrderAddressId",
          "shippingMethodId",
          "stateId",
          "trackingCodes",
          "shippingDateEarliest",
          "shippingDateLatest",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Order's delivery."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of OrderDelivery's version."
          },
          "orderId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order."
          },
          "orderVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order's version."
          },
          "shippingOrderAddressId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order's shipping address."
          },
          "shippingOrderAddressVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order's shipping address version."
          },
          "shippingMethodId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of shipping method."
          },
          "stateId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of state."
          },
          "trackingCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tracking code is a unique URL code assigned to each package, which allows you to monitor the movement of the parcel."
          },
          "shippingDateEarliest": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time of earliest delivery of products."
          },
          "shippingDateLatest": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time of latest delivery of products."
          },
          "shippingCosts": {
            "required": [
              "unitPrice",
              "totalPrice",
              "quantity"
            ],
            "properties": {
              "unitPrice": {
                "type": "number",
                "format": "float",
                "description": "Shipping cost of product per item (where, quantity=1)."
              },
              "totalPrice": {
                "type": "number",
                "format": "float",
                "description": "Shipping cost of product based on quantity."
              },
              "quantity": {
                "type": "integer",
                "format": "int64",
                "description": "Number of items of each product."
              },
              "calculatedTaxes": {
                "type": "object",
                "description": "Contains calculated taxes based on shipping costs/methods."
              },
              "taxRules": {
                "type": "object",
                "description": "Pricing based on multiple taxes."
              },
              "referencePrice": {
                "type": "object",
                "description": "Original cost price of the product."
              },
              "listPrice": {
                "properties": {
                  "price": {
                    "type": "number",
                    "format": "float",
                    "description": "Price of each line item."
                  },
                  "discount": {
                    "type": "number",
                    "format": "float",
                    "description": "Absolute discount on each line item."
                  },
                  "percentage": {
                    "type": "number",
                    "format": "float",
                    "description": "Discount in percentage."
                  }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": {
                    "type": "number",
                    "format": "float",
                    "description": "Contains cheapest price from last 30 days as per EU law."
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "shippingOrderAddress": {
            "$ref": "#/components/schemas/OrderAddress"
          },
          "shippingMethod": {
            "$ref": "#/components/schemas/ShippingMethod"
          },
          "positions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDeliveryPosition"
            }
          }
        },
        "type": "object"
      },
      "OrderDeliveryPosition": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "orderDeliveryId",
          "orderLineItemId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order delivery position."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of OrderDeliveryPosition's version."
          },
          "orderDeliveryId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order delivery."
          },
          "orderDeliveryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order delivery's version."
          },
          "orderLineItemId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of line items in an order."
          },
          "orderLineItemVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of line item's version in an order."
          },
          "price": {
            "required": [
              "unitPrice",
              "totalPrice",
              "quantity"
            ],
            "properties": {
              "unitPrice": {
                "type": "number",
                "format": "float",
                "description": "Price of product per item (where, quantity=1)."
              },
              "totalPrice": {
                "type": "number",
                "format": "float",
                "description": "Cost of product based on quantity."
              },
              "quantity": {
                "type": "integer",
                "format": "int64",
                "description": "Number of items of each product."
              },
              "calculatedTaxes": {
                "type": "object",
                "description": "Contains calculated taxes based on order delivery price."
              },
              "taxRules": {
                "type": "object",
                "description": "Pricing based on multiple taxes."
              },
              "referencePrice": {
                "type": "object",
                "description": "Original cost price of the product."
              },
              "listPrice": {
                "properties": {
                  "price": {
                    "type": "number",
                    "format": "float",
                    "description": "Price of each line item."
                  },
                  "discount": {
                    "type": "number",
                    "format": "float",
                    "description": "Absolute discount on each line item."
                  },
                  "percentage": {
                    "type": "number",
                    "format": "float",
                    "description": "Discount in percentage."
                  }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": {
                    "type": "number",
                    "format": "float",
                    "description": "Contains cheapest price from last 30 days as per EU law."
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "unitPrice": {
            "type": "number",
            "format": "float",
            "description": "Price of product per item (where, quantity=1)."
          },
          "totalPrice": {
            "type": "number",
            "format": "float",
            "description": "Cost of product based on quantity."
          },
          "quantity": {
            "type": "integer",
            "format": "int64",
            "description": "Number of items of each product."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "OrderLineItem": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "orderId",
          "identifier",
          "quantity",
          "label",
          "position",
          "states",
          "children",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of OrderLineItem."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of OrderLineItem's version."
          },
          "orderId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order."
          },
          "orderVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order's version."
          },
          "productId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of product."
          },
          "productVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of products's version."
          },
          "parentId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of parent product."
          },
          "parentVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of parent's version."
          },
          "coverId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of cover image."
          },
          "identifier": {
            "type": "string",
            "description": "It is a unique identity of an item in cart before its converted to an order."
          },
          "referencedId": {
            "type": "string",
            "description": "Unique identity of type of entity."
          },
          "quantity": {
            "type": "integer",
            "format": "int64",
            "description": "Number of items of product."
          },
          "label": {
            "type": "string",
            "description": "It is a typical product name given to the line item."
          },
          "payload": {
            "type": "object",
            "description": "Any data related to product is passed."
          },
          "good": {
            "type": "boolean",
            "description": "When set to true, it indicates the line item is physical else it is virtual."
          },
          "removable": {
            "type": "boolean",
            "description": "Allows the line item to be removable from the cart when set to true."
          },
          "stackable": {
            "type": "boolean",
            "description": "Allows to change the quantity of the line item when set to true."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "Position of line items placed in an order."
          },
          "states": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Internal field."
          },
          "priceDefinition": {
            "type": "object",
            "description": "Description of how the price has to be calculated. For example, in percentage or absolute value, etc."
          },
          "unitPrice": {
            "type": "number",
            "format": "float",
            "description": "Price of product per item (where, quantity=1)."
          },
          "totalPrice": {
            "type": "number",
            "format": "float",
            "description": "Cost of product based on quantity."
          },
          "description": {
            "type": "string",
            "description": "Description of line items in an order."
          },
          "type": {
            "type": "string",
            "description": "Type refers to the entity type of an item whether it is product or promotion for instance."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "extensions": {
            "properties": {
              "returns": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/order-line-item/40b401ac0b29ac5c5c8ffce649fdef62/returns"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "order_return_line_item"
                        },
                        "id": {
                          "type": "string",
                          "example": "7fff84525c6516919851a9005373f87e"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "state": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/order-line-item/40b401ac0b29ac5c5c8ffce649fdef62/state"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "state_machine_state"
                      },
                      "id": {
                        "type": "string",
                        "pattern": "^[0-9a-f]{32}$",
                        "example": "9ed39e2ea931586b6a985a6942ef573e"
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object",
            "description": "To store additional data to an order line item from extensions."
          },
          "cover": {
            "$ref": "#/components/schemas/Media"
          },
          "orderDeliveryPositions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDeliveryPosition"
            }
          },
          "downloads": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineItemDownload"
            }
          },
          "parent": {
            "$ref": "#/components/schemas/OrderLineItem"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineItem"
            }
          }
        },
        "type": "object"
      },
      "OrderLineItemDownload": {
        "description": "Added since version: 6.4.19.0",
        "required": [
          "orderLineItemId",
          "mediaId",
          "position",
          "accessGranted",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Order line item downloaded digital products."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Order line item downloaded version."
          },
          "orderLineItemId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Order line item."
          },
          "orderLineItemVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Order line item's version."
          },
          "mediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of media."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "The order of downloaded digital products displayed in the storefront by mentioning numerical values like 1,2,3, etc."
          },
          "accessGranted": {
            "type": "boolean",
            "description": "When boolean value is `true`, the digital product is allowed to download."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "orderLineItem": {
            "$ref": "#/components/schemas/OrderLineItem"
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          }
        },
        "type": "object"
      },
      "OrderProductWarehouse": {
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order's product warehouse."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "OrderReturn": {
        "required": [
          "orderId",
          "stateId",
          "returnNumber",
          "requestedAt",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order return."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order return's version."
          },
          "orderId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order."
          },
          "orderVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order return version."
          },
          "price": {
            "required": [
              "netPrice",
              "totalPrice",
              "positionPrice",
              "rawTotal",
              "taxStatus"
            ],
            "properties": {
              "netPrice": {
                "type": "number",
                "format": "float",
                "description": "Net price of the product."
              },
              "totalPrice": {
                "type": "number",
                "format": "float",
                "description": "Gross price of the product."
              },
              "calculatedTaxes": {
                "type": "object",
                "description": "Contains calculated tax on order delivery price."
              },
              "taxRules": {
                "type": "object",
                "description": "Pricing based on multiple taxes."
              },
              "positionPrice": {
                "type": "number",
                "format": "float",
                "description": "Price of each line item in the cart multiplied by its quantity excluding charges like shipping cost, rules, taxes etc."
              },
              "rawTotal": {
                "type": "number",
                "format": "float",
                "description": "The total value before rounding off."
              },
              "taxStatus": {
                "type": "string",
                "description": "TaxStatus takes `Free`, `Net` or `Gross` as values."
              }
            },
            "type": "object"
          },
          "shippingCosts": {
            "required": [
              "unitPrice",
              "totalPrice",
              "quantity"
            ],
            "properties": {
              "unitPrice": {
                "type": "number",
                "format": "float",
                "description": "Shipping cost of product per item (where, quantity=1)."
              },
              "totalPrice": {
                "type": "number",
                "format": "float",
                "description": "Shipping cost of product based on quantity."
              },
              "quantity": {
                "type": "integer",
                "format": "int64",
                "description": "Number of items of each product."
              },
              "calculatedTaxes": {
                "type": "object",
                "description": "Contains calculated taxes based on shipping costs/methods."
              },
              "taxRules": {
                "type": "object",
                "description": "Pricing based on multiple taxes."
              },
              "referencePrice": {
                "type": "object",
                "description": "Original cost price of the product."
              },
              "listPrice": {
                "properties": {
                  "price": {
                    "type": "number",
                    "format": "float",
                    "description": "Price of each line item."
                  },
                  "discount": {
                    "type": "number",
                    "format": "float",
                    "description": "Absolute discount on each line item."
                  },
                  "percentage": {
                    "type": "number",
                    "format": "float",
                    "description": "Discount in percentage."
                  }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": {
                    "type": "number",
                    "format": "float",
                    "description": "Contains cheapest price from last 30 days as per EU law."
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "stateId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of state."
          },
          "returnNumber": {
            "type": "string",
            "description": "Reference number for returning order."
          },
          "requestedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the order return was requested."
          },
          "amountTotal": {
            "type": "number",
            "format": "float",
            "description": "Gross price of the order."
          },
          "amountNet": {
            "type": "number",
            "format": "float",
            "description": "Net price of the order."
          },
          "createdById": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "updatedById": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "state": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderReturnLineItem"
            }
          }
        },
        "type": "object"
      },
      "OrderReturnLineItem": {
        "required": [
          "orderReturnId",
          "orderLineItemId",
          "reasonId",
          "quantity",
          "stateId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order return line item."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order return line item's version."
          },
          "orderReturnId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order return."
          },
          "orderReturnVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order return version."
          },
          "orderLineItemId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order line item."
          },
          "orderLineItemVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order line items's version."
          },
          "reasonId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of reason for return."
          },
          "quantity": {
            "type": "integer",
            "format": "int64",
            "description": "Number of line items returned."
          },
          "refundAmount": {
            "type": "number",
            "format": "float",
            "description": "Amount to be refunded."
          },
          "restockQuantity": {
            "type": "integer",
            "format": "int64",
            "description": "Update of stock quantity after the return of certain line items are initiated."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "stateId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of state."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "reason": {
            "$ref": "#/components/schemas/OrderReturnLineItemReason"
          },
          "state": {
            "$ref": "#/components/schemas/StateMachineState"
          }
        },
        "type": "object"
      },
      "OrderReturnLineItemReason": {
        "required": [
          "reasonKey",
          "createdAt",
          "content"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity for reason of return."
          },
          "reasonKey": {
            "type": "string",
            "description": "Unique key associated with reason for the order return. "
          },
          "content": {
            "type": "string",
            "description": "Description of the reason of return."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          }
        },
        "type": "object"
      },
      "OrderTag": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "orderId",
          "tagId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order tag."
          },
          "orderId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order."
          },
          "orderVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order's version."
          },
          "tagId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of tag given for an order."
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          }
        },
        "type": "object"
      },
      "OrderTransaction": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "orderId",
          "paymentMethodId",
          "amount",
          "stateId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order transaction."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of OrderTransaction's version."
          },
          "orderId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of an order."
          },
          "orderVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of an order's version."
          },
          "paymentMethodId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of payment method."
          },
          "amount": {
            "required": [
              "unitPrice",
              "totalPrice",
              "quantity"
            ],
            "properties": {
              "unitPrice": {
                "type": "number",
                "format": "float",
                "description": "Price of product per item (where, quantity=1)."
              },
              "totalPrice": {
                "type": "number",
                "format": "float",
                "description": "Cost of product based on quantity."
              },
              "quantity": {
                "type": "integer",
                "format": "int64",
                "description": "Number of items of each product."
              },
              "calculatedTaxes": {
                "type": "object"
              },
              "taxRules": {
                "type": "object"
              },
              "referencePrice": {
                "type": "object"
              },
              "listPrice": {
                "properties": {
                  "price": {
                    "type": "number",
                    "format": "float"
                  },
                  "discount": {
                    "type": "number",
                    "format": "float"
                  },
                  "percentage": {
                    "type": "number",
                    "format": "float"
                  }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": {
                    "type": "number",
                    "format": "float"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "stateId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of state."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "captures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderTransactionCapture"
            }
          },
          "shippingCosts": {
            "properties": {
              "calculatedTaxes": {
                "description": "Contains calculated taxes based on shipping costs/methods."
              },
              "taxRules": {
                "description": "Pricing based on multiple taxes."
              },
              "referencePrice": {
                "description": "Original cost price of the product."
              },
              "listPrice": {
                "properties": {
                  "price": {
                    "description": "Price of each line item."
                  },
                  "discount": {
                    "description": "Absolute discount on each line item."
                  },
                  "percentage": {
                    "description": "Discount in percentage."
                  }
                }
              },
              "regulationPrice": {
                "properties": {
                  "price": {
                    "description": "Contains cheapest price from last 30 days as per EU law."
                  }
                }
              }
            }
          }
        },
        "type": "object"
      },
      "OrderTransactionCapture": {
        "description": "Added since version: 6.4.12.0",
        "required": [
          "orderTransactionId",
          "stateId",
          "amount",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order transaction capture."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order transaction capture's version."
          },
          "orderTransactionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order transaction."
          },
          "orderTransactionVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order transaction version."
          },
          "stateId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order state."
          },
          "externalReference": {
            "type": "string",
            "description": "External payment provider token."
          },
          "amount": {
            "required": [
              "unitPrice",
              "totalPrice",
              "quantity"
            ],
            "properties": {
              "unitPrice": {
                "type": "number",
                "format": "float",
                "description": "Price of product per item (where, quantity=1)."
              },
              "totalPrice": {
                "type": "number",
                "format": "float",
                "description": "Cost of product based on quantity."
              },
              "quantity": {
                "type": "integer",
                "format": "int64",
                "description": "Number of items of each product."
              },
              "calculatedTaxes": {
                "type": "object"
              },
              "taxRules": {
                "type": "object"
              },
              "referencePrice": {
                "type": "object"
              },
              "listPrice": {
                "properties": {
                  "price": {
                    "type": "number",
                    "format": "float"
                  },
                  "discount": {
                    "type": "number",
                    "format": "float"
                  },
                  "percentage": {
                    "type": "number",
                    "format": "float"
                  }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": {
                    "type": "number",
                    "format": "float"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "transaction": {
            "$ref": "#/components/schemas/OrderTransaction"
          },
          "refunds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
            }
          },
          "shippingCosts": {
            "properties": {
              "calculatedTaxes": {
                "description": "Contains calculated taxes based on shipping costs/methods."
              },
              "taxRules": {
                "description": "Pricing based on multiple taxes."
              },
              "referencePrice": {
                "description": "Original cost price of the product."
              },
              "listPrice": {
                "properties": {
                  "price": {
                    "description": "Price of each line item."
                  },
                  "discount": {
                    "description": "Absolute discount on each line item."
                  },
                  "percentage": {
                    "description": "Discount in percentage."
                  }
                }
              },
              "regulationPrice": {
                "properties": {
                  "price": {
                    "description": "Contains cheapest price from last 30 days as per EU law."
                  }
                }
              }
            }
          }
        },
        "type": "object"
      },
      "OrderTransactionCaptureRefund": {
        "description": "Added since version: 6.4.12.0",
        "required": [
          "captureId",
          "stateId",
          "amount",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order transaction capture refund."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order transaction capture refund's version."
          },
          "captureId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order transaction capture."
          },
          "captureVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order transaction capture's version."
          },
          "stateId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order state."
          },
          "externalReference": {
            "type": "string",
            "description": "External payment provider token. "
          },
          "reason": {
            "type": "string",
            "description": "Reason for refunding the amount for an order."
          },
          "amount": {
            "required": [
              "unitPrice",
              "totalPrice",
              "quantity"
            ],
            "properties": {
              "unitPrice": {
                "type": "number",
                "format": "float",
                "description": "Price of product per item (where, quantity=1)."
              },
              "totalPrice": {
                "type": "number",
                "format": "float",
                "description": "Cost of product based on quantity."
              },
              "quantity": {
                "type": "integer",
                "format": "int64",
                "description": "Number of items of each product."
              },
              "calculatedTaxes": {
                "type": "object"
              },
              "taxRules": {
                "type": "object"
              },
              "referencePrice": {
                "type": "object"
              },
              "listPrice": {
                "properties": {
                  "price": {
                    "type": "number",
                    "format": "float"
                  },
                  "discount": {
                    "type": "number",
                    "format": "float"
                  },
                  "percentage": {
                    "type": "number",
                    "format": "float"
                  }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": {
                    "type": "number",
                    "format": "float"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "transactionCapture": {
            "$ref": "#/components/schemas/OrderTransactionCapture"
          },
          "positions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
            }
          },
          "shippingCosts": {
            "properties": {
              "calculatedTaxes": {
                "description": "Contains calculated taxes based on shipping costs/methods."
              },
              "taxRules": {
                "description": "Pricing based on multiple taxes."
              },
              "referencePrice": {
                "description": "Original cost price of the product."
              },
              "listPrice": {
                "properties": {
                  "price": {
                    "description": "Price of each line item."
                  },
                  "discount": {
                    "description": "Absolute discount on each line item."
                  },
                  "percentage": {
                    "description": "Discount in percentage."
                  }
                }
              },
              "regulationPrice": {
                "properties": {
                  "price": {
                    "description": "Contains cheapest price from last 30 days as per EU law."
                  }
                }
              }
            }
          }
        },
        "type": "object"
      },
      "OrderTransactionCaptureRefundPosition": {
        "description": "Added since version: 6.4.12.0",
        "required": [
          "refundId",
          "orderLineItemId",
          "amount",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order transaction capture refund position."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order transaction capture refund position's version."
          },
          "refundId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order transaction capture refund."
          },
          "refundVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order transaction capture refund's version."
          },
          "orderLineItemId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order line item."
          },
          "orderLineItemVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order line item version."
          },
          "externalReference": {
            "type": "string",
            "description": "External payment provider token."
          },
          "reason": {
            "type": "string",
            "description": "Reason for refunding the amount for an order."
          },
          "quantity": {
            "type": "integer",
            "format": "int64",
            "description": "Quantity of line item to be refunded."
          },
          "amount": {
            "required": [
              "unitPrice",
              "totalPrice",
              "quantity"
            ],
            "properties": {
              "unitPrice": {
                "type": "number",
                "format": "float",
                "description": "Price of product per item (where, quantity=1)."
              },
              "totalPrice": {
                "type": "number",
                "format": "float",
                "description": "Cost of product based on quantity."
              },
              "quantity": {
                "type": "integer",
                "format": "int64",
                "description": "Number of items of each product."
              },
              "calculatedTaxes": {
                "type": "object"
              },
              "taxRules": {
                "type": "object"
              },
              "referencePrice": {
                "type": "object"
              },
              "listPrice": {
                "properties": {
                  "price": {
                    "type": "number",
                    "format": "float"
                  },
                  "discount": {
                    "type": "number",
                    "format": "float"
                  },
                  "percentage": {
                    "type": "number",
                    "format": "float"
                  }
                },
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": {
                    "type": "number",
                    "format": "float"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "orderLineItem": {
            "$ref": "#/components/schemas/OrderLineItem"
          },
          "orderTransactionCaptureRefund": {
            "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
          },
          "shippingCosts": {
            "properties": {
              "calculatedTaxes": {
                "description": "Contains calculated taxes based on shipping costs/methods."
              },
              "taxRules": {
                "description": "Pricing based on multiple taxes."
              },
              "referencePrice": {
                "description": "Original cost price of the product."
              },
              "listPrice": {
                "properties": {
                  "price": {
                    "description": "Price of each line item."
                  },
                  "discount": {
                    "description": "Absolute discount on each line item."
                  },
                  "percentage": {
                    "description": "Discount in percentage."
                  }
                }
              },
              "regulationPrice": {
                "properties": {
                  "price": {
                    "description": "Contains cheapest price from last 30 days as per EU law."
                  }
                }
              }
            }
          }
        },
        "type": "object"
      },
      "OrderWarehouseGroup": {
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order warehouse group."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "PaymentMethodJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "createdAt",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "distinguishableName": {
                "type": "string",
                "readOnly": true
              },
              "description": {
                "type": "string"
              },
              "position": {
                "type": "integer",
                "format": "int64"
              },
              "active": {
                "type": "boolean"
              },
              "afterOrderEnabled": {
                "type": "boolean"
              },
              "customFields": {
                "type": "object"
              },
              "mediaId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "synchronous": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean",
                "readOnly": true
              },
              "asynchronous": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean",
                "readOnly": true
              },
              "prepared": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean",
                "readOnly": true
              },
              "refundable": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean",
                "readOnly": true
              },
              "recurring": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean",
                "readOnly": true
              },
              "shortName": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/payment-method/da8da1569e6bef3249a7064261df833f/media"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "media"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "62933a2951ef01f4eafd9bdf4d3cd2f0"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "PaymentMethod": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of payment method."
          },
          "name": {
            "type": "string",
            "description": "Name of the payment method."
          },
          "distinguishableName": {
            "type": "string",
            "readOnly": true,
            "description": "System identifier name for payment method."
          },
          "description": {
            "type": "string",
            "description": "A short description about the payment method."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "The order of the tabs of your defined payment methods in the storefront by entering numerical values like 1,2,3, etc."
          },
          "active": {
            "type": "boolean",
            "description": "When boolean value is `true`, the payment methods are available for selection in the storefront."
          },
          "afterOrderEnabled": {
            "type": "boolean",
            "description": "When set to true, customers are redirected to the payment options page to choose a new payment method on order failure."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "mediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of media."
          },
          "synchronous": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean",
            "readOnly": true
          },
          "asynchronous": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean",
            "readOnly": true
          },
          "prepared": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean",
            "readOnly": true
          },
          "refundable": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean",
            "readOnly": true
          },
          "recurring": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean",
            "readOnly": true
          },
          "shortName": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          }
        },
        "type": "object"
      },
      "Plugin": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt",
          "label"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of a plugin."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          }
        },
        "type": "object"
      },
      "ProductJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "taxId",
              "productNumber",
              "stock",
              "createdAt",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "versionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "parentId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "parentVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "manufacturerId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productManufacturerVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "unitId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "taxId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "coverId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productMediaVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "deliveryTimeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "canonicalProductId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "cmsPageId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "cmsPageVersionId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "productNumber": {
                "type": "string"
              },
              "restockTime": {
                "type": "integer",
                "format": "int64"
              },
              "active": {
                "type": "boolean"
              },
              "available": {
                "type": "boolean",
                "readOnly": true
              },
              "isCloseout": {
                "type": "boolean"
              },
              "displayGroup": {
                "type": "string",
                "readOnly": true
              },
              "manufacturerNumber": {
                "type": "string"
              },
              "ean": {
                "type": "string"
              },
              "purchaseSteps": {
                "type": "integer",
                "format": "int64"
              },
              "maxPurchase": {
                "type": "integer",
                "format": "int64"
              },
              "minPurchase": {
                "type": "integer",
                "format": "int64"
              },
              "purchaseUnit": {
                "type": "number",
                "format": "float"
              },
              "referenceUnit": {
                "type": "number",
                "format": "float"
              },
              "shippingFree": {
                "type": "boolean"
              },
              "markAsTopseller": {
                "type": "boolean"
              },
              "weight": {
                "type": "number",
                "format": "float"
              },
              "width": {
                "type": "number",
                "format": "float"
              },
              "height": {
                "type": "number",
                "format": "float"
              },
              "length": {
                "type": "number",
                "format": "float"
              },
              "releaseDate": {
                "type": "string",
                "format": "date-time"
              },
              "ratingAverage": {
                "type": "number",
                "format": "float",
                "readOnly": true
              },
              "categoryTree": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "^[0-9a-f]{32}$"
                },
                "readOnly": true
              },
              "propertyIds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "^[0-9a-f]{32}$"
                },
                "readOnly": true
              },
              "optionIds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "^[0-9a-f]{32}$"
                },
                "readOnly": true
              },
              "streamIds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "^[0-9a-f]{32}$"
                },
                "readOnly": true
              },
              "categoryIds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "^[0-9a-f]{32}$"
                },
                "readOnly": true
              },
              "childCount": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "sales": {
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "states": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              },
              "metaDescription": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "keywords": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "metaTitle": {
                "type": "string"
              },
              "packUnit": {
                "type": "string"
              },
              "packUnitPlural": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "availableStock": {
                "type": "integer",
                "format": "int64"
              },
              "stock": {
                "type": "integer",
                "format": "int64"
              },
              "calculatedPrice": {
                "type": "object"
              },
              "calculatedPrices": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "calculatedMaxPurchase": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "integer",
                "format": "int64"
              },
              "calculatedCheapestPrice": {
                "type": "object"
              },
              "isNew": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean"
              },
              "sortedProperties": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "extensions": {
                "properties": {
                  "reviewSummaries": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/reviewSummaries"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_review_summary"
                            },
                            "id": {
                              "type": "string",
                              "example": "c9c718522e64ffa5effb26cef94f4849"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "downloads": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/downloads"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_download"
                            },
                            "id": {
                              "type": "string",
                              "example": "d07d50a751bc6ddf12bf3af0efee9b45"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "parent": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/parent"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "d0e45878043844ffc41aac437e86b602"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "children": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/children"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product"
                            },
                            "id": {
                              "type": "string",
                              "example": "268184c12df027f536154d099d497b31"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "deliveryTime": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/deliveryTime"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "delivery_time"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "8c888ae25a7bd42057370e31f7e01044"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tax": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/tax"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "tax"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "06565e5611f23fdf8cc43e5077b92b54"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "manufacturer": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/manufacturer"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product_manufacturer"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "c2904bca62b22443d6cf5e9d89cab204"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "unit": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/unit"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "unit"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "3e34bdebd9bd5edda27e8728904a2552"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "cover": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/cover"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product_media"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "41d0e299ca1abeb2094852da042165c7"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "cmsPage": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/cmsPage"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "cms_page"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "7b1460918b1abb93311108f3dc021c9b"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "canonicalProduct": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/canonicalProduct"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "product"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "023995a50b56c0de077323e958b2bbcd"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/media"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_media"
                            },
                            "id": {
                              "type": "string",
                              "example": "62933a2951ef01f4eafd9bdf4d3cd2f0"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "crossSellings": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/crossSellings"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_cross_selling"
                            },
                            "id": {
                              "type": "string",
                              "example": "89936e14544d1b403cecef938101b6b0"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "configuratorSettings": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/configuratorSettings"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_configurator_setting"
                            },
                            "id": {
                              "type": "string",
                              "example": "c0827fee13725d41f1fd7e292243f5aa"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "productReviews": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/productReviews"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_review"
                            },
                            "id": {
                              "type": "string",
                              "example": "01e78541ea343ed72424a5222796a4cd"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "mainCategories": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/mainCategories"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "main_category"
                            },
                            "id": {
                              "type": "string",
                              "example": "1fb731fc4139cbb575429e28846f0c39"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "seoUrls": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/seoUrls"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "seo_url"
                            },
                            "id": {
                              "type": "string",
                              "example": "5321b5a71127b8b98cdd4b068ad56c4c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "options": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/options"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "property_group_option"
                            },
                            "id": {
                              "type": "string",
                              "example": "93da65a9fd0004d9477aeac024e08e15"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "properties": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/properties"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "property_group_option"
                            },
                            "id": {
                              "type": "string",
                              "example": "74693d2fc58b46bd06410f278e39aa71"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "categories": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/categories"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "category"
                            },
                            "id": {
                              "type": "string",
                              "example": "b0b5ccb4a195a07fd3eed14affb8695f"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "streams": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/streams"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "product_stream"
                            },
                            "id": {
                              "type": "string",
                              "example": "2f6f4768f1c2d7c8f1f54823723f1a70"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "categoriesRo": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/categoriesRo"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "category"
                            },
                            "id": {
                              "type": "string",
                              "example": "7f0702d3a90d965b8c9158c451f43fdb"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "seoCategory": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/product/deb10517653c255364175796ace3553f/seoCategory"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "category"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "9354d004d12e03d35ad8292bf0bb234d"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Product": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "taxId",
          "productNumber",
          "stock",
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product's version."
          },
          "parentId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the parent product."
          },
          "parentVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the parent product's version."
          },
          "manufacturerId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the manufacturer."
          },
          "productManufacturerVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product's manufacturer version."
          },
          "unitId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the unit."
          },
          "taxId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identifier of tax."
          },
          "coverId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identifier of a ProductMedia item used as product cover."
          },
          "productMediaVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identifier of product's media version."
          },
          "deliveryTimeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identifier of delivery time."
          },
          "canonicalProductId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identifier of canonical product."
          },
          "cmsPageId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identifier of CMS page."
          },
          "cmsPageVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identifier of CMS page's version."
          },
          "productNumber": {
            "type": "string",
            "description": "Unique number assigned to individual products. Define rules for automatic assignment of every product creation as per your number range."
          },
          "restockTime": {
            "type": "integer",
            "format": "int64",
            "description": "The restock time in days indicates how long it will take until a sold out item is back in stock."
          },
          "active": {
            "type": "boolean",
            "description": "When boolean value is `true`, the products are available for selection in the storefront for purchase."
          },
          "available": {
            "type": "boolean",
            "readOnly": true
          },
          "isCloseout": {
            "type": "boolean"
          },
          "displayGroup": {
            "type": "string",
            "readOnly": true
          },
          "manufacturerNumber": {
            "type": "string"
          },
          "ean": {
            "type": "string",
            "description": "Indicates EAN of the product."
          },
          "purchaseSteps": {
            "type": "integer",
            "format": "int64",
            "description": "Specifies the scales in which the item is to be offered. For example, a scale of 2 means that your customers can purchase 2, 4, 6 products, etc., but not 1, 3 or 5."
          },
          "maxPurchase": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of items that can be purchased."
          },
          "minPurchase": {
            "type": "integer",
            "format": "int64",
            "description": "Minimum number of items that can be purchased."
          },
          "purchaseUnit": {
            "type": "number",
            "format": "float",
            "description": "Quantity of the item purchased. For example, 500ml, 2kg, etc."
          },
          "referenceUnit": {
            "type": "number",
            "format": "float",
            "description": "Price of purchased item calculated as per the reference unit. Say, you bought 500ml of milk and the price is calculated in reference to 1000ml. "
          },
          "shippingFree": {
            "type": "boolean",
            "description": "Indicates weather the shipping price is free or not."
          },
          "markAsTopseller": {
            "type": "boolean",
            "description": "Indicates weather the product is top seller or not."
          },
          "weight": {
            "type": "number",
            "format": "float",
            "description": "The weight of the product."
          },
          "width": {
            "type": "number",
            "format": "float",
            "description": "The width of the product."
          },
          "height": {
            "type": "number",
            "format": "float",
            "description": "The height of the product."
          },
          "length": {
            "type": "number",
            "format": "float",
            "description": "The length of the product."
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time",
            "description": "The release date of a product or product model. This can be used to distinguish the exact variant of a product."
          },
          "ratingAverage": {
            "type": "number",
            "format": "float",
            "readOnly": true,
            "description": "Runtime field, cannot be used as part of the criteria."
          },
          "categoryTree": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            },
            "readOnly": true,
            "description": "Runtime field, cannot be used as part of the criteria."
          },
          "propertyIds": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            },
            "readOnly": true,
            "description": "Runtime field, cannot be used as part of the criteria."
          },
          "optionIds": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            },
            "readOnly": true,
            "description": "Runtime field, cannot be used as part of the criteria."
          },
          "streamIds": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            },
            "readOnly": true,
            "description": "Runtime field, cannot be used as part of the criteria."
          },
          "categoryIds": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            },
            "readOnly": true,
            "description": "Runtime field, cannot be used as part of the criteria."
          },
          "childCount": {
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "description": "Runtime field, cannot be used as part of the criteria."
          },
          "sales": {
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "description": "Runtime field, cannot be used as part of the criteria."
          },
          "states": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "description": "Internal field."
          },
          "metaDescription": {
            "type": "string",
            "description": "A short description of the product for search results listings."
          },
          "name": {
            "type": "string",
            "description": "Name of the product."
          },
          "keywords": {
            "type": "string",
            "description": "Keywords that give additional information about the Product."
          },
          "description": {
            "type": "string",
            "description": "Description of the product."
          },
          "metaTitle": {
            "type": "string",
            "description": "A page title indexed by search engines and appears in search results listings."
          },
          "packUnit": {
            "type": "string",
            "description": "Type of packing. For example, bottle, tin, crate, etc."
          },
          "packUnitPlural": {
            "type": "string",
            "description": "Type of packing in plural. For example, bottles, tins, crates, etc."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "availableStock": {
            "type": "integer",
            "format": "int64",
            "description": "Indicates the number of products still available. This value results from the stock minus the open orders."
          },
          "stock": {
            "type": "integer",
            "format": "int64"
          },
          "calculatedPrice": {
            "type": "object",
            "description": "Runtime field, cannot be used as part of the criteria."
          },
          "calculatedPrices": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false
            },
            "description": "Runtime field, cannot be used as part of the criteria."
          },
          "calculatedMaxPurchase": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "integer",
            "format": "int64"
          },
          "calculatedCheapestPrice": {
            "type": "object",
            "description": "Runtime field, cannot be used as part of the criteria."
          },
          "isNew": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean"
          },
          "sortedProperties": {
            "type": "object"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "extensions": {
            "properties": {
              "reviewSummaries": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/product/deb10517653c255364175796ace3553f/reviewSummaries"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "product_review_summary"
                        },
                        "id": {
                          "type": "string",
                          "example": "c9c718522e64ffa5effb26cef94f4849"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "downloads": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDownload"
            }
          },
          "parent": {
            "$ref": "#/components/schemas/Product"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            }
          },
          "deliveryTime": {
            "$ref": "#/components/schemas/DeliveryTime",
            "description": "Time taken for the product to reach the customer. If a delivery time is defined in the product, it overwrites the delivery time of a shipping method."
          },
          "tax": {
            "$ref": "#/components/schemas/Tax"
          },
          "manufacturer": {
            "$ref": "#/components/schemas/ProductManufacturer"
          },
          "unit": {
            "$ref": "#/components/schemas/Unit"
          },
          "cover": {
            "$ref": "#/components/schemas/ProductMedia"
          },
          "cmsPage": {
            "$ref": "#/components/schemas/CmsPage"
          },
          "canonicalProduct": {
            "$ref": "#/components/schemas/Product"
          },
          "media": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductMedia"
            }
          },
          "crossSellings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCrossSelling"
            }
          },
          "configuratorSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductConfiguratorSetting"
            }
          },
          "productReviews": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductReview"
            }
          },
          "mainCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MainCategory"
            }
          },
          "seoUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SeoUrl"
            }
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyGroupOption"
            }
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyGroupOption"
            }
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            }
          },
          "streams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductStream"
            }
          },
          "categoriesRo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            }
          },
          "seoCategory": {
            "$ref": "#/components/schemas/Category"
          },
          "externalReference": {
            "description": "External payment provider token."
          }
        },
        "type": "object",
        "stock": {
          "description": "Indicate the number of product/s currently in stock. As soon as the order status of an order is set to completed, the stock is reduced."
        },
        "available": {
          "description": "Indicates weather the product is available or not."
        },
        "isCloseout": {
          "description": "When the value is set to true, the product is hidden when sold out."
        },
        "displayGroup": {
          "description": "Runtime field, cannot be used as part of the criteria."
        },
        "mainVariantId": {
          "description": "Unique identity of main variant."
        },
        "manufacturerNumber": {
          "description": "Unique number that describes the manufacturer."
        }
      },
      "ProductConfiguratorSetting": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "productId",
          "optionId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Product configurator setting."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Product configurator setting version."
          },
          "productId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of product."
          },
          "productVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of product version."
          },
          "mediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of media."
          },
          "optionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of option."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "The order of the tabs of your defined product configuration settings in the storefront by entering numerical values like 1,2,3, etc."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          },
          "option": {
            "$ref": "#/components/schemas/PropertyGroupOption"
          }
        },
        "type": "object"
      },
      "ProductCrossSelling": {
        "description": "Added since version: 6.1.0.0",
        "required": [
          "name",
          "position",
          "type",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of product cross selling."
          },
          "name": {
            "type": "string",
            "description": "Name defined for Product cross selling."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "The order of the tabs of your defined cross-selling actions in the storefront by entering numerical values like 1,2,3, etc."
          },
          "sortBy": {
            "type": "string",
            "description": "To sort the display of products by name, price or publication (descending, ascending) date."
          },
          "sortDirection": {
            "type": "string",
            "description": "To sort the display of products by ascending or descending order."
          },
          "type": {
            "type": "string",
            "description": "Type of product assignment for cross-selling. It can either be Dynamic product group or Manual assignment."
          },
          "active": {
            "type": "boolean",
            "description": "When set to active, the cross-selling feature is enabled."
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "The maximum number of products to be displayed in cross-selling on the item detail page of your item."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          }
        },
        "type": "object"
      },
      "ProductCrossSellingAssignedProducts": {
        "description": "Added since version: 6.2.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Product CrossSelling Assigned Products."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ProductDownload": {
        "description": "Added since version: 6.4.19.0",
        "required": [
          "productId",
          "mediaId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity downloaded product."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of downloaded product's version."
          },
          "productId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Product."
          },
          "productVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Product version."
          },
          "mediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of media."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "The order in which the digital products are downloaded, like 1,2,3, etc.to adjust their order of display."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          }
        },
        "type": "object"
      },
      "ProductExport": {
        "description": "Added since version: 6.1.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Exported Product."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ProductFeatureSet": {
        "description": "Added since version: 6.3.0.0",
        "required": [
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of product feature set."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          }
        },
        "type": "object"
      },
      "ProductKeywordDictionary": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "languageId",
          "keyword"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of product keyword."
          },
          "languageId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the language."
          },
          "keyword": {
            "type": "string",
            "description": "The keywords that help to search the product."
          }
        },
        "type": "object"
      },
      "ProductManufacturer": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the Product Manufacturer."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the ProductManufacturer's version."
          },
          "mediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the media."
          },
          "link": {
            "type": "string",
            "description": "URL of the manufacturer's portal."
          },
          "name": {
            "type": "string",
            "description": "Name of the product manufacturer."
          },
          "description": {
            "type": "string",
            "description": "A detailed description of product manufacturer."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          }
        },
        "type": "object"
      },
      "ProductMedia": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "productId",
          "mediaId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the Product Media."
          },
          "versionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the ProductMedia version."
          },
          "productId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product."
          },
          "productVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product's version."
          },
          "mediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the media."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "The order of the images to be displayed for a product."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          }
        },
        "type": "object"
      },
      "ProductPrice": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product's price."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ProductReview": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "productId",
          "salesChannelId",
          "languageId",
          "title",
          "content",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product's review."
          },
          "productId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product."
          },
          "productVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the product's version."
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the sales channel."
          },
          "languageId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the language."
          },
          "title": {
            "type": "string",
            "description": "Title of product review."
          },
          "content": {
            "type": "string",
            "description": "Short description or subject of the project review."
          },
          "points": {
            "type": "number",
            "format": "float",
            "description": "A floating point number given to rate a product."
          },
          "status": {
            "type": "boolean",
            "description": "When status is set, the rating is made visible."
          },
          "comment": {
            "type": "string",
            "description": "Detailed review about the product."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ProductReviewSummary": {
        "required": [
          "productId",
          "salesChannelId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of products's review summary."
          },
          "productId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of products."
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of sales channel."
          },
          "summary": {
            "type": "string",
            "description": "Unique identity of products's review summary."
          },
          "visible": {
            "type": "boolean",
            "description": "When boolean value is `true`, the review is displayed to the customer."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          }
        },
        "type": "object"
      },
      "ProductSearchConfig": {
        "description": "Added since version: 6.3.5.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Product Search Configuration."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ProductSearchConfigField": {
        "description": "Added since version: 6.3.5.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Product Search Configuration field."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ProductSearchKeyword": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Product Search Keyword."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ProductSorting": {
        "description": "Added since version: 6.3.2.0",
        "required": [
          "key",
          "priority",
          "createdAt",
          "label"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Product sorting."
          },
          "key": {
            "type": "string",
            "description": "A keyword associated to identify product sorting."
          },
          "priority": {
            "type": "integer",
            "format": "int64",
            "description": "A numerical value to prioritize the product sorting."
          },
          "label": {
            "type": "string",
            "description": "Label given to a product sorting."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          }
        },
        "type": "object"
      },
      "ProductStream": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of product stream."
          },
          "name": {
            "type": "string",
            "description": "Name of the Dynamic Group to be created."
          },
          "description": {
            "type": "string",
            "description": "Description of the Dynamic group to be created."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          }
        },
        "type": "object"
      },
      "ProductStreamFilter": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of product stream filter."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ProductVisibility": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of product visibility."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ProductWarehouse": {
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of warehouse of product."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "Promotion": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of promotion."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          }
        },
        "type": "object"
      },
      "PromotionDiscount": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of promotion discount."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "PromotionDiscountPrices": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of promotion discount price."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "PromotionIndividualCode": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of promotion individual code."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "PromotionSalesChannel": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of promotion on sales channel."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "PromotionSetgroup": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of promotion set group."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "PropertyGroup": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "displayType",
          "sortingType",
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of property group."
          },
          "name": {
            "type": "string",
            "description": "Name of the property group."
          },
          "description": {
            "type": "string",
            "description": "Description on property group."
          },
          "displayType": {
            "type": "string",
            "description": "Property groups can be displayed in the form of text, image, dropdown or color."
          },
          "sortingType": {
            "type": "string",
            "description": "Sorting the property group by name or position."
          },
          "filterable": {
            "type": "boolean",
            "description": "When set to true, the property will be displayed in the product filter of product lists."
          },
          "visibleOnProductDetailPage": {
            "type": "boolean",
            "description": "When set to true, the property groups are displayed on product detail page."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "The order of the tabs of your defined property groups. Enter numerical values like 1,2,3, etc.to adjust their order of display."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyGroupOption"
            }
          }
        },
        "type": "object"
      },
      "PropertyGroupOption": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "groupId",
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of property group option."
          },
          "groupId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of property group."
          },
          "name": {
            "type": "string",
            "description": "Name of the property group option."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "The order of the tabs of your defined property group options. Enter numerical values like 1,2,3, etc.to adjust their order of display."
          },
          "colorHexCode": {
            "type": "string",
            "description": "Property group options can be displayed in the form of color. For example: #98e3f5ff."
          },
          "mediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of media."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          },
          "group": {
            "$ref": "#/components/schemas/PropertyGroup"
          }
        },
        "type": "object"
      },
      "Rule": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "name",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of rule."
          },
          "name": {
            "type": "string",
            "description": "Name of the rule defined."
          },
          "description": {
            "type": "string",
            "description": "Description of the rule."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "extensions": {
            "properties": {
              "warehouseGroup": {
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri-reference",
                        "example": "/rule/ab7a485ebe75b6dd7243ad719f23c7de/warehouseGroup"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "warehouse_group"
                        },
                        "id": {
                          "type": "string",
                          "example": "1768e3071b62161d415e0c24332055ed"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object",
            "description": "To store additional data to a rule from extensions."
          }
        },
        "type": "object"
      },
      "RuleCondition": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of rule condition."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SalesChannel": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "languageId",
          "customerGroupId",
          "currencyId",
          "paymentMethodId",
          "shippingMethodId",
          "countryId",
          "navigationCategoryId",
          "createdAt",
          "name",
          "homeEnabled"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of sales channel."
          },
          "languageId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of language used."
          },
          "customerGroupId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of customer group."
          },
          "currencyId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of currency used."
          },
          "paymentMethodId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of payment method used."
          },
          "shippingMethodId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of shipping method."
          },
          "countryId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of country."
          },
          "navigationCategoryId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of navigation category."
          },
          "navigationCategoryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of navigation category's version."
          },
          "navigationCategoryDepth": {
            "type": "integer",
            "format": "int64",
            "description": "It determines the number of levels of subcategories in the storefront category menu."
          },
          "footerCategoryId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of footer category."
          },
          "footerCategoryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of footer category's version."
          },
          "serviceCategoryId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of service category."
          },
          "serviceCategoryVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of service category's version."
          },
          "mailHeaderFooterId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of mail header and footer."
          },
          "hreflangDefaultDomainId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of hreflangDefaultDomain."
          },
          "name": {
            "type": "string",
            "description": "Name of the sales channel."
          },
          "shortName": {
            "type": "string",
            "description": "A short name for sales channel."
          },
          "taxCalculationType": {
            "type": "string",
            "description": "Tax calculation types are `horizontal` and `vertical`."
          },
          "configuration": {
            "type": "object"
          },
          "active": {
            "type": "boolean",
            "description": "When boolean value is `true`, the sales channel is enabled."
          },
          "hreflangActive": {
            "type": "boolean",
            "description": "When set to true, the sales channel pages are available in different languages."
          },
          "maintenance": {
            "type": "boolean",
            "description": "When `true`, it indicates that the sales channel is undergoing maintenance, and shopping is temporarily unavailable during this period."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "shippingMethod": {
            "$ref": "#/components/schemas/ShippingMethod"
          },
          "country": {
            "$ref": "#/components/schemas/Country"
          },
          "domains": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesChannelDomain"
            }
          },
          "navigationCategory": {
            "$ref": "#/components/schemas/Category"
          },
          "footerCategory": {
            "$ref": "#/components/schemas/Category"
          },
          "serviceCategory": {
            "$ref": "#/components/schemas/Category"
          },
          "hreflangDefaultDomain": {
            "$ref": "#/components/schemas/SalesChannelDomain"
          }
        },
        "type": "object"
      },
      "SalesChannelAnalytics": {
        "description": "Added since version: 6.2.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of sales channel analytics."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SalesChannelDomain": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "url",
          "salesChannelId",
          "languageId",
          "currencyId",
          "snippetSetId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of sales channel domain."
          },
          "url": {
            "type": "string",
            "description": "URL of the sales channel domain."
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of sales channel."
          },
          "languageId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of language used."
          },
          "currencyId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of currency."
          },
          "snippetSetId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of snippet set."
          },
          "hreflangUseOnlyLocale": {
            "type": "boolean",
            "description": "This is used to toggle the language configurations, say between DE and DE-DE for instance."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "salesChannelDefaultHreflang": {
            "$ref": "#/components/schemas/SalesChannel"
          }
        },
        "type": "object"
      },
      "SalesChannelType": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of sales channel type."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          }
        },
        "type": "object"
      },
      "SalutationJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "salutationKey",
              "createdAt",
              "displayName",
              "letterName"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salutationKey": {
                "type": "string"
              },
              "displayName": {
                "type": "string"
              },
              "letterName": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "Salutation": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "salutationKey",
          "createdAt",
          "displayName",
          "letterName"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of salutation."
          },
          "salutationKey": {
            "type": "string",
            "description": "Technical name given to salutation. For example: mr"
          },
          "displayName": {
            "type": "string",
            "description": "Name given for salutation and displayed in storefront. For example: Mr"
          },
          "letterName": {
            "type": "string",
            "description": "Name given for salutation and used in the mail templates. For example, Dear Mr"
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          }
        },
        "type": "object"
      },
      "ScheduledTask": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of scheduled task."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "Script": {
        "description": "Added since version: 6.4.7.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of a script."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SeoUrlJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "languageId",
              "foreignKey",
              "routeName",
              "pathInfo",
              "seoPathInfo",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "salesChannelId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "languageId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "foreignKey": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "routeName": {
                "type": "string"
              },
              "pathInfo": {
                "type": "string"
              },
              "seoPathInfo": {
                "type": "string"
              },
              "isCanonical": {
                "type": "boolean"
              },
              "isModified": {
                "type": "boolean"
              },
              "isDeleted": {
                "type": "boolean"
              },
              "url": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "isValid": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              }
            },
            "type": "object"
          }
        ]
      },
      "SeoUrl": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "languageId",
          "foreignKey",
          "routeName",
          "pathInfo",
          "seoPathInfo",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Seo Url."
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of sales channel."
          },
          "languageId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of language."
          },
          "foreignKey": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "The key that references to product or category entity ID."
          },
          "routeName": {
            "type": "string",
            "description": "A destination routeName that has been registered somewhere in the app's router. For example: \"frontend.detail.page\""
          },
          "pathInfo": {
            "type": "string",
            "description": "Path to product URL. For example: \"/detail/bbf36734504741c79a3bbe3795b91564\""
          },
          "seoPathInfo": {
            "type": "string",
            "description": "Seo path to product. For example: \"Pepper-white-ground-pearl/SW10098\""
          },
          "isCanonical": {
            "type": "boolean",
            "description": "When set to true, search redirects to the main URL."
          },
          "isModified": {
            "type": "boolean",
            "description": "When boolean value is `true`, the seo url is changed."
          },
          "isDeleted": {
            "type": "boolean",
            "description": "When set to true, the URL is deleted and cannot be used any more but it is still available on table and can be restored later."
          },
          "url": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "string"
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "isValid": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SeoUrlTemplate": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Seo Url template."
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of sales channel."
          },
          "isValid": {
            "type": "boolean",
            "description": "Created SEO URL template can be made usable by setting `isValid` to true."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ShippingMethodJsonApi": {
        "description": "Added since version: 6.0.0.0",
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "deliveryTimeId",
              "taxType",
              "createdAt",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "active": {
                "type": "boolean"
              },
              "position": {
                "type": "integer",
                "format": "int64"
              },
              "customFields": {
                "type": "object"
              },
              "mediaId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "deliveryTimeId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "taxType": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "trackingUrl": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "deliveryTime": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/d72e7a227a27328b28342b32fc66b6bf/deliveryTime"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "delivery_time"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "8c888ae25a7bd42057370e31f7e01044"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "availabilityRule": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/d72e7a227a27328b28342b32fc66b6bf/availabilityRule"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "rule"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "9fbb7961d1cb158094924c679e1b302c"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "prices": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/d72e7a227a27328b28342b32fc66b6bf/prices"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "shipping_method_price"
                            },
                            "id": {
                              "type": "string",
                              "example": "afae32efe0f84fece3f96b377b768b33"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/d72e7a227a27328b28342b32fc66b6bf/media"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "media"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "62933a2951ef01f4eafd9bdf4d3cd2f0"
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tags": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/d72e7a227a27328b28342b32fc66b6bf/tags"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "tag"
                            },
                            "id": {
                              "type": "string",
                              "example": "d57ac45256849d9b13e2422d91580fb9"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  },
                  "tax": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/shipping-method/d72e7a227a27328b28342b32fc66b6bf/tax"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "tax"
                          },
                          "id": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{32}$",
                            "example": "06565e5611f23fdf8cc43e5077b92b54"
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "ShippingMethod": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "deliveryTimeId",
          "taxType",
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of shipping method."
          },
          "name": {
            "type": "string",
            "description": "Name of the shipping method."
          },
          "active": {
            "type": "boolean",
            "description": "When boolean value is `true`, the shipping methods are available for selection in the storefront."
          },
          "position": {
            "type": "integer",
            "format": "int64",
            "description": "The order of the tabs of your defined shipping methods in the storefront by entering numerical values like 1,2,3, etc."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "mediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of media."
          },
          "deliveryTimeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of deliveryTime."
          },
          "taxType": {
            "type": "string",
            "description": "Refers `Free`, `Net` or `Gross` type of taxes."
          },
          "description": {
            "type": "string",
            "description": "Description of each shipping method."
          },
          "trackingUrl": {
            "type": "string",
            "description": "This URL allows to track packages."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "deliveryTime": {
            "$ref": "#/components/schemas/DeliveryTime"
          },
          "availabilityRule": {
            "$ref": "#/components/schemas/Rule"
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShippingMethodPrice"
            }
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "tax": {
            "$ref": "#/components/schemas/Tax"
          }
        },
        "type": "object"
      },
      "ShippingMethodPrice": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "shippingMethodId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of shipping method price."
          },
          "shippingMethodId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of shipping method."
          },
          "ruleId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of rule."
          },
          "calculation": {
            "type": "integer",
            "format": "int64",
            "description": "Shipping price calculated based on quantity, price, weight or volume of items."
          },
          "calculationRuleId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of rule calculation."
          },
          "quantityStart": {
            "type": "number",
            "format": "float",
            "description": "Starting range of quantity of an item."
          },
          "quantityEnd": {
            "type": "number",
            "format": "float",
            "description": "Ending range of quantity of an item."
          },
          "currencyPrice": {
            "type": "object",
            "description": "Contains currency-based price."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "Snippet": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "setId",
          "translationKey",
          "value",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of snippet."
          },
          "setId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity od snippet set."
          },
          "translationKey": {
            "type": "string",
            "description": "Reference to the snippet in the template."
          },
          "value": {
            "type": "string",
            "description": "Value of the key."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SnippetSet": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "name",
          "iso",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of snippet set."
          },
          "name": {
            "type": "string",
            "description": "Name of snippet set."
          },
          "iso": {
            "type": "string",
            "description": "ISO nomenclature used to classify languages."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "snippets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Snippet"
            }
          }
        },
        "type": "object"
      },
      "StateMachine": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of state machine."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "states": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateMachineState"
            }
          },
          "transitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateMachineTransition"
            }
          }
        },
        "type": "object"
      },
      "StateMachineHistory": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of state machine history."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "fromStateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "toStateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          }
        },
        "type": "object"
      },
      "StateMachineState": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "technicalName",
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of state machine state."
          },
          "technicalName": {
            "type": "string",
            "description": "Technical name of StateMachineState."
          },
          "name": {
            "type": "string",
            "description": "Display name of StateMachineState."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          }
        },
        "type": "object"
      },
      "StateMachineTransition": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of state machine transition."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "Subscription": {
        "required": [
          "convertedOrder",
          "subscriptionNumber",
          "nextSchedule",
          "salesChannelId",
          "subscriptionPlanName",
          "subscriptionIntervalName",
          "dateInterval",
          "cronInterval",
          "initialExecutionCount",
          "remainingExecutionCount",
          "billingAddressId",
          "shippingAddressId",
          "shippingMethodId",
          "paymentMethodId",
          "currencyId",
          "languageId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of subscription."
          },
          "convertedOrder": {
            "type": "object",
            "description": "An array loaded with persistent information related to cart data."
          },
          "subscriptionNumber": {
            "type": "string",
            "description": "Unique number associated with subscription."
          },
          "nextSchedule": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time of next scheduled subscription for example: `yyyy-mm-dd hh:mm:ss` - `2023-08-15 15:25:32`."
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of sales channel."
          },
          "subscriptionPlanId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of subscription plan."
          },
          "subscriptionPlanName": {
            "type": "string",
            "description": "Unique name for subscription plan."
          },
          "subscriptionIntervalId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity for subscription interval."
          },
          "subscriptionIntervalName": {
            "type": "string",
            "description": "Unique name for subscription interval."
          },
          "dateInterval": {
            "type": "string",
            "description": "Relative interval data. For example, `every 3 days`, `every 2 months`, etc."
          },
          "cronInterval": {
            "type": "string",
            "description": "Absolute interval data. For example, `only on January`, `only on Mondays`, etc."
          },
          "initialExecutionCount": {
            "type": "integer",
            "format": "int64"
          },
          "remainingExecutionCount": {
            "type": "integer",
            "format": "int64"
          },
          "billingAddressId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of billing address."
          },
          "shippingAddressId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of shipping address."
          },
          "shippingMethodId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of shipping method."
          },
          "paymentMethodId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of payment method."
          },
          "currencyId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of currency."
          },
          "languageId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of language."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "subscriptionPlan": {
            "$ref": "#/components/schemas/SubscriptionPlan"
          },
          "subscriptionInterval": {
            "$ref": "#/components/schemas/SubscriptionInterval"
          },
          "subscriptionCustomer": {
            "$ref": "#/components/schemas/SubscriptionCustomer"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/SubscriptionAddress"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/SubscriptionAddress"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionAddress"
            }
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "shippingMethod": {
            "$ref": "#/components/schemas/ShippingMethod"
          },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Order"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          }
        },
        "type": "object"
      },
      "SubscriptionAddress": {
        "required": [
          "countryId",
          "subscriptionId",
          "firstName",
          "lastName",
          "street",
          "city",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of subscription address."
          },
          "countryId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of country."
          },
          "subscriptionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of subscription."
          },
          "countryStateId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of state of the country."
          },
          "salutationId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of salutation."
          },
          "firstName": {
            "type": "string",
            "description": "First name of the subscribed customer."
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the subscribed customer."
          },
          "street": {
            "type": "string",
            "description": "Street address"
          },
          "zipcode": {
            "type": "string",
            "description": "Zip code of the country."
          },
          "city": {
            "type": "string"
          },
          "company": {
            "type": "string",
            "description": "Name of the company."
          },
          "department": {
            "type": "string",
            "description": "Name of the department."
          },
          "title": {
            "type": "string",
            "description": "Title name given to customer's order address."
          },
          "vatId": {
            "type": "string",
            "description": "Unique identity of VAT."
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number of the customer."
          },
          "additionalAddressLine1": {
            "type": "string",
            "description": "Additional address input if necessary."
          },
          "additionalAddressLine2": {
            "type": "string",
            "description": "Additional address input if necessary."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "billingSubscription": {
            "$ref": "#/components/schemas/Subscription"
          },
          "shippingSubscription": {
            "$ref": "#/components/schemas/Subscription"
          },
          "country": {
            "$ref": "#/components/schemas/Country"
          },
          "countryState": {
            "$ref": "#/components/schemas/CountryState"
          },
          "salutation": {
            "$ref": "#/components/schemas/Salutation"
          },
          "subscription": {
            "$ref": "#/components/schemas/Subscription"
          },
          "email": {
            "description": "Last name of the subscribed customer. "
          }
        },
        "type": "object"
      },
      "SubscriptionCustomer": {
        "required": [
          "salutationId",
          "email",
          "firstName",
          "lastName",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of subscription customer."
          },
          "customerId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of the customer."
          },
          "salutationId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of salutation."
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string",
            "description": "Email address of the subscribed customer."
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the subscribed customer. "
          },
          "company": {
            "type": "string",
            "description": "Name of the customer's company."
          },
          "title": {
            "type": "string",
            "description": "Title name given to customer's order address."
          },
          "customerNumber": {
            "type": "string",
            "description": "Unique number for subscribed customer."
          },
          "vatIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "salutation": {
            "$ref": "#/components/schemas/Salutation"
          },
          "vatId": {
            "description": "Unique identity of VAT."
          }
        },
        "type": "object"
      },
      "SubscriptionInterval": {
        "required": [
          "name",
          "active",
          "dateInterval",
          "cronInterval",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of subscription interval."
          },
          "name": {
            "type": "string",
            "description": "Name of the subscription interval."
          },
          "active": {
            "type": "boolean",
            "description": "When `true`, the defined subscription interval is available for selection in storefront."
          },
          "dateInterval": {
            "type": "string",
            "description": "Relative interval data. For example, `every 3 days`, `every 2 months`, etc."
          },
          "cronInterval": {
            "type": "string",
            "description": "Absolute interval data. For example, `only on January`, `only on Mondays`, etc."
          },
          "availabilityRuleId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of rule."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "subscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscription"
            }
          }
        },
        "type": "object"
      },
      "SubscriptionPlanJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "required": [
              "name",
              "active",
              "activeStorefrontLabel",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "active": {
                "type": "boolean"
              },
              "minimumExecutionCount": {
                "type": "integer",
                "format": "int64"
              },
              "activeStorefrontLabel": {
                "type": "boolean"
              },
              "availabilityRuleId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              },
              "discountPercentage": {
                "type": "number",
                "format": "float"
              },
              "label": {
                "type": "string"
              },
              "discountPrice": {
                "type": "object"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "translated": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "subscriptions": {
                    "properties": {
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string",
                            "format": "uri-reference",
                            "example": "/subscription-plan/5e63f9057837020694081b9412211bfb/subscriptions"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "subscription"
                            },
                            "id": {
                              "type": "string",
                              "example": "2d5d14f95af035cbd8437948de61f94c"
                            }
                          }
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "SubscriptionPlan": {
        "required": [
          "name",
          "active",
          "activeStorefrontLabel",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of subscription plan."
          },
          "name": {
            "type": "string",
            "description": "Name of the subscription plan."
          },
          "description": {
            "type": "string",
            "description": "A short description about the subscription plan."
          },
          "active": {
            "type": "boolean",
            "description": "When `true`, the subscription plan is available for selection in storefront."
          },
          "minimumExecutionCount": {
            "type": "integer",
            "format": "int64"
          },
          "activeStorefrontLabel": {
            "type": "boolean",
            "description": "When boolean value id `true`, the label overrides the plan name."
          },
          "availabilityRuleId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of rule."
          },
          "discountPercentage": {
            "type": "number",
            "format": "float"
          },
          "label": {
            "type": "string",
            "description": "Label that can overwrite the active plan name. "
          },
          "discountPrice": {
            "type": "object"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "subscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscription"
            }
          }
        },
        "type": "object"
      },
      "SubscriptionPlanIntervalMapping": {
        "required": [
          "subscriptionIntervalId",
          "subscriptionPlanId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of subscription plan interval mapping."
          },
          "subscriptionIntervalId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of subscription interval."
          },
          "subscriptionPlanId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of subscription plan."
          },
          "subscriptionPlan": {
            "$ref": "#/components/schemas/SubscriptionPlan"
          },
          "subscriptionInterval": {
            "$ref": "#/components/schemas/SubscriptionInterval"
          }
        },
        "type": "object"
      },
      "SubscriptionPlanProductMapping": {
        "required": [
          "productId",
          "subscriptionPlanId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of subscription plan for product mapping."
          },
          "productId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of product."
          },
          "productVersionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of product's version."
          },
          "subscriptionPlanId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of subscription plan."
          },
          "subscriptionPlan": {
            "$ref": "#/components/schemas/SubscriptionPlan"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          }
        },
        "type": "object"
      },
      "SubscriptionTagMapping": {
        "required": [
          "subscriptionId",
          "tagId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of subscription tag."
          },
          "subscriptionId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of subscription."
          },
          "tagId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of subscription tag."
          },
          "subscription": {
            "$ref": "#/components/schemas/Subscription"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          }
        },
        "type": "object"
      },
      "SwagDelayAction": {
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of swag delay action for flow builder"
          },
          "orderId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of order."
          },
          "customerId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of customer."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SystemConfig": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "configurationKey",
          "configurationValue",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of system configuration."
          },
          "configurationKey": {
            "type": "string",
            "description": "Config key for shop configurations."
          },
          "configurationValue": {
            "properties": {
              "_value": {
                "type": "object",
                "description": "Config value for shop configurations."
              }
            },
            "type": "object"
          },
          "salesChannelId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of sales channel."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          }
        },
        "type": "object"
      },
      "Tag": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of tag."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "Tax": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "taxRate",
          "name",
          "position",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of tax."
          },
          "taxRate": {
            "type": "number",
            "format": "float",
            "description": "Rate of tax."
          },
          "name": {
            "type": "string",
            "description": "Name defined for a Tax."
          },
          "position": {
            "description": "The order of the tabs of your defined taxes in the storefront by entering numerical values like 1,2,3, etc.",
            "type": "integer",
            "format": "int64"
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "TaxProvider": {
        "description": "Added since version: 6.5.0.0",
        "required": [
          "priority",
          "createdAt",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of tax provider."
          },
          "active": {
            "type": "boolean",
            "description": "When boolean value is `true`, the tax providers are available for selection in the storefront."
          },
          "name": {
            "type": "string",
            "description": "Name of the tax provider."
          },
          "priority": {
            "type": "integer",
            "format": "int64",
            "description": "A numerical value to prioritize one the tax providers from the list."
          },
          "processUrl": {
            "type": "string",
            "description": "External URL makes request to get tax info."
          },
          "appId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of app."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          }
        },
        "type": "object"
      },
      "TaxRule": {
        "description": "Added since version: 6.1.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of tax rule."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "TaxRuleType": {
        "description": "Added since version: 6.1.0.0",
        "required": [
          "createdAt",
          "typeName"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of tax rule type."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          }
        },
        "type": "object"
      },
      "Theme": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "name",
          "author",
          "active",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Theme."
          },
          "technicalName": {
            "type": "string",
            "description": "Technical name of Theme."
          },
          "name": {
            "type": "string",
            "description": "Name of theme which is translatable."
          },
          "author": {
            "type": "string",
            "description": "Name of the company."
          },
          "description": {
            "type": "string",
            "description": "Description of the theme."
          },
          "labels": {
            "type": "object",
            "description": "Identification label given to theme."
          },
          "helpTexts": {
            "type": "object",
            "description": "Texts from config element."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "previewMediaId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of media used for previewing the theme."
          },
          "parentThemeId": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of parent theme."
          },
          "baseConfig": {
            "type": "object",
            "description": "Config elements of theme like header, color, etc"
          },
          "configValues": {
            "type": "object"
          },
          "active": {
            "type": "boolean",
            "description": "When boolean value is `true`, the created theme can be made usable."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          },
          "media": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Media"
            }
          },
          "ConfigValues": {
            "description": "Chosen values for the configuration."
          }
        },
        "type": "object"
      },
      "Unit": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt",
          "shortCode",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of Unit."
          },
          "shortCode": {
            "type": "string",
            "description": "Short name for unit, e.g., m, kg."
          },
          "name": {
            "type": "string",
            "description": "Full name of the unit, e.g., Meter, kilogram."
          },
          "customFields": {
            "type": "object",
            "description": "Additional fields that offer a possibility to add own fields for the different program-areas."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "translated": {
            "type": "object",
            "description": "Contains the translations of all translated fields."
          }
        },
        "type": "object"
      },
      "User": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of user."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "UserAccessKey": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of user access key."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "UserConfig": {
        "description": "Added since version: 6.3.5.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of user configuration."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "UserRecovery": {
        "description": "Added since version: 6.0.0.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of user recovery."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "Warehouse": {
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of warehouse."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "WarehouseGroup": {
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of warehouse group."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "Webhook": {
        "description": "Added since version: 6.3.1.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of webhook."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "WebhookEventLog": {
        "description": "Added since version: 6.4.1.0",
        "required": [
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{32}$",
            "description": "Unique identity of webhook event log."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "Cart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ArrayStruct"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the cart - for example `guest-cart`",
                "type": "string"
              },
              "token": {
                "description": "Context token identifying the cart and the user session",
                "type": "string"
              },
              "price": {
                "type": "object",
                "properties": {
                  "netPrice": {
                    "description": "Net price of the cart",
                    "type": "number",
                    "format": "float"
                  },
                  "totalPrice": {
                    "description": "Total price of the cart, including shipping costs, discounts and taxes",
                    "type": "number",
                    "format": "float"
                  },
                  "positionPrice": {
                    "description": "Price for all line items in the cart",
                    "type": "number",
                    "format": "float"
                  },
                  "taxStatus": {
                    "description": "Tax calculation for the cart. One of `gross`, `net` or `tax-free`",
                    "type": "string"
                  }
                }
              },
              "lineItems": {
                "description": "All items within the cart",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LineItem"
                }
              },
              "errors": {
                "type": "array",
                "description": "A list of all cart errors, such as insufficient stocks, invalid addresses or vouchers.",
                "items": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "level": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              },
              "transactions": {
                "description": "A list of all payment transactions associated with the current cart.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "paymentMethodId": {
                      "type": "string"
                    }
                  }
                }
              },
              "modified": {
                "type": "boolean"
              },
              "customerComment": {
                "type": "string",
                "description": "A comment that can be added to the cart."
              },
              "affiliateCode": {
                "type": "string",
                "description": "An affiliate tracking code"
              },
              "campaignCode": {
                "type": "string",
                "description": "A campaign tracking code"
              }
            }
          }
        ],
        "properties": {
          "id": {
            "description": "Unique identity of cart."
          },
          "errors": {
            "properties": {
              "key": {
                "description": "Unique key for every message."
              },
              "level": {
                "description": "Types of level - Notice, warning and error.  "
              },
              "message": {
                "description": "A persistent error passed from the shopping cart calculation processes to the user end."
              }
            }
          },
          "transactions": {
            "properties": {
              "paymentMethodId": {
                "description": "Unique identity of payment method."
              }
            }
          },
          "modified": {
            "description": "It signifies any changes to cart."
          }
        }
      },
      "EntitySearchResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ArrayStruct"
          },
          {
            "type": "object",
            "properties": {
              "entity": {
                "type": "string"
              },
              "total": {
                "type": "integer",
                "description": "The total number of found entities"
              },
              "aggregations": {
                "type": "array",
                "description": "Contains aggregated data. A simple example is the determination of the average price from a product search query.",
                "items": {
                  "type": "object"
                }
              },
              "page": {
                "type": "integer",
                "description": "The actual page. This can be used for pagination."
              },
              "limit": {
                "type": "integer",
                "description": "The actual limit. This is used for pagination and goes together with the page."
              }
            }
          }
        ]
      },
      "ShippingMethodPageRouteResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "active": {
              "type": "boolean"
            },
            "description": {
              "type": "string"
            },
            "deliveryTimeId": {
              "type": "string"
            },
            "deliveryTime": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "min": {
                  "type": "integer",
                  "format": "int32"
                },
                "max": {
                  "type": "integer",
                  "format": "int32"
                },
                "unit": {
                  "type": "string"
                }
              }
            },
            "translations": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "shippingMethodId": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            },
            "orderDeliveries": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "orderId": {
                    "type": "string"
                  },
                  "shippingOrderAddressId": {
                    "type": "string"
                  },
                  "shippingMethodId": {
                    "type": "string"
                  },
                  "shippingDateEarliest": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "shippingDateLatest": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "stateId": {
                    "type": "string"
                  }
                }
              }
            },
            "salesChannelDefaultAssignments": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "typeId": {
                    "type": "string"
                  },
                  "languageId": {
                    "type": "string"
                  },
                  "currencyId": {
                    "type": "string"
                  },
                  "paymentMethodId": {
                    "type": "string"
                  },
                  "shippingMethodId": {
                    "type": "string"
                  },
                  "countryId": {
                    "type": "string"
                  },
                  "navigationCategoryId": {
                    "type": "string"
                  },
                  "navigationCategoryDepth": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "footerCategoryId": {
                    "type": "string"
                  },
                  "serviceCategoryId": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "shortName": {
                    "type": "string"
                  },
                  "accessKey": {
                    "type": "string"
                  },
                  "active": {
                    "type": "boolean"
                  },
                  "maintenance": {
                    "type": "boolean"
                  },
                  "maintenanceIpWhitelist": {
                    "type": "string"
                  },
                  "mailHeaderFooterId": {
                    "type": "string"
                  },
                  "customerGroupId": {
                    "type": "string"
                  },
                  "hreflangActive": {
                    "type": "boolean"
                  },
                  "hreflangDefaultDomainId": {
                    "type": "string"
                  }
                }
              }
            },
            "salesChannels": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "typeId": {
                    "type": "string"
                  },
                  "languageId": {
                    "type": "string"
                  },
                  "currencyId": {
                    "type": "string"
                  },
                  "paymentMethodId": {
                    "type": "string"
                  },
                  "shippingMethodId": {
                    "type": "string"
                  },
                  "countryId": {
                    "type": "string"
                  },
                  "navigationCategoryId": {
                    "type": "string"
                  },
                  "navigationCategoryDepth": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "footerCategoryId": {
                    "type": "string"
                  },
                  "serviceCategoryId": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "shortName": {
                    "type": "string"
                  },
                  "accessKey": {
                    "type": "string"
                  },
                  "active": {
                    "type": "boolean"
                  },
                  "maintenance": {
                    "type": "boolean"
                  },
                  "maintenanceIpWhitelist": {
                    "type": "string"
                  },
                  "mailHeaderFooterId": {
                    "type": "string"
                  },
                  "customerGroupId": {
                    "type": "string"
                  },
                  "hreflangActive": {
                    "type": "boolean"
                  },
                  "hreflangDefaultDomainId": {
                    "type": "string"
                  }
                }
              }
            },
            "availabilityRule": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "priority": {
                  "type": "integer",
                  "format": "int32"
                },
                "invalid": {
                  "type": "boolean"
                }
              }
            },
            "availabilityRuleId": {
              "type": "string"
            },
            "prices": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "shippingMethodId": {
                    "type": "string"
                  },
                  "currencyId": {
                    "type": "string"
                  },
                  "ruleId": {
                    "type": "string"
                  },
                  "calculation": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "quantityStart": {
                    "type": "number",
                    "format": "float"
                  },
                  "quantityEnd": {
                    "type": "number",
                    "format": "float"
                  },
                  "price": {
                    "type": "number",
                    "format": "float"
                  },
                  "calculationRuleId": {
                    "type": "string"
                  }
                }
              }
            },
            "mediaId": {
              "type": "string"
            },
            "media": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string"
                },
                "mimeType": {
                  "type": "string"
                },
                "fileExtension": {
                  "type": "string"
                },
                "fileSize": {
                  "type": "integer",
                  "format": "int32"
                },
                "title": {
                  "type": "string"
                },
                "metaDataRaw": {
                  "type": "string"
                },
                "mediaTypeRaw": {
                  "type": "string"
                },
                "uploadedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "alt": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "fileName": {
                  "type": "string"
                },
                "mediaFolderId": {
                  "type": "string"
                },
                "private": {
                  "type": "boolean"
                },
                "thumbnailsRo": {
                  "type": "string"
                }
              }
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "properties": {
          "name": {
            "description": "Name of the shipping method."
          },
          "active": {
            "description": "When boolean value is `true`, the shipping methods are available for selection in the storefront."
          },
          "description": {
            "description": "The order of the tabs of your defined shipping methods in the storefront by entering numerical values like 1,2,3, etc."
          },
          "deliveryTimeId": {
            "description": "Unique identity of the delivery time."
          },
          "deliveryTime": {
            "properties": {
              "name": {
                "description": "Name given to delivery time."
              },
              "min": {
                "description": "Minimum delivery time taken."
              },
              "max": {
                "description": "Maximum delivery time taken."
              },
              "unit": {
                "description": "Unit in which the delivery time is defined. For example, days or hours."
              }
            }
          },
          "translations": {
            "properties": {
              "shippingMethodId": {
                "description": "Unique identity of shipping method."
              },
              "name": {
                "description": "Name of the shipping method."
              },
              "description": {
                "description": "A short description of the shipping method."
              }
            }
          },
          "orderDeliveries": {
            "properties": {
              "orderId": {
                "description": "Unique identity of order."
              },
              "shippingOrderAddressId": {
                "description": "Unique identity of shipping order address."
              },
              "shippingMethodId": {
                "description": "Unique identity of shipping method."
              },
              "shippingDateEarliest": {
                "description": "Date and time of earliest delivery of products."
              },
              "shippingDateLatest": {
                "description": "Date and time of latest delivery of products."
              },
              "stateId": {
                "description": "Unique identity of state."
              }
            }
          },
          "salesChannelDefaultAssignments": {
            "properties": {
              "stateId": {
                "description": "Unique identity of state."
              },
              "languageId": {
                "description": "Unique identity of language."
              },
              "currencyId": {
                "description": "Unique identity of currency."
              },
              "paymentMethodId": {
                "description": "Unique identity of payment method."
              },
              "shippingMethodId": {
                "description": "Unique identity of shipping method."
              },
              "countryId": {
                "description": "Unique identity of country."
              },
              "navigationCategoryId": {
                "description": "Unique identity of navigation category."
              },
              "navigationCategoryDepth": {
                "description": "It determines the number of levels of subcategories in the storefront category menu."
              },
              "footerCategoryId": {
                "description": "Unique identity of footer category."
              },
              "serviceCategoryId": {
                "description": "Unique identity of service category."
              },
              "name": {
                "description": "Name of the sales channel."
              },
              "shortName": {
                "description": "A short name for sales channel."
              },
              "accessKey": {
                "description": "Access key to store api."
              },
              "active": {
                "description": "When boolean value is `true`, the shipping methods are available for selection in the sales channel's storefront."
              },
              "maintenance": {
                "description": "When `true`, it indicates that the sales channel is undergoing maintenance, and shopping is temporarily unavailable during this period."
              },
              "maintenanceIpWhitelist": {
                "description": "Array of IP address allowed to access the sales channel."
              },
              "mailHeaderFooterId": {
                "description": "Unique identity of mail header and footer."
              },
              "customerGroupId": {
                "description": "Unique identity of customer group."
              },
              "hreflangActive": {
                "description": "When boolean value is `true`, the sales channel pages are available in different languages."
              },
              "hreflangDefaultDomainId": {
                "description": "Unique identity of hreflangDefaultDomain."
              }
            }
          },
          "salesChannels": {
            "properties": {
              "stateId": {
                "description": "Unique identity of state."
              },
              "languageId": {
                "description": "Unique identity of language."
              },
              "currencyId": {
                "description": "Unique identity of currency."
              },
              "paymentMethodId": {
                "description": "Unique identity of payment method."
              },
              "shippingMethodId": {
                "description": "Unique identity of shipping method."
              },
              "countryId": {
                "description": "Unique identity of country."
              },
              "navigationCategoryId": {
                "description": "Unique identity of navigation category."
              },
              "navigationCategoryDepth": {
                "description": "It determines the number of levels of subcategories in the storefront category menu."
              },
              "footerCategoryId": {
                "description": "Unique identity of footer category."
              },
              "serviceCategoryId": {
                "description": "Unique identity of service category."
              },
              "name": {
                "description": "Name of the sales channel."
              },
              "shortName": {
                "description": "A short name for sales channel."
              },
              "accessKey": {
                "description": "Access key to store api."
              },
              "active": {
                "description": "When boolean value is `true`, the shipping methods are available for selection in the storefront."
              },
              "maintenance": {
                "description": "When `true`, it indicates that the sales channel is undergoing maintenance, and shopping is temporarily unavailable during this period."
              },
              "maintenanceIpWhitelist": {
                "description": "Array of IP address allowed to access the sales channel."
              },
              "mailHeaderFooterId": {
                "description": "Unique identity of mail header and footer."
              },
              "customerGroupId": {
                "description": "Unique identity of customer group."
              },
              "hreflangActive": {
                "description": "When boolean value is `true``, the sales channel pages are available in different languages."
              },
              "hreflangDefaultDomainId": {
                "description": "Unique identity of hreflangDefaultDomain."
              }
            }
          },
          "availabilityRule": {
            "properties": {
              "name": {
                "description": "Unique name for the rule."
              },
              "description": {
                "description": "A short description about the rule."
              },
              "priority": {
                "description": "A numerical value to prioritize one of the rules from the list."
              },
              "invalid": {
                "description": "When the boolean value is `true`, the rule is no more available for usage."
              }
            }
          },
          "availabilityRuleId": {
            "description": "Unique identity of availability rule."
          },
          "prices": {
            "properties": {
              "shippingMethodId": {
                "description": "Unique identity of shipping method."
              },
              "currencyId": {
                "description": "Unique identity of currency."
              },
              "ruleId": {
                "description": "Unique identity of rule."
              },
              "calculation": {
                "description": "Shipping price calculated based on quantity, price, weight or volume of items."
              },
              "quantityStart": {
                "description": "Starting range of quantity of an item."
              },
              "quantityEnd": {
                "description": "Ending range of quantity of an item."
              },
              "price": {
                "description": "Shipping method price after applied rules."
              },
              "calculationRuleId": {
                "description": "Unique identity of calculation rule."
              }
            }
          },
          "mediaId": {
            "description": "Unique identity of media."
          },
          "media": {
            "properties": {
              "userId": {
                "description": "Unique identity of user."
              },
              "mimeType": {
                "description": "A string sent along with a file indicating the type of the file. For example: image/jpeg."
              },
              "fileExtension": {
                "description": "Type of file indication. For example: jpeg, png."
              },
              "fileSize": {
                "description": "Size of the file media file uploaded."
              },
              "title": {
                "description": "Title name give to the media."
              },
              "metaDataRaw": {
                "description": "Details of the media file uploaded."
              },
              "alt": {
                "description": "Alternate text for media."
              },
              "url": {
                "description": "Runtime field, cannot be used as part of the criteria."
              },
              "fileName": {
                "description": "Name of the media file uploaded."
              },
              "mediaFolderId": {
                "description": "Unique identity of media folder."
              },
              "private": {
                "description": "Boolean value is `true` to keep the media display private."
              }
            }
          },
          "tags": {
            "properties": {
              "name": {
                "description": "Name of the tag."
              }
            }
          }
        }
      },
      "ArrayStruct": {
        "$ref": "#/components/schemas/Struct"
      },
      "AccountNewsletterRecipientResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Struct"
          },
          {
            "type": "object",
            "properties": {
              "status": {
                "type": "string"
              }
            }
          }
        ],
        "properties": {
          "status": {
            "description": "Status indicates if the customer has subscribed to the news letter or not."
          }
        }
      },
      "Struct": {
        "type": "object",
        "properties": {
          "apiAlias": {
            "type": "string",
            "description": "Alias which can be used to restrict response fields. For more information see [includes](https://shopware.stoplight.io/docs/store-api/docs/concepts/search-queries.md#includes-apialias)."
          }
        }
      },
      "CartItems": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ArrayStruct"
          },
          {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LineItem"
                }
              }
            }
          }
        ],
        "properties": {
          "items": {
            "properties": {
              "id": {
                "description": "Unique identity of cart item."
              },
              "modified": {
                "description": "When boolean value is `true`, the cart is said to be modified."
              }
            }
          }
        }
      },
      "WishlistLoadRouteResponse": {
        "type": "object",
        "properties": {
          "wishlist": {
            "type": "object",
            "properties": {
              "customerId": {
                "type": "string",
                "description": "Unique identity of the customer."
              },
              "salesChannelId": {
                "type": "string",
                "description": "Unique identity of the sales channel."
              }
            }
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductListingResult"
            }
          }
        }
      },
      "SalesChannelContext": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ArrayStruct"
          },
          {
            "type": "object",
            "properties": {
              "token": {
                "description": "Context the user session",
                "type": "string"
              },
              "currentCustomerGroup": {
                "type": "object",
                "description": "Customer group of the current user",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "displayGross": {
                    "type": "boolean"
                  }
                }
              },
              "fallbackCustomerGroup": {
                "description": "Fallback group if the default customer group is not applicable",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "displayGross": {
                    "type": "boolean"
                  }
                }
              },
              "currency": {
                "type": "object",
                "description": "Currency associated with the current user",
                "properties": {
                  "isoCode": {
                    "type": "string"
                  },
                  "factor": {
                    "type": "integer"
                  },
                  "symbol": {
                    "type": "string"
                  },
                  "shortName": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "position": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "decimalPrecision": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "isSystemDefault": {
                    "type": "boolean"
                  }
                }
              },
              "salesChannel": {
                "description": "Information about the current sales channel",
                "type": "object",
                "properties": {
                  "typeId": {
                    "type": "string"
                  },
                  "languageId": {
                    "type": "string"
                  },
                  "currencyId": {
                    "type": "string"
                  },
                  "paymentMethodId": {
                    "type": "string"
                  },
                  "shippingMethodId": {
                    "type": "string"
                  },
                  "countryId": {
                    "type": "string"
                  },
                  "navigationCategoryId": {
                    "type": "string"
                  },
                  "navigationCategoryDepth": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "footerCategoryId": {
                    "type": "string"
                  },
                  "serviceCategoryId": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "shortName": {
                    "type": "string"
                  },
                  "accessKey": {
                    "type": "string"
                  },
                  "active": {
                    "type": "boolean"
                  },
                  "maintenance": {
                    "type": "boolean"
                  },
                  "maintenanceIpWhitelist": {
                    "type": "string"
                  },
                  "mailHeaderFooterId": {
                    "type": "string"
                  },
                  "customerGroupId": {
                    "type": "string"
                  },
                  "hreflangActive": {
                    "type": "boolean"
                  },
                  "hreflangDefaultDomainId": {
                    "type": "string"
                  },
                  "analyticsId": {
                    "type": "string"
                  }
                }
              },
              "taxRules": {
                "type": "array",
                "description": "Currently active tax rules and/or rates",
                "items": {
                  "type": "object",
                  "properties": {
                    "taxRate": {
                      "type": "number",
                      "format": "float"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                }
              },
              "customer": {
                "type": "object",
                "description": "Information about the current customer - `null` if the customer is not logged in",
                "properties": {
                  "groupId": {
                    "type": "string"
                  },
                  "defaultPaymentMethodId": {
                    "type": "string"
                  },
                  "salesChannelId": {
                    "type": "string"
                  },
                  "languageId": {
                    "type": "string"
                  },
                  "lastPaymentMethodId": {
                    "type": "string"
                  },
                  "defaultBillingAddressId": {
                    "type": "string"
                  },
                  "defaultShippingAddressId": {
                    "type": "string"
                  },
                  "defaultBillingAddress": {
                    "$ref": "#/components/schemas/CustomerAddress"
                  },
                  "defaultShippingAddress": {
                    "$ref": "#/components/schemas/CustomerAddress"
                  },
                  "activeBillingAddress": {
                    "$ref": "#/components/schemas/CustomerAddress"
                  },
                  "activeShippingAddress": {
                    "$ref": "#/components/schemas/CustomerAddress"
                  },
                  "customerNumber": {
                    "type": "string"
                  },
                  "salutationId": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "company": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "affiliateCode": {
                    "type": "string"
                  },
                  "campaignCode": {
                    "type": "string"
                  },
                  "active": {
                    "type": "boolean"
                  },
                  "doubleOptInRegistration": {
                    "type": "boolean"
                  },
                  "doubleOptInEmailSentDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "doubleOptInConfirmDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "hash": {
                    "type": "string"
                  },
                  "guest": {
                    "type": "boolean"
                  },
                  "firstLogin": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastLogin": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "newsletter": {
                    "type": "boolean"
                  },
                  "birthday": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastOrderDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "orderCount": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "legacyEncoder": {
                    "type": "string"
                  },
                  "legacyPassword": {
                    "type": "string"
                  },
                  "autoIncrement": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "remoteAddress": {
                    "type": "string"
                  }
                }
              },
              "paymentMethod": {
                "type": "object",
                "description": "Selected payment method",
                "properties": {
                  "pluginId": {
                    "type": "string"
                  },
                  "handlerIdentifier": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "position": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "active": {
                    "type": "boolean"
                  },
                  "availabilityRuleId": {
                    "type": "string"
                  },
                  "mediaId": {
                    "type": "string"
                  },
                  "formattedHandlerIdentifier": {
                    "type": "string"
                  }
                }
              },
              "shippingMethod": {
                "type": "object",
                "description": "Selected shipping method",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "active": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "string"
                  },
                  "trackingUrl": {
                    "type": "string"
                  },
                  "deliveryTimeId": {
                    "type": "string"
                  },
                  "availabilityRuleId": {
                    "type": "string"
                  },
                  "mediaId": {
                    "type": "string"
                  }
                }
              },
              "context": {
                "description": "Core context with general configuration values and state",
                "type": "object",
                "properties": {
                  "versionId": {
                    "type": "string"
                  },
                  "currencyId": {
                    "type": "string"
                  },
                  "currencyFactor": {
                    "type": "integer"
                  },
                  "currencyPrecision": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "scope": {
                    "type": "string"
                  },
                  "source": {
                    "type": "string"
                  },
                  "taxState": {
                    "type": "string"
                  },
                  "useCache": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        ],
        "properties": {
          "currentCustomerGroup": {
            "properties": {
              "name": {
                "description": "Name of customer group to which the customer belongs within the specific sales channel they are currently interacting with."
              },
              "displayGross": {
                "description": "When `true`, product's gross price is displayed for that customer group who belongs to the specific sales channel they are currently interacting with."
              }
            }
          },
          "currency": {
            "properties": {
              "isoCode": {
                "description": "Standard international three digit code to represent currency in a given sales channel. For example, USD."
              },
              "factor": {
                "description": "Currency exchange rate in a specific sales channel the customer is currently interacting with."
              },
              "symbol": {
                "description": "A currency symbol is a graphical representation used as shorthand for a currency's name, for example US Dollar - $ in a given sales channel."
              },
              "shortName": {
                "description": "Acronym for international currencies, for example, USD in a given sales channel."
              },
              "name": {
                "description": "Full name of the currency in a given sales channel. For example, US-Dollar."
              },
              "position": {
                "description": "The order of the tabs for multiple currencies defined in a given sales channel."
              },
              "decimalPrecision": {
                "description": "It defines the round off value for currency to the nearest decimal point in a given sales channel. If set to 2, it rounds off to two significant decimal points."
              },
              "isSystemDefault": {
                "description": "Runtime field, cannot be used as part of the criteria."
              }
            }
          },
          "salesChannel": {
            "properties": {
              "typeId": {
                "description": "Unique identity of a sales channel's type within a specific sales channel."
              },
              "languageId": {
                "description": "Unique identity of a sales channel's language within a specific sales channel."
              },
              "currencyId": {
                "description": "Unique identity of a sales channel's currency within a specific sales channel."
              },
              "paymentMethodId": {
                "description": "Unique identity of a sales channel's payment method within a specific sales channel."
              },
              "shippingMethodId": {
                "description": "Unique identity of a sales channel's shipping method within a specific sales channel."
              },
              "countryId": {
                "description": "Unique identity of a sales channel's country within a specific sales channel."
              },
              "navigationCategoryId": {
                "description": "Unique identity of a sales channel's navigation category within a specific sales channel."
              },
              "navigationCategoryDepth": {
                "description": "It determines the number of levels of subcategories in the storefront category menu within a specific sales channel."
              },
              "footerCategoryId": {
                "description": "Unique identity of a sales channel's footer category within a specific sales channel."
              },
              "serviceCategoryId": {
                "description": "Unique identity of a sales channel's service category within a specific sales channel."
              },
              "name": {
                "description": "Name of the sales channel."
              },
              "shortName": {
                "description": "A short name for sales channel."
              },
              "accessKey": {
                "description": "Access key to store api."
              },
              "active": {
                "description": "When `true`, the sales channel is enabled."
              },
              "maintenance": {
                "description": "When `true`, it indicates that the sales channel is undergoing maintenance, and shopping is temporarily unavailable during this period."
              },
              "maintenanceIpWhitelist": {
                "description": "Array of IP address allowed to access the sales channel."
              },
              "mailHeaderFooterId": {
                "description": "Unique identity of a sales channel's mail header and footer within a specific sales channel."
              },
              "customerGroupId": {
                "description": "Unique identity of a sales channel's customer group within a specific sales channel."
              },
              "hreflangActive": {
                "description": "When `true`, the sales channel pages are available in different languages within a specific sales channel."
              },
              "hreflangDefaultDomainId": {
                "description": "Unique identity of a sales channel's hreflangDefaultDomain within a specific sales channel."
              },
              "analyticsId": {
                "description": "Unique identity of a sales channel's analytics within a specific sales channel."
              }
            }
          },
          "taxRules": {
            "properties": {
              "taxRate": {
                "description": "Rate of tax within a specific sales channel."
              },
              "name": {
                "description": "Name defined for a Tax within a specific sales channel."
              }
            }
          },
          "customer": {
            "properties": {
              "groupId": {
                "description": "Unique identity of a customer's group within a specific sales channel."
              },
              "defaultPaymentMethodId": {
                "description": "Unique identity of a customer's default payment method within a specific sales channel."
              },
              "salesChannelId": {
                "description": "Unique identity of sales channel the customer is currently interacting with."
              },
              "languageId": {
                "description": "Unique identity of language within a specific sales channel the customer is interacting."
              },
              "lastPaymentMethodId": {
                "description": "Unique identity of customer's last payment method within a specific sales channel."
              },
              "defaultBillingAddressId": {
                "description": "Unique identity of customer's default billing address within a specific sales channel."
              },
              "defaultShippingAddressId": {
                "description": "Unique identity of customer's default shipping address within a specific sales channel."
              },
              "customerNumber": {
                "description": "Name of the customer within a specific sales channel the customer is interacting."
              },
              "salutationId": {
                "description": "Unique identity of customer's default shipping address within a specific sales channel."
              },
              "firstName": {
                "description": "First name of the customer within a specific sales channel."
              },
              "lastName": {
                "description": "Last name of the customer within a specific sales channel."
              },
              "company": {
                "description": "Company name of the customer within a specific sales channel."
              },
              "password": {
                "description": "Password of the customer within a specific sales channel."
              },
              "email": {
                "description": "Email of the customer within a specific sales channel."
              },
              "title": {
                "description": "Customer's title or honorifics like Mr, Mrs, etc within a specific sales channel."
              },
              "affiliateCode": {
                "description": "An affiliate code is an identification option with which website operators can mark outgoing links within a specific sales channel."
              },
              "campaignCode": {
                "description": "A unique identifier for a campaign within a specific sales channel."
              },
              "active": {
                "description": "When `true`, the status of the customer is set active within a specific sales channel."
              },
              "doubleOptInRegistration": {
                "description": "When `true`, user subscriptions to an email marketing list is allowed within a specific sales channel."
              },
              "doubleOptInEmailSentDate": {
                "description": "Date and time when the double opt-in email was sent within a specific sales channel."
              },
              "doubleOptInConfirmDate": {
                "description": "Date and time when the double opt-in email was confirmed within a specific sales channel."
              },
              "hash": {
                "description": "Password hash for account recovery within a specific sales channel."
              },
              "guest": {
                "description": "Boolean value is `true` for a guest account within a specific sales channel."
              },
              "firstLogin": {
                "description": "Captures date and time of customer's first login within a specific sales channel."
              },
              "lastLogin": {
                "description": "Captures date and time of customer's last login within a specific sales channel."
              },
              "newsletter": {
                "description": "When `true`, then the customer gets subscribe to the newsletter"
              },
              "birthday": {
                "description": "Captures customer's birthday details within a specific sales channel."
              },
              "lastOrderDate": {
                "description": "Captures customer's last order date within a specific sales channel."
              },
              "orderCount": {
                "description": "Captures the number of orders placed by a customer within a specific sales channel."
              },
              "legacyEncoder": {
                "description": "encapsulates shop credentials when needed to migrate shop system from old instance to new instance"
              },
              "legacyPassword": {
                "description": "Hashed password of the old shop system"
              },
              "autoIncrement": {
                "description": "Internal field. "
              },
              "remoteAddress": {
                "description": "Anonymous IP address of the customer for last session."
              }
            }
          },
          "paymentMethod": {
            "properties": {
              "pluginId": {
                "description": "Unique identity of payment plugin within a specific sales channel."
              },
              "handlerIdentifier": {
                "description": "Internal field that contains system identifier details for payment methods like Paypal."
              },
              "name": {
                "description": "Name of the payment method within a specific sales channel."
              },
              "description": {
                "description": "A short description about the payment method within a specific sales channel."
              },
              "position": {
                "description": "The order of the tabs of your defined payment methods in the storefront by entering numerical values like 1,2,3, etc within a specific sales channel."
              },
              "active": {
                "description": "When `true`, the payment method is available for usage within a specific sales channel."
              },
              "availabilityRuleId": {
                "description": "Unique identity of the rule for the payment method."
              },
              "mediaId": {
                "description": "Unique identity of media used in payment method within a specific sales channel."
              },
              "formattedHandlerIdentifier": {
                "description": "Internal field that contains system identifier details for payment methods like Paypal."
              }
            }
          },
          "shippingMethod": {
            "properties": {
              "name": {
                "description": "Name of the shipping method within a specific sales channel."
              },
              "active": {
                "description": "When `true`, the shipping method is available for usage within a specific sales channel."
              },
              "description": {
                "description": "A short description about the shipping method within a specific sales channel."
              },
              "trackingUrl": {
                "description": "URL that allows to track packages for a specific sales channel."
              },
              "deliveryTimeId": {
                "description": "Unique identity of deliveryTime within a specific sales channel."
              },
              "availabilityRuleId": {
                "description": "Unique identity of the rule for the payment method."
              },
              "mediaId": {
                "description": "Unique identity of media used in shipping method within a specific sales channel."
              }
            }
          },
          "context": {
            "properties": {
              "versionId": {
                "description": "Unique identity of context's version in a specific sales channel."
              },
              "currencyId": {
                "description": "Unique identity of currency context in a specific sales channel."
              },
              "currencyFactor": {
                "description": "Unique identity of currency factor context in a specific sales channel."
              },
              "currencyPrecision": {
                "description": "It defines the round off value of currency to the nearest decimal point. If set to 2, it rounds off to two significant decimal points."
              },
              "scope": {
                "description": "Scope defines if its related to system or user context."
              },
              "source": {
                "description": "When context is related to user in the source, then there is userId."
              },
              "taxState": {
                "description": "Tax state can either be `gross` or `net`."
              },
              "useCache": {
                "description": "When boolean value is `true`, caching is used."
              }
            }
          }
        }
      },
      "Sitemap": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ArrayStruct"
          },
          {
            "type": "object",
            "properties": {
              "filename": {
                "type": "string"
              },
              "created": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ],
        "properties": {
          "filename": {
            "description": "Name of the file which holds a list of all URL's."
          }
        }
      },
      "OrderRouteResponse": {
        "type": "object",
        "properties": {
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Order"
            }
          },
          "paymentChangeable": {
            "type": "object",
            "description": "The key-value pairs contain the uuid of the order as key and a boolean as value, indicating that the payment method can still be changed.",
            "additionalProperties": {
              "type": "boolean"
            }
          }
        }
      },
      "ProductListingResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntitySearchResult"
          },
          {
            "type": "object",
            "properties": {
              "currentFilters": {
                "type": "object",
                "description": "Contains the state of the filters. These can be used to create listing filters.",
                "properties": {
                  "navigationId": {
                    "type": "string"
                  },
                  "manufacturer": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "price": {
                    "type": "object",
                    "properties": {
                      "min": {
                        "type": "integer"
                      },
                      "max": {
                        "type": "integer"
                      }
                    }
                  },
                  "rating": {
                    "type": "integer"
                  },
                  "shipping-free": {
                    "type": "boolean"
                  },
                  "properties": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                }
              },
              "availableSortings": {
                "type": "array",
                "description": "Contains the available sorting. These can be used to show a sorting select-box in the product listing.",
                "items": {
                  "type": "object"
                }
              },
              "sorting": {
                "type": "string"
              },
              "elements": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        ]
      },
      "ProductListingCriteria": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Criteria"
          },
          {
            "type": "object",
            "description": "Additional search parameters for product listings",
            "properties": {
              "order": {
                "description": "Specifies the sorting of the products by `availableSortings`. If not set, the default sorting will be set according to the shop settings. The available sorting options are sent within the response under the `availableSortings` key. In order to sort by a field, consider using the `sort` parameter from the listing criteria. Do not use both parameters together, as it might lead to unexpected results.",
                "type": "string"
              },
              "limit": {
                "description": "Number of items per result page. If not set, the limit will be set according to the default products per page, defined in the system settings.",
                "type": "integer",
                "minimum": 0
              },
              "p": {
                "description": "Search result page",
                "type": "integer",
                "default": 1
              },
              "manufacturer": {
                "description": "Filter by manufacturers. List of manufacturer identifiers separated by a `|`.",
                "type": "string"
              },
              "min-price": {
                "description": "Filters by a minimum product price. Has to be lower than the `max-price` filter.",
                "type": "integer",
                "minimum": 0,
                "default": 0
              },
              "max-price": {
                "description": "Filters by a maximum product price. Has to be higher than the `min-price` filter.",
                "type": "integer",
                "minimum": 0,
                "default": 0
              },
              "rating": {
                "description": "Filter products with a minimum average rating.",
                "type": "integer"
              },
              "shipping-free": {
                "description": "Filters products that are marked as shipping-free.",
                "type": "boolean",
                "default": false
              },
              "properties": {
                "description": "Filters products by their properties. List of property identifiers separated by a `|`.",
                "type": "string"
              },
              "manufacturer-filter": {
                "description": "Enables/disabled filtering by manufacturer. If set to false, the `manufacturer` filter will be ignored. Also the `aggregations[manufacturer]` key will be removed from the response.",
                "type": "boolean",
                "default": true
              },
              "price-filter": {
                "description": "Enables/disabled filtering by price. If set to false, the `min-price` and `max-price` filter will be ignored. Also the `aggregations[price]` key will be removed from the response.",
                "type": "boolean",
                "default": true
              },
              "rating-filter": {
                "description": "Enables/disabled filtering by rating. If set to false, the `rating` filter will be ignored. Also the `aggregations[rating]` key will be removed from the response.",
                "type": "boolean",
                "default": true
              },
              "shipping-free-filter": {
                "description": "Enables/disabled filtering by shipping-free products. If set to false, the `shipping-free` filter will be ignored. Also the `aggregations[shipping-free]` key will be removed from the response.",
                "type": "boolean",
                "default": true
              },
              "property-filter": {
                "description": "Enables/disabled filtering by properties products. If set to false, the `properties` filter will be ignored. Also the `aggregations[properties]` key will be removed from the response.",
                "type": "boolean",
                "default": true
              },
              "property-whitelist": {
                "description": "A whitelist of property identifiers which can be used for filtering. List of property identifiers separated by a `|`. The `property-filter` must be `true`, otherwise the whitelist has no effect.",
                "type": "string"
              },
              "reduce-aggregations": {
                "description": "By sending the parameter `reduce-aggregations` , the post-filters that were applied by the customer, are also applied to the aggregations. This has the consequence that only values are returned in the aggregations that would lead to further filter results. This parameter is a flag, the value has no effect.",
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "properties": {
          "filter": {
            "properties": {
              "type": {
                "description": "To filter the results and aggregations with filter types like ==, >=, etc."
              },
              "field": {
                "description": "To filter the results and aggregations by field like an property identifier."
              },
              "value": {
                "description": "To filter the results and aggregations by value."
              }
            }
          },
          "sort": {
            "properties": {
              "field": {
                "description": "Sort the search results by field like an property identifier."
              },
              "order": {
                "description": "Sort the search results of orders by ascending or descending."
              },
              "naturalSorting": {
                "description": "Sorting for special cases such as German letters with umlauts and similar characters etc."
              }
            }
          },
          "post-filter": {
            "properties": {
              "type": {
                "description": "To filter only the results but not the aggregations with filter types like ==, >=, etc."
              },
              "field": {
                "description": "To filter only the results but not the aggregations by field like an property identifier."
              },
              "value": {
                "description": "To filter only the results but not the aggregations by value."
              }
            }
          }
        }
      },
      "Criteria": {
        "type": "object",
        "description": "Criteria to query entities.",
        "properties": {
          "page": {
            "description": "Search result page",
            "type": "integer"
          },
          "limit": {
            "description": "Number of items per result page",
            "type": "integer"
          },
          "filter": {
            "type": "array",
            "description": "List of filters to restrict the search result. For more information, see [Search Queries > Filter](https://shopware.stoplight.io/docs/store-api/docs/concepts/search-queries.md#filter)",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "field": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "required": [
                "type",
                "field",
                "value"
              ]
            },
            "properties": {
              "type": {
                "description": "To filter the results and aggregations with filter types like ==, >=, etc."
              },
              "field": {
                "description": "To filter the results and aggregations by field like an property identifier."
              },
              "value": {
                "description": "To filter the results and aggregations by value."
              }
            }
          },
          "sort": {
            "type": "array",
            "description": "Sorting in the search result.",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string"
                },
                "order": {
                  "type": "string"
                },
                "naturalSorting": {
                  "type": "boolean"
                }
              },
              "required": [
                "field"
              ]
            },
            "properties": {
              "field": {
                "description": "Sort the search results by field like an property identifier."
              },
              "order": {
                "description": "Sort the search results of orders by ascending or descending."
              },
              "naturalSorting": {
                "description": "Sorting for special cases such as German letters with umlauts and similar characters etc."
              }
            }
          },
          "post-filter": {
            "type": "array",
            "description": "Filters that applied without affecting aggregations. For more information, see [Search Queries > Post Filter](https://shopware.stoplight.io/docs/store-api/docs/concepts/search-queries.md#post-filter)",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "field": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "required": [
                "type",
                "field",
                "value"
              ]
            },
            "properties": {
              "type": {
                "description": "To filter only the results but not the aggregations with filter types like ==, >=, etc."
              },
              "field": {
                "description": "To filter only the results but not the aggregations by field like an property identifier."
              },
              "value": {
                "description": "To filter only the results but not the aggregations by value."
              }
            }
          },
          "associations": {
            "type": "object",
            "description": "Used to fetch associations which are not fetched by default."
          },
          "aggregations": {
            "type": "array",
            "description": "Used to perform aggregations on the search result. For more information, see [Search Queries > Aggregations](https://shopware.stoplight.io/docs/store-api/docs/concepts/search-queries.md#aggregations)",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Give your aggregation an identifier, so you can find it easier",
                  "type": "string"
                },
                "type": {
                  "description": "The type of aggregation",
                  "type": "string"
                },
                "field": {
                  "description": "The field you want to aggregate over.",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "type",
                "field"
              ]
            }
          },
          "grouping": {
            "type": "array",
            "description": "Perform groupings over certain fields",
            "items": {
              "type": "string",
              "description": "Name of a field"
            }
          },
          "fields": {
            "type": "array",
            "description": "Fields which should be returned in the search result.",
            "items": {
              "type": "string",
              "description": "Name of a field"
            }
          },
          "total-count-mode": {
            "description": "Whether the total for the total number of hits should be determined for the search query. none = disabled total count, exact = calculate exact total amount (slow), next-pages = calculate only for next page (fast)",
            "type": "string",
            "default": "none",
            "enum": [
              "none",
              "exact",
              "next-pages"
            ]
          }
        }
      },
      "FindProductVariantRouteResponse": {
        "type": "object",
        "properties": {
          "foundCombination": {
            "type": "object",
            "properties": {
              "variantId": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$",
                "description": "Unique identity of a variant."
              },
              "options": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Available product variant options. For example, for variant `Size`, option would be `XS`, `S`, `M`, `L`, `XL`."
              }
            }
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        }
      },
      "CrossSellingElementCollection": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "crossSelling": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "position": {
                  "type": "integer",
                  "format": "int32"
                },
                "sortBy": {
                  "type": "string"
                },
                "sortDirection": {
                  "type": "string"
                },
                "limit": {
                  "type": "integer",
                  "format": "int32"
                },
                "active": {
                  "type": "boolean"
                },
                "productId": {
                  "type": "string"
                },
                "productStreamId": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              }
            },
            "products": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Product"
              }
            },
            "total": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "properties": {
          "total": {
            "description": "Number of cross selling elements found."
          }
        }
      },
      "ProductDetailResponse": {
        "type": "object",
        "description": "Represents a product along with detailed information required to display a variant selection.",
        "properties": {
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "configurator": {
            "type": "array",
            "description": "List of property groups with their corresponding options and information on how to display them.",
            "items": {
              "$ref": "#/components/schemas/PropertyGroup"
            }
          },
          "id": {
            "description": "Unique identity of product detail response."
          },
          "available": {
            "description": "When boolean value is true, the product is available for purchase."
          },
          "isCloseout": {
            "description": "Boolean value to check if the product is still buyable when stock value is 0."
          },
          "displayGroup": {
            "description": "Internal field."
          },
          "manufacturerNumber": {
            "description": "Unique number of the product manufacturer."
          },
          "stock": {
            "description": "Quantity of product available."
          },
          "sortedProperties": {
            "description": "Properties of the product that are sorted"
          }
        }
      },
      "ProductListingFlags": {
        "type": "object",
        "description": "Additional flags for product listings",
        "properties": {
          "no-aggregations": {
            "description": "Resets all aggregations in the criteria. This parameter is a flag, the value has no effect.",
            "type": "string",
            "nullable": true
          },
          "only-aggregations": {
            "description": "If this flag is set, no products are fetched. Sorting and associations are also ignored. This parameter is a flag, the value has no effect.",
            "type": "string",
            "nullable": true
          }
        }
      },
      "LineItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identity of line item."
          },
          "referencedId": {
            "type": "string",
            "description": "Unique identity of type of entity."
          },
          "label": {
            "type": "string",
            "description": "It is a typical product name given to the line item."
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "description": "Number of items of product."
          },
          "type": {
            "type": "string",
            "description": "Type refers to the entity type of an item whether it is product or promotion for instance."
          },
          "good": {
            "type": "boolean",
            "description": "When set to true, it indicates the line item is physical else it is virtual."
          },
          "description": {
            "type": "string",
            "description": "Description of line items in an order."
          },
          "removable": {
            "type": "boolean",
            "description": "Allows the line item to be removable from the cart when set to true."
          },
          "stackable": {
            "type": "boolean",
            "description": "Allows to change the quantity of the line item when set to true."
          },
          "modified": {
            "type": "boolean",
            "description": "When boolean value is `true`, line items are said to be modified."
          }
        }
      },
      "NavigationRouteResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Category"
        },
        "properties": {
          "id": {
            "description": "Unique identity of navigation route response."
          }
        }
      }
    },
    "responses": {
      "404": {
        "description": "Not Found",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/failure"
            },
            "example": {
              "errors": [
                {
                  "status": "404",
                  "title": "Not Found",
                  "description": "Resource with given parameter was not found."
                }
              ]
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/failure"
            },
            "example": {
              "errors": [
                {
                  "status": "404",
                  "title": "Not Found",
                  "description": "Resource with given parameter was not found."
                }
              ]
            }
          }
        }
      },
      "403": {
        "description": "Forbidden",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/failure"
            },
            "example": {
              "errors": [
                {
                  "status": "403",
                  "title": "Forbidden",
                  "description": "This operation is restricted to logged in users."
                }
              ]
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/failure"
            },
            "example": {
              "errors": [
                {
                  "status": "403",
                  "title": "Forbidden",
                  "description": "This operation is restricted to logged in users."
                }
              ]
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/failure"
            },
            "example": {
              "errors": [
                {
                  "status": "401",
                  "title": "Unauthorized",
                  "description": "Authorization information is missing or invalid."
                }
              ]
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/failure"
            },
            "example": {
              "errors": [
                {
                  "status": "401",
                  "title": "Unauthorized",
                  "description": "Authorization information is missing or invalid."
                }
              ]
            }
          }
        }
      },
      "400": {
        "description": "Bad Request",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/failure"
            },
            "example": {
              "errors": [
                {
                  "status": "400",
                  "title": "Bad Request",
                  "description": "Bad parameters for this endpoint. See documentation for the correct ones."
                }
              ]
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/failure"
            },
            "example": {
              "errors": [
                {
                  "status": "400",
                  "title": "Bad Request",
                  "description": "Bad parameters for this endpoint. See documentation for the correct ones."
                }
              ]
            }
          }
        }
      },
      "204": {
        "description": "No Content"
      },
      "ContextTokenResponse": {
        "description": "Returns the context token. Use that as your `sw-context-token` header for subsequent requests. Redirect if getRedirectUrl is set.",
        "headers": {
          "sw-context-token": {
            "description": "Contains sw-context-token value",
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "contextToken": {
                  "deprecated": true,
                  "description": "Deprecated since v6.6.0.0. Please retrieve the context token from the response header instead.",
                  "type": "string"
                },
                "redirectUrl": {
                  "description": "Define the URL which browser will be redirected to",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "contentType": {
        "name": "Content-Type",
        "in": "header",
        "description": "Content type of the request",
        "required": true,
        "schema": {
          "type": "string",
          "default": "application/json"
        }
      },
      "accept": {
        "name": "Accept",
        "in": "header",
        "description": "Accepted response content types",
        "required": true,
        "schema": {
          "type": "string",
          "default": "application/json"
        }
      }
    },
    "securitySchemes": {
      "ApiKey": {
        "type": "apiKey",
        "description": "Identifies the sales channel you want to access the API through",
        "name": "sw-access-key",
        "in": "header"
      },
      "ContextToken": {
        "type": "apiKey",
        "description": "Identifies an anonymous or identified user session",
        "name": "sw-context-token",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "ApiKey": []
    }
  ],
  "paths": {
    "/country-state/{countryId}": {
      "post": {
        "tags": [
          "System & Context",
          "Endpoints supporting Criteria "
        ],
        "summary": "Fetch the states of a country",
        "description": "Perform a filtered search the states for a country",
        "operationId": "readCountryState",
        "parameters": [
          {
            "name": "countryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Criteria"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing countries.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CountryState"
                          }
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/EntitySearchResult"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/app-system/{name}/generate-token": {
      "post": {
        "tags": [
          "App system"
        ],
        "summary": "Generate JWT token for app system backend",
        "description": "Generate JWT token for authenticated communication with the app server",
        "operationId": "generateJWTAppSystemAppServer",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "description": "Name of the app",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    },
                    "expires": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "shopId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/product-listing/{categoryId}": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Fetch a product listing by category",
        "description": "Fetches a product listing for a specific category. It also provides filters, sortings and property aggregations, analogous to the /search endpoint.",
        "operationId": "readProductListing",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "Identifier of a category.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProductListingCriteria"
                  },
                  {
                    "$ref": "#/components/schemas/ProductListingFlags"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a product listing containing all products and additional fields to display a listing.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListingResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/product-export/{accessKey}/{fileName}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Export product export",
        "operationId": "readProductExport",
        "parameters": [
          {
            "name": "accessKey",
            "in": "path",
            "description": "Access Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileName",
            "in": "path",
            "description": "File Name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/document/download/{documentId}/{deepLinkCode}": {
      "post": {
        "tags": [
          "Document",
          "Endpoints supporting Criteria "
        ],
        "summary": "Download generated document",
        "description": "Returns blob file of a generated document to download.",
        "operationId": "download",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "deepLinkCode",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Criteria"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the document information and blob to download.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/currency": {
      "post": {
        "tags": [
          "System & Context",
          "Endpoints supporting Criteria "
        ],
        "summary": "Fetch currencies",
        "description": "Perform a filtered search for currencies.",
        "operationId": "readCurrency",
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Criteria"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing currencies.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Currency"
                          }
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/EntitySearchResult"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/account/newsletter-recipient": {
      "post": {
        "tags": [
          "Profile",
          "Newsletter",
          "Endpoints supporting Criteria"
        ],
        "summary": "Fetch newsletter recipients",
        "description": "Perform a filtered search for newsletter recipients.",
        "operationId": "readNewsletterRecipient",
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Criteria"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountNewsletterRecipientResult"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/account/change-profile": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Change the customer's information",
        "description": "Make changes to a customer's account, like changing their name, salutation or title.",
        "operationId": "changeProfile",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "salutationId",
                  "firstName",
                  "lastName"
                ],
                "properties": {
                  "salutationId": {
                    "description": "Id of the salutation for the customer account. Fetch options using `salutation` endpoint.",
                    "type": "string"
                  },
                  "title": {
                    "description": "(Academic) title of the customer",
                    "type": "string"
                  },
                  "firstName": {
                    "description": "Customer first name. Value will be reused for shipping and billing address if not provided explicitly.",
                    "type": "string"
                  },
                  "lastName": {
                    "description": "Customer last name. Value will be reused for shipping and billing address if not provided explicitly.",
                    "type": "string"
                  },
                  "company": {
                    "description": "Company of the customer. Only required when `accountType` is `business`.",
                    "type": "string"
                  },
                  "birthdayDay": {
                    "description": "Birthday day",
                    "type": "integer"
                  },
                  "birthdayMonth": {
                    "description": "Birthday month",
                    "type": "integer"
                  },
                  "birthdayYear": {
                    "description": "Birthday year",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a success response indicating a successful update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/account/change-email": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Change the customer's email address",
        "description": "Changes a customer's email address to a new email address, using their current password as a validation.",
        "operationId": "changeEmail",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "email",
                  "emailConfirmation",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "New email address. Has to be unique amongst all customers",
                    "type": "string"
                  },
                  "emailConfirmation": {
                    "description": "Confirmation of the new email address.",
                    "type": "string"
                  },
                  "password": {
                    "description": "Customer's current password",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a success response indicating a successful update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/account/change-language": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Change the customer's language.",
        "description": "Changes the language of the logged in customer",
        "operationId": "changeLanguage",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "languageId"
                ],
                "properties": {
                  "language": {
                    "description": "New languageId",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a success response indicating a successful update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/account/change-password": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Change the customer's password",
        "description": "Changes a customer's password using their current password as a validation.",
        "operationId": "changePassword",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "password",
                  "newPassword",
                  "newPasswordConfirm"
                ],
                "properties": {
                  "password": {
                    "description": "Current password of the customer",
                    "type": "string"
                  },
                  "newPassword": {
                    "description": "New Password for the customer",
                    "type": "string"
                  },
                  "newPasswordConfirm": {
                    "description": "Confirmation of the new password",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a success response indicating a successful update.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/account/change-payment-method/{paymentMethodId}": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Change the customer's default payment method",
        "description": "Changes a customer's default (preselected) payment method.",
        "operationId": "changePaymentMethod",
        "parameters": [
          {
            "name": "paymentMethodId",
            "in": "path",
            "description": "Identifier of the desired default payment method",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a success response indicating a successful update.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/account/customer-recovery-is-expired": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Checks if the customer recovery entry for a given hash is expired.",
        "description": "This can be used to validate a provided hash has a valid and not expired customer recovery hash.",
        "operationId": "getCustomerRecoveryIsExpired",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "hash"
                ],
                "properties": {
                  "hash": {
                    "description": "Parameter from the link in the confirmation mail sent in Step 1",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a CustomerRecoveryIsExpiredResponse that indicates if the hash is expired or not.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayStruct"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/account/customer": {
      "post": {
        "tags": [
          "Profile",
          "Endpoints supporting Criteria "
        ],
        "summary": "Get information about current customer",
        "description": "Returns information about the current customer.",
        "operationId": "readCustomer",
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Criteria"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the logged in customer, also for guest sessions. Check for the value of `guest` field to see whether the customer is a guest.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Profile"
        ],
        "summary": "Delete the customer's profile",
        "description": "Deletes a customer profile along with their addresses, wishlists and associated data. Created orders and their payment/shipping information (addresses) and reviews are not deleted.",
        "operationId": "deleteCustomer",
        "responses": {
          "204": {
            "description": "Returns a no content response indicating a successful removal of the customer profile"
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/account/address/{addressId}": {
      "delete": {
        "tags": [
          "Address"
        ],
        "summary": "Delete an address of a customer",
        "description": "Delete an address of customer.\n\n    Only addresses which are not set as default addresses for shipping or billing can be deleted. You can check the current default addresses of your customer using the profile information endpoint and change them using the default address endpoint.\n\n    **A customer must have at least one address (which can be used for shipping and billing).**\n\n    An automatic fallback is not applied.",
        "operationId": "deleteCustomerAddress",
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "description": "ID of the address to be deleted.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response, when the address has been deleted"
          },
          "400": {
            "description": "Response containing a list of errors, most likely due to the address being in use"
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Address"
        ],
        "summary": "Modify an address of a customer",
        "description": "Modifies an existing address of a customer.",
        "operationId": "updateCustomerAddress",
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "description": "Address ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerAddress"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerAddress"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/account/list-address": {
      "post": {
        "tags": [
          "Address",
          "Endpoints supporting Criteria "
        ],
        "summary": "Fetch addresses of a customer",
        "description": "Lists all addresses of the current customer and allows filtering them based on a criteria.",
        "operationId": "listAddress",
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Criteria"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerAddress"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/account/login": {
      "post": {
        "tags": [
          "Login & Registration"
        ],
        "summary": "Log in a customer",
        "description": "Logs in customers given their credentials.",
        "operationId": "loginCustomer",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "username",
                  "password"
                ],
                "properties": {
                  "username": {
                    "description": "Email",
                    "type": "string"
                  },
                  "password": {
                    "description": "Password",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ContextTokenResponse"
          },
          "401": {
            "description": "If credentials are incorrect an error is returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/account/logout": {
      "post": {
        "tags": [
          "Login & Registration"
        ],
        "summary": "Log out a customer",
        "description": "Logs out a customer.",
        "operationId": "logoutCustomer",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ContextTokenResponse"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/account/register-confirm": {
      "post": {
        "tags": [
          "Login & Registration"
        ],
        "summary": "Confirm a customer registration",
        "description": "Confirms a customer registration when double opt-in is activated.\n\nLearn more about double opt-in registration in our guide \"Register a customer\".",
        "operationId": "registerConfirm",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "hash",
                  "em"
                ],
                "properties": {
                  "hash": {
                    "description": "Hash from the email received",
                    "type": "string"
                  },
                  "em": {
                    "description": "Email hash from the email received",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the logged in customer. The customer is automatically logged in with the `sw-context-token` header provided, which can be reused for subsequent requests."
          },
          "404": {
            "description": "No hash provided"
          },
          "412": {
            "description": "The customer has already been confirmed"
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/account/register": {
      "post": {
        "tags": [
          "Login & Registration"
        ],
        "summary": "Register a customer",
        "description": "Registers a customer. Used both for normal customers and guest customers.See the Guide \"Register a customer\" for more information on customer registration.",
        "operationId": "register",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "email",
                  "password",
                  "salutationId",
                  "firstName",
                  "lastName",
                  "acceptedDataProtection",
                  "storefrontUrl",
                  "billingAddress"
                ],
                "properties": {
                  "email": {
                    "description": "Email of the customer. Has to be unique, unless `guest` is `true`",
                    "type": "string"
                  },
                  "password": {
                    "description": "Password for the customer. Required, unless `guest` is `true`",
                    "type": "string"
                  },
                  "salutationId": {
                    "description": "Id of the salutation for the customer account. Fetch options using `salutation` endpoint.",
                    "type": "string"
                  },
                  "firstName": {
                    "description": "Customer first name. Value will be reused for shipping and billing address if not provided explicitly.",
                    "type": "string"
                  },
                  "lastName": {
                    "description": "Customer last name. Value will be reused for shipping and billing address if not provided explicitly.",
                    "type": "string"
                  },
                  "acceptedDataProtection": {
                    "description": "Flag indicating accepted data protection",
                    "type": "boolean"
                  },
                  "storefrontUrl": {
                    "description": "URL of the storefront for that registration. Used in confirmation emails. Has to be one of the configured domains of the sales channel.",
                    "type": "string"
                  },
                  "billingAddress": {
                    "$ref": "#/components/schemas/CustomerAddress"
                  },
                  "shippingAddress": {
                    "$ref": "#/components/schemas/CustomerAddress"
                  },
                  "accountType": {
                    "description": "Account type of the customer which can be either `private` or `business`.",
                    "type": "string",
                    "default": "private"
                  },
                  "guest": {
                    "description": "If set, will create a guest customer. Guest customers can re-use an email address and don't need a password.",
                    "type": "boolean",
                    "default": false
                  },
                  "birthdayDay": {
                    "description": "Birthday day",
                    "type": "integer"
                  },
                  "birthdayMonth": {
                    "description": "Birthday month",
                    "type": "integer"
                  },
                  "birthdayYear": {
                    "description": "Birthday year",
                    "type": "integer"
                  },
                  "title": {
                    "description": "(Academic) title of the customer",
                    "type": "string"
                  },
                  "affiliateCode": {
                    "description": "Field can be used to store an affiliate tracking code",
                    "type": "string"
                  },
                  "campaignCode": {
                    "description": "Field can be used to store a campaign tracking code",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/account/recovery-password-confirm": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Reset a password with recovery credentials",
        "description": "This operation is Step 2 of the password reset flow. It is required to conduct Step 1 \"Send a password recovery mail\" in order to obtain the required credentials for this step.Resets a customer's password using credentials from a password recovery mail as a validation.",
        "operationId": "recoveryPassword",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "hash",
                  "newPassword",
                  "newPasswordConfirm"
                ],
                "properties": {
                  "hash": {
                    "description": "Parameter from the link in the confirmation mail sent in Step 1",
                    "type": "string"
                  },
                  "newPassword": {
                    "description": "New password for the customer",
                    "type": "string"
                  },
                  "newPasswordConfirm": {
                    "description": "Confirmation of the new password",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a success response indicating a successful update.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/account/recovery-password": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Send a password recovery mail",
        "description": "This operation is Step 1 of the password reset flow. Make sure to implement Step 2 \"Reset password with recovery credentials\" in order to allow for the complete flow in your application. Sends a recovery mail containing a link with credentials that allows a customer to reset their password.",
        "operationId": "sendRecoveryMail",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "email",
                  "storefrontUrl"
                ],
                "properties": {
                  "email": {
                    "description": "E-Mail address to identify the customer",
                    "type": "string"
                  },
                  "storefrontUrl": {
                    "description": "URL of the storefront to use for the generated reset link. It has to be a domain that is configured in the sales channel domain settings.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "If email corresponds to an existing customer, a mail will be sent out to that customer containing a link assembled using the following schema:\n\nReturns a success indicating a successful initialisation of the reset flow.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/account/address/default-shipping/{addressId}": {
      "patch": {
        "tags": [
          "Address"
        ],
        "summary": "Change a customer's default shipping address",
        "description": "Updates the default (preselected) shipping addresses of a customer.",
        "operationId": "defaultShippingAddress",
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "description": "Address ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/account/address/default-billing/{addressId}": {
      "patch": {
        "tags": [
          "Address"
        ],
        "summary": "Change a customer's default billing address",
        "description": "Updates the default (preselected) billing addresses of a customer.",
        "operationId": "defaultBillingAddress",
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "description": "Address ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/account/address": {
      "post": {
        "tags": [
          "Address"
        ],
        "summary": "Create a new address for a customer",
        "description": "Creates a new address for a customer.",
        "operationId": "createCustomerAddress",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerAddress"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerAddress"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/customer/wishlist/add/{productId}": {
      "post": {
        "tags": [
          "Wishlist"
        ],
        "summary": "Add a product to a wishlist",
        "description": "Adds a product to a customers wishlist.\n\n    **Important constraints**\n\n    * Anonymous (not logged-in) customers can not have wishlists.\n    * The wishlist feature has to be activated.",
        "operationId": "addProductOnWishlist",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Identifier of the product to be added.",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a success response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/customer/wishlist": {
      "post": {
        "tags": [
          "Wishlist",
          "Endpoints supporting Criteria "
        ],
        "summary": "Fetch a wishlist",
        "description": "Fetch a customer's wishlist. Products on the wishlist can be filtered using a criteria object.\n\n    **Important constraints**\n\n    * Anonymous (not logged-in) customers can not have wishlists.\n    * The wishlist feature has to be activated.",
        "operationId": "readCustomerWishlist",
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Criteria"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WishlistLoadRouteResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/customer/wishlist/merge": {
      "post": {
        "tags": [
          "Wishlist"
        ],
        "summary": "Create a wishlist for a customer",
        "description": "Create a new wishlist for a logged in customer or extend the existing wishlist given a set of products.\n\n    **Important constraints**\n\n    * Anonymous (not logged-in) customers can not have wishlists.\n    * A customer can only have a single wishlist.\n    * The wishlist feature has to be activated.",
        "operationId": "mergeProductOnWishlist",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "productIds": {
                    "description": "List product id",
                    "type": "array",
                    "items": {
                      "description": "product id",
                      "type": "string",
                      "pattern": "^[0-9a-f]{32}$"
                    }
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a success response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/customer/wishlist/delete/{productId}": {
      "delete": {
        "tags": [
          "Wishlist"
        ],
        "summary": "Remove a product from a wishlist",
        "description": "Removes a product from a customer's wishlist.\n\n    **Important constraints**\n\n    * Anonymous (not logged-in) customers can not have wishlists.\n    * The wishlist feature has to be activated.",
        "operationId": "deleteProductOnWishlist",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "The identifier of the product to be removed from the wishlist.",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a success response indicating a successful removal.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "The removal of the product failed. Probably because the product could not be found on the wishlist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/salutation": {
      "post": {
        "tags": [
          "System & Context",
          "Endpoints supporting Criteria "
        ],
        "summary": "Fetch salutations",
        "description": "Fetches salutations with a criteria obj.",
        "operationId": "readSalutation",
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Criteria"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing salutations.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Salutation"
                          }
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/EntitySearchResult"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/shipping-method": {
      "post": {
        "tags": [
          "Payment & Shipping",
          "Endpoints supporting Criteria "
        ],
        "summary": "Fetch shipping methods",
        "description": "Perform a filtered search for shipping methods.",
        "operationId": "readShippingMethod",
        "parameters": [
          {
            "name": "onlyAvailable",
            "in": "query",
            "description": "List only available shipping methods. This filters shipping methods methods which can not be used in the actual context because of their availability rule.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Criteria"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "total": {
                      "description": "Total amount",
                      "type": "integer"
                    },
                    "aggregations": {
                      "description": "aggregation result",
                      "type": "object"
                    },
                    "elements": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ShippingMethod"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/contact-form": {
      "post": {
        "tags": [
          "Content"
        ],
        "summary": "Submit a contact form message",
        "description": "Used for submitting contact forms. Be aware that there can be more required fields, depending on the system settings.",
        "operationId": "sendContactMail",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "salutationId",
                  "email",
                  "subject",
                  "comment"
                ],
                "properties": {
                  "salutationId": {
                    "description": "Identifier of the salutation. Use `/api/salutation` endpoint to fetch possible values.",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "firstName": {
                    "description": "Firstname. This field may be required depending on the system settings.",
                    "type": "string"
                  },
                  "lastName": {
                    "description": "Lastname. This field may be required depending on the system settings.",
                    "type": "string"
                  },
                  "email": {
                    "description": "Email address",
                    "type": "string"
                  },
                  "phone": {
                    "description": "Phone. This field may be required depending on the system settings.",
                    "type": "string"
                  },
                  "subject": {
                    "description": "The subject of the contact form.",
                    "type": "string"
                  },
                  "comment": {
                    "description": "The message of the contact form",
                    "type": "string"
                  },
                  "navigationId": {
                    "description": "Identifier of the navigation page. Can be used to override the configuration.\nTake a look at the settings of a category containing a concact form in the administration.",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "slotId": {
                    "description": "Identifier of the cms element",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "cmsPageType": {
                    "description": "Type of the content management page",
                    "type": "string"
                  },
                  "entityName": {
                    "description": "Entity name for slot config",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message sent successful."
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/country": {
      "post": {
        "tags": [
          "System & Context",
          "Endpoints supporting Criteria "
        ],
        "summary": "Fetch countries",
        "description": "Perform a filtered search for countries",
        "operationId": "readCountry",
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Criteria"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing countries.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Country"
                          }
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/EntitySearchResult"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/context": {
      "get": {
        "tags": [
          "System & Context"
        ],
        "summary": "Fetch the current context",
        "description": "Fetches the current context. This includes for example the `customerGroup`, `currency`, `taxRules` and many more.",
        "operationId": "readContext",
        "responses": {
          "200": {
            "description": "Returns the current context.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesChannelContext"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "patch": {
        "tags": [
          "System & Context"
        ],
        "summary": "Modify the current context",
        "description": "Used for switching the context. A typical example would be changing the language or changing the currency.",
        "operationId": "updateContext",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "currencyId": {
                    "description": "Currency",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "languageId": {
                    "description": "Language",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "billingAddressId": {
                    "description": "Billing Address",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "shippingAddressId": {
                    "description": "Shipping Address",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "paymentMethodId": {
                    "description": "Payment Method",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "shippingMethodId": {
                    "description": "Shipping Method",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "countryId": {
                    "description": "Country",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "countryStateId": {
                    "description": "Country State",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ContextTokenResponse"
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/order/state/cancel": {
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Cancel an order",
        "description": "Cancels an order. The order state will be set to 'cancelled'.",
        "operationId": "cancelOrder",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "orderId": {
                    "description": "The identifier of the order to be canceled.",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the state of the state machine\n\n    example: More information about the state machine can be found in the corresponding guide: [Using the state machine](https://developer.shopware.com/docs/guides/plugins/plugins/checkout/order/using-the-state-machine)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateMachineState"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/order": {
      "post": {
        "tags": [
          "Order",
          "Endpoints supporting Criteria "
        ],
        "summary": "Fetch a list of orders",
        "description": "List orders of a customer.",
        "operationId": "readOrder",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Criteria"
                  },
                  {
                    "properties": {
                      "checkPromotion": {
                        "description": "Check if the payment method of the order is still changeable.",
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An array of orders and an indicator if the payment of the order can be changed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderRouteResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/order/payment": {
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Update the payment method of an order",
        "description": "Changes the payment method of a specific order. You can use the /order route to find out if the payment method of an order can be changed - take a look at the `paymentChangeable`- array in the response.",
        "operationId": "orderSetPayment",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "paymentMethodId",
                  "orderId"
                ],
                "properties": {
                  "paymentMethodId": {
                    "description": "The identifier of the paymentMethod to be set",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "orderId": {
                    "description": "The identifier of the order.",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated the payment method of the order.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/order/download/{orderId}/{downloadId}": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Download a purchased file",
        "description": "Download a file included in the given order and with the given id. Access must be granted.",
        "operationId": "orderDownloadFile",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "downloadId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An arbitrary binary file.",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/sitemap": {
      "get": {
        "tags": [
          "Sitemap & Routes"
        ],
        "summary": "Fetch sitemaps",
        "description": "Fetches a list of compressed sitemap files, which are often used by search engines.",
        "operationId": "readSitemap",
        "responses": {
          "200": {
            "description": "Returns a list of available sitemaps.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Sitemap"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/product/{productId}/cross-selling": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Fetch cross-selling groups of a product",
        "description": "This route is used to load the cross sellings for a product. A product has several cross selling definitions in which several products are linked. The route returns the cross sellings together with the linked products",
        "operationId": "readProductCrossSellings",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found cross sellings",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CrossSellingElementCollection"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/product/{productId}": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Fetch a single product",
        "description": "This route is used to load a single product with the corresponding details. In addition to loading the data, the best variant of the product is determined when a parent id is passed.",
        "operationId": "readProductDetail",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product information along with variant groups and options",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDetailResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/product": {
      "post": {
        "tags": [
          "Product",
          "Endpoints supporting Criteria "
        ],
        "summary": "Fetch a list of products",
        "description": "List products that match the given criteria. For performance reasons a limit should always be set.",
        "operationId": "readProduct",
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Criteria"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing products",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Product"
                          }
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/EntitySearchResult"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/product/{productId}/reviews": {
      "post": {
        "tags": [
          "Product",
          "Endpoints supporting Criteria "
        ],
        "summary": "Fetch product reviews",
        "description": "Perform a filtered search for product reviews.",
        "operationId": "readProductReviews",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Identifier of the product.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Criteria"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing product reviews",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ProductReview"
                          }
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/EntitySearchResult"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/product/{productId}/review": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Save a product review",
        "description": "Saves a review for a product. Reviews have to be activated in the settings.",
        "operationId": "saveProductReview",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Identifier of the product which is reviewed.",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "title",
                  "content",
                  "points"
                ],
                "properties": {
                  "name": {
                    "description": "The name of the review author. If not set, the first name of the customer is chosen.",
                    "type": "string"
                  },
                  "email": {
                    "description": "The email address of the review author. If not set, the email of the customer is chosen.",
                    "type": "string"
                  },
                  "title": {
                    "description": "The title of the review.",
                    "type": "string"
                  },
                  "content": {
                    "description": "The content of review.",
                    "type": "string"
                  },
                  "points": {
                    "description": "The review rating for the product.",
                    "type": "number",
                    "format": "double"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success response indicating the review was saved successfuly."
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/product/{productId}/find-variant": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Search for a matching variant by product options.",
        "description": "Performs a search for product variants and returns the best matching variant.",
        "operationId": "searchProductVariantIds",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "options"
                ],
                "properties": {
                  "options": {
                    "description": "The options parameter for the variant to find.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "switchedGroup": {
                    "description": "The id of the option group that has been switched.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an FoundCombination struct containing the ids matching the search.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindProductVariantRouteResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/newsletter/confirm": {
      "post": {
        "tags": [
          "Newsletter"
        ],
        "summary": "Confirm a newsletter registration",
        "description": "You have to use the hash from the link sent out via email to confirm the user registration.",
        "operationId": "confirmNewsletter",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "hash",
                  "em"
                ],
                "properties": {
                  "hash": {
                    "description": "Hash parameter from link the in the confirmation mail",
                    "type": "string"
                  },
                  "em": {
                    "description": "Email hash parameter from the link in the confirmation mail",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The newsletter confirmation was successful."
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/newsletter/subscribe": {
      "post": {
        "tags": [
          "Newsletter"
        ],
        "summary": "Create or remove a newsletter subscription",
        "description": "This route is used to create/remove/confirm a newsletter subscription.\n\nThe `option` property controls what should happen:\n* `direct`: The subscription is directly active and does not need a confirmation.\n* `subscribe`: An email will be send to the provided email addrees containing a link to the /newsletter/confirm route.\nThe subscription is only successful, if the /newsletter/confirm route is called with the generated hashes.\n* `unsubscribe`: The email address will be removed from the newsletter subscriptions.\n* `confirmSubscribe`: Confirmes the newsletter subscription for the provided email address.",
        "operationId": "subscribeToNewsletter",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "email",
                  "option",
                  "storefrontUrl"
                ],
                "properties": {
                  "email": {
                    "description": "Email address that will receive the confirmation and the newsletter.",
                    "type": "string"
                  },
                  "option": {
                    "description": "Defines what should be done.",
                    "type": "string"
                  },
                  "storefrontUrl": {
                    "description": "Url of the storefront of the shop. This will be used for generating the link to the /newsletter/confirm inside the confirm email.",
                    "type": "string"
                  },
                  "salutationId": {
                    "description": "Identifier of the salutation.",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "firstName": {
                    "description": "First name",
                    "type": "string"
                  },
                  "lastName": {
                    "description": "Last name",
                    "type": "string"
                  },
                  "street": {
                    "description": "Street",
                    "type": "string"
                  },
                  "city": {
                    "description": "City",
                    "type": "string"
                  },
                  "zipCode": {
                    "description": "Zip code",
                    "type": "string"
                  },
                  "tags": {
                    "description": "Zip code",
                    "type": "string"
                  },
                  "languageId": {
                    "description": "Identifier of the language.",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "customFields": {
                    "description": "Custom field data that should be added to the subscription.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/newsletter/unsubscribe": {
      "post": {
        "tags": [
          "Newsletter"
        ],
        "summary": "Remove a newsletter subscription",
        "description": "Removes a newsletter recipient from the mailing lists.",
        "operationId": "unsubscribeToNewsletter",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "description": "Email address that should be removed from the mailing lists.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Unsubscribing was successful."
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/navigation/{activeId}/{rootId}": {
      "post": {
        "tags": [
          "Category",
          "Endpoints supporting Criteria "
        ],
        "summary": "Fetch a navigation menu",
        "description": "This endpoint returns categories that can be used as a page navigation. You can either return them as a tree or as a flat list. You can also control the depth of the tree.\n\n    Instead of passing uuids, you can also use one of the following aliases for the activeId and rootId parameters to get the respective navigations of your sales channel.\n\n     * main-navigation\n     * service-navigation\n     * footer-navigation",
        "operationId": "readNavigation",
        "parameters": [
          {
            "name": "sw-include-seo-urls",
            "in": "header",
            "description": "Instructs Shopware to try and resolve SEO URLs for the given navigation item",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "activeId",
            "in": "path",
            "description": "Identifier of the active category in the navigation tree (if not used, just set to the same as rootId).",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "rootId",
            "in": "path",
            "description": "Identifier of the root category for your desired navigation tree. You can use it to fetch sub-trees of your navigation tree.",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Criteria"
                  },
                  {
                    "properties": {
                      "depth": {
                        "description": "Determines the depth of fetched navigation levels.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "buildTree": {
                        "description": "Return the categories as a tree or as a flat list.",
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All available navigations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NavigationRouteResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/script/{hook}": {
      "post": {
        "tags": [
          "API",
          "Script",
          "App"
        ],
        "summary": "Access point for different api logics which are provided by apps over script hooks",
        "operationId": "postScriptStoreApiRoute",
        "parameters": [
          {
            "name": "hook",
            "in": "path",
            "description": "Dynamic hook which used to build the hook name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns different structures of results based on the called script."
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/checkout/cart": {
      "get": {
        "tags": [
          "Cart"
        ],
        "summary": "Fetch or create a cart",
        "description": "Used to fetch the current cart or for creating a new one.",
        "operationId": "readCart",
        "responses": {
          "200": {
            "description": "Cart",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Cart"
        ],
        "summary": "Delete a cart",
        "description": "This route deletes the cart of the customer.",
        "operationId": "deleteCart",
        "responses": {
          "204": {
            "description": "Successfully deleted the cart",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/checkout/cart/line-item": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Add items to the cart",
        "description": "This route adds items to the cart. An item can be a product or promotion for example. They are referenced by the `referencedId`-parameter.\n\nExample: [Working with the cart - Guide](https://developer.shopware.com/docs/guides/integrations-api/store-api-guide/work-with-the-cart#adding-new-items-to-the-cart)",
        "operationId": "addLineItem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CartItems"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated cart.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Cart"
        ],
        "summary": "Remove items from the cart",
        "description": "DEPRECATED: use removeLineItem instead. This route removes items from the cart and recalculates it.\n\nExample: [Working with the cart - Guide](https://developer.shopware.com/docs/guides/integrations-api/store-api-guide/work-with-the-cart#deleting-items-in-the-cart)",
        "operationId": "removeLineItemDeprecated",
        "deprecated": true,
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "A list of product identifiers.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^[0-9a-f]{32}$"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated cart.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Cart"
        ],
        "summary": "Update items in the cart",
        "description": "This route updates items in the cart. A typical example is updating the quantity of an item.\n\nExample: [Working with the cart - Guide](https://developer.shopware.com/docs/guides/integrations-api/store-api-guide/work-with-the-cart#updating-items-in-the-cart)",
        "operationId": "updateLineItem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CartItems"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated cart.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/checkout/cart/line-item/delete": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Remove items from the cart",
        "description": "This route removes items from the cart and recalculates it.\n\nExample: [Working with the cart - Guide](https://developer.shopware.com/docs/guides/integrations-api/store-api-guide/work-with-the-cart#deleting-items-in-the-cart)",
        "operationId": "removeLineItem",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "ids"
                ],
                "properties": {
                  "ids": {
                    "description": "A list of product identifiers.",
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "type": "string",
                      "pattern": "^[0-9a-f]{32}$"
                    }
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated cart.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/checkout/order": {
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Create an order from a cart",
        "description": "Creates a new order from the current cart and deletes the cart.\n\nIf you are using the [prepared payment flow](https://developer.shopware.com/docs/concepts/commerce/checkout-concept/payments#2.1-prepare-payment-optional), this endpoint also receives additional transaction details. The exact name of the parameters depends on the implementation of the corresponding *payment handler*.",
        "operationId": "createOrder",
        "requestBody": {
          "description": "Contains additional metadata which is stored together with the order. It can also contain payment transaction details.",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "customerComment": {
                    "description": "Adds a comment from the customer to the order.",
                    "type": "string"
                  },
                  "affiliateCode": {
                    "description": "The affiliate code can be used to track which referrer the customer came through. An example could be `Price-comparison-company-XY`.",
                    "type": "string"
                  },
                  "campaignCode": {
                    "description": "The campaign code is used to track which action the customer came from. An example could be `Summer-Deals`",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/handle-payment": {
      "post": {
        "tags": [
          "Payment & Shipping"
        ],
        "summary": "Initiate a payment for an order",
        "description": "This generic endpoint is should be called to initiate a payment flow after an order has been created. The details of the payment flow can differ depending on the payment integration and might require calling additional operations or the setup of webhooks.\n\nThe endpoint internally calls the payment handler of the payment method currently set for the order.",
        "operationId": "handlePaymentMethod",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "orderId"
                ],
                "properties": {
                  "orderId": {
                    "description": "Identifier of an order",
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$"
                  },
                  "finishUrl": {
                    "description": "URL to which the client should be redirected after successful payment",
                    "type": "string"
                  },
                  "errorUrl": {
                    "description": "URL to which the client should be redirected after erroneous payment",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Redirect to external payment provider"
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/search-suggest": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Search for products (suggest)",
        "description": "Can be used to implement search previews or suggestion listings, that don’t require any interaction.",
        "operationId": "searchSuggest",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "required": [
                      "search"
                    ],
                    "properties": {
                      "search": {
                        "description": "Using the search parameter, the server performs a text search on all records based on their data model and weighting as defined in the entity definition using the SearchRanking flag.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "$ref": "#/components/schemas/ProductListingFlags"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a product listing containing all products and additional fields.\n\nNote: Aggregations, currentFilters and availableSortings are empty in this response. If you need them to display a listing, use the /search route instead.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListingResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/language": {
      "post": {
        "tags": [
          "System & Context",
          "Endpoints supporting Criteria "
        ],
        "summary": "Fetch languages",
        "description": "Perform a filtered search for languages.",
        "operationId": "readLanguages",
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Criteria"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing languages.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Language"
                          }
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/EntitySearchResult"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/category": {
      "post": {
        "tags": [
          "Category",
          "Endpoints supporting Criteria "
        ],
        "summary": "Fetch a list of categories",
        "description": "Perform a filtered search for categories.",
        "operationId": "readCategoryList",
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Criteria"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing categories.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Category"
                          }
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/EntitySearchResult"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/category/{navigationId}": {
      "post": {
        "tags": [
          "Category",
          "Endpoints supporting Criteria "
        ],
        "summary": "Fetch a single category",
        "description": "This endpoint returns information about the category, as well as a fully resolved (hydrated with mapping values) CMS page, if one is assigned to the category. You can pass slots which should be resolved exclusively.",
        "operationId": "readCategory",
        "parameters": [
          {
            "name": "navigationId",
            "in": "path",
            "description": "Identifier of the category to be fetched",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          },
          {
            "name": "slots",
            "in": "query",
            "description": "Resolves only the given slot identifiers. The identifiers have to be seperated by a '|' character",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Criteria"
                  },
                  {
                    "$ref": "#/components/schemas/ProductListingCriteria"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The loaded category with cms page",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/landing-page/{landingPageId}": {
      "post": {
        "tags": [
          "Content",
          "Endpoints supporting Criteria "
        ],
        "summary": "Fetch a landing page with the resolved CMS page",
        "description": "Loads a landing page by its identifier and resolves the CMS page.\n\n**Important notice**\n\nThe criteria passed with this route also affects the listing, if there is one within the cms page.",
        "operationId": "readLandingPage",
        "parameters": [
          {
            "name": "landingPageId",
            "in": "path",
            "description": "Identifier of the landing page.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Criteria"
                  },
                  {
                    "allOf": [
                      {
                        "properties": {
                          "slots": {
                            "description": "Resolves only the given slot identifiers. The identifiers have to be seperated by a `|` character.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "$ref": "#/components/schemas/ProductListingCriteria"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The loaded landing page with cms page",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LandingPage"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/search": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Search for products",
        "description": "Performs a search for products which can be used to display a product listing.",
        "operationId": "searchPage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "required": [
                      "search"
                    ],
                    "properties": {
                      "search": {
                        "description": "Using the search parameter, the server performs a text search on all records based on their data model and weighting as defined in the entity definition using the SearchRanking flag.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "$ref": "#/components/schemas/ProductListingCriteria"
                  },
                  {
                    "$ref": "#/components/schemas/ProductListingFlags"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a product listing containing all products and additional fields to display a listing.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListingResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/payment-method": {
      "post": {
        "tags": [
          "Payment Method",
          "Endpoints supporting Criteria "
        ],
        "summary": "Loads all available payment methods",
        "operationId": "readPaymentMethod",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Criteria"
                  },
                  {
                    "properties": {
                      "onlyAvailable": {
                        "description": "List only available",
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "total": {
                      "description": "Total amount",
                      "type": "integer"
                    },
                    "aggregations": {
                      "description": "aggregation result",
                      "type": "object"
                    },
                    "elements": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PaymentMethod"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/cms/{id}": {
      "post": {
        "tags": [
          "Content"
        ],
        "summary": "Fetch and resolve a CMS page",
        "description": "Loads a content management page by its identifier and resolve the slot data. This could be media files, product listing and so on.\n\n**Important notice**\n\nThe criteria passed with this route also affects the listing, if there is one within the cms page.",
        "operationId": "readCms",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the CMS page to be resolved",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "properties": {
                      "slots": {
                        "description": "Resolves only the given slot identifiers. The identifiers have to be seperated by a `|` character.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "$ref": "#/components/schemas/ProductListingCriteria"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The loaded cms page",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CmsPage"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/seo-url": {
      "post": {
        "tags": [
          "Sitemap & Routes",
          "Endpoints supporting Criteria "
        ],
        "summary": "Fetch SEO routes",
        "description": "Perform a filtered search for seo urls.",
        "operationId": "readSeoUrl",
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Criteria"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing seo urls.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/SeoUrl"
                          }
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/EntitySearchResult"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/customer-group-registration/config/{customerGroupId}": {
      "get": {
        "tags": [
          "Login & Registration"
        ],
        "summary": "Fetch registration settings for customer group",
        "operationId": "getCustomerGroupRegistrationInfo",
        "parameters": [
          {
            "name": "customerGroupId",
            "in": "path",
            "description": "Customer group id",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the customer group including registration settings.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerGroup"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/store-api/employee/create": {
      "post": {
        "tags": [
          "B2B"
        ],
        "summary": "Create a single employee and returns the employee",
        "description": "This route is used to create and return an employee",
        "operationId": "createEmployee",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "firstName": {
                    "description": "First name of the new employee",
                    "type": "string"
                  },
                  "lastName": {
                    "description": "Last name of the new employee",
                    "type": "string"
                  },
                  "email": {
                    "description": "Email of the new employee",
                    "type": "string"
                  },
                  "roleId": {
                    "description": "Id of the role of the new employee",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Employee entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/B2bEmployee"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/store-api/employee": {
      "post": {
        "tags": [
          "B2B"
        ],
        "summary": "Fetch a list of employees",
        "description": "This route is used to load employees",
        "operationId": "readEmployees",
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Criteria"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing employees",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/B2bEmployee"
                          }
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/EntitySearchResult"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/store-api/employee/{id}": {
      "post": {
        "tags": [
          "B2B"
        ],
        "summary": "Fetch a one employee by id",
        "description": "This route is used to fetch one employee by id",
        "operationId": "readEmployee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the employee to be fetched",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Employee entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/B2bEmployee"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "patch": {
        "tags": [
          "B2B"
        ],
        "summary": "Update a one employee by id",
        "description": "This route is used to update one employee by id",
        "operationId": "updateEmployee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the employee to be updated",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "firstName": {
                    "description": "New first name of the employee",
                    "type": "string"
                  },
                  "lastName": {
                    "description": "New last name of the employee",
                    "type": "string"
                  },
                  "email": {
                    "description": "New email of the employee",
                    "type": "string"
                  },
                  "roleId": {
                    "description": "New id of the role of the employee",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Employee entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/B2bEmployee"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "delete": {
        "tags": [
          "B2B"
        ],
        "summary": "Delete an employee by id",
        "description": "This route is used to delete one employee by id",
        "operationId": "deleteEmployee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the employee to be deleted",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content response"
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/store-api/employee/reinvite/{id}": {
      "post": {
        "tags": [
          "B2B"
        ],
        "summary": "Reinvite employee by id",
        "description": "This route is used to reinvite an employee via email by id",
        "operationId": "reinviteEmployee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the employee to be reinvited",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "storefrontUrl": {
                    "description": "URL of the storefront domain",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Employee entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/B2bEmployee"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/store-api/role/create": {
      "post": {
        "tags": [
          "B2B"
        ],
        "summary": "Create a single role and returns the role",
        "description": "This route is used to create and return an role",
        "operationId": "createRole",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "description": "Name of the new role",
                    "type": "string"
                  },
                  "permissions": {
                    "description": "Permissions of the new role",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "isDefaultRole": {
                    "description": "Ability to set the new role as default",
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/B2bRole"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/store-api/role": {
      "get": {
        "tags": [
          "B2B"
        ],
        "summary": "Fetch a list of roles",
        "description": "This route is used to load roles",
        "operationId": "readRoles",
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Criteria"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing roles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/B2bRole"
                          }
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/EntitySearchResult"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "post": {
        "tags": [
          "B2B"
        ],
        "summary": "Fetch a list of roles",
        "description": "This route is used to load roles",
        "operationId": "readRolesPOST",
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Criteria"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing roles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/B2bRole"
                          }
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/EntitySearchResult"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/store-api/role/{id}": {
      "get": {
        "tags": [
          "B2B"
        ],
        "summary": "Fetch a one role by id",
        "description": "This route is used to fetch one role by id",
        "operationId": "readRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the role to be fetched",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/B2bRole"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "patch": {
        "tags": [
          "B2B"
        ],
        "summary": "Update a one role by id",
        "description": "This route is used to update one role by id",
        "operationId": "updateRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the role to be updated",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "description": "New name of the role",
                    "type": "string"
                  },
                  "permissions": {
                    "description": "New permissions of the role",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "isDefaultRole": {
                    "description": "Ability to set the role as default",
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/B2bRole"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "delete": {
        "tags": [
          "B2B"
        ],
        "summary": "Delete an role by id",
        "description": "This route is used to delete one role by id",
        "operationId": "deleteRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the role to be fetched",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content response"
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/store-api/role/permissions": {
      "get": {
        "tags": [
          "B2B"
        ],
        "summary": "Fetch a available permissions",
        "description": "This route is used to fetch all available permissions",
        "operationId": "readPermissions",
        "responses": {
          "200": {
            "description": "Permission collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "permissionName": {
                                "type": "string"
                              },
                              "permissionDependencies": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "permissionGroupName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/EntitySearchResult"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/store-api/role/default": {
      "post": {
        "tags": [
          "B2B"
        ],
        "summary": "Sets the default role Id for new employees",
        "description": "This route is used to update the defaultRoleId for new employees",
        "operationId": "updateDefaultRoleId",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "description": "Id of the roleId to be set as default",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No content response"
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    }
  },
  "tags": [
    {
      "name": "Experimental",
      "description": "Experimental API, not part of our backwards compatibility promise, thus this API can introduce breaking changes at any time.",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://github.com/shopware/platform/blob/trunk/adr/2023-05-10-experimental-features.md"
      }
    }
  ]
}
